msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Title =
#: upstream/_guides/security-authentication-mechanisms.adoc:2
msgid "Authentication mechanisms in Quarkus"
msgstr "Quarkusの認証メカニズム"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:7
msgid ""
"The Quarkus Security framework supports multiple authentication mechanisms, which you can use to secure your applications.\n"
"You can also combine authentication mechanisms."
msgstr "Quarkus Securityフレームワークは、複数の認証メカニズムをサポートしており、これらを使用してアプリケーションを保護することができます。また、認証メカニズムを組み合わせることも可能です。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:12
msgid "Before you choose an authentication mechanism for securing your Quarkus applications, review the information provided."
msgstr "Quarkusアプリケーションを保護するための認証メカニズムを選択する前に、提供される情報を確認してください。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:15
msgid "Overview of supported authentication mechanisms"
msgstr "サポートされる認証メカニズムの概要"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:17
#, fuzzy
msgid ""
"Some supported authentication mechanisms are built into Quarkus, while others require you to add an extension.\n"
"All of these mechanisms are detailed in the following sections:"
msgstr "サポートされている認証メカニズムの中には、Quarkusに組み込まれているものもあれば、エクステンションを追加する必要があるものもあります。これらのメカニズムについては、次のセクションで詳しく説明します："

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:20
msgid "xref:built-in-authentication-mechanisms[Built-in authentication mechanisms]"
msgstr "xref:built-in-authentication-mechanisms[組込認証メカニズム]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:21
msgid "xref:other-supported-authentication-mechanisms[Other supported authentication mechanisms]"
msgstr "xref:other-supported-authentication-mechanisms[その他のサポートされる認証メカニズム]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:23
msgid "The following table maps specific authentication requirements to a supported mechanism that you can use in Quarkus:"
msgstr "次の表は、特定の認証要件と、Quarkusで使用できるサポートされる認証メカニズムを対応付けたものです:"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:25
msgid "Authentication requirements and mechanisms"
msgstr "認証要件とメカニズム"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:28
msgid "Authentication requirement"
msgstr "認証要件"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:305
msgid "Authentication mechanism"
msgstr "認証メカニズム"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:30
msgid "Username and password"
msgstr "ユーザー名とパスワード"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:30
#, fuzzy
msgid "xref:security-basic-authentication.adoc[Basic], xref:form-auth[Form-based authentication]"
msgstr "xref:security-basic-authentication.adoc[Basic] 、 xref:form-auth[フォームベース] 認証"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:32
msgid "Bearer access token"
msgstr "ベアラーアクセストークン"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:32
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication], xref:security-jwt.adoc[JWT], xref:security-oauth2.adoc[OAuth2]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDCベアラートークン] 認証、 xref:security-jwt.adoc[JWT] 、 xref:security-oauth2.adoc[OAuth2]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:34
msgid "Single sign-on (SSO)"
msgstr "シングルサインオン（SSO）"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:34
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC Code Flow], xref:form-auth[Form-based authentication]"
msgstr "xref:security-oidc-code-flow-authentication.adoc[OIDCコードフロー] 、 xref:form-auth[フォームベース認証]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:36
msgid "Client certificate"
msgstr "クライアント証明書"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:52
msgid "xref:mutual-tls[Mutual TLS authentication]"
msgstr "xref:mutual-tls[相互TLS認証]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:38
msgid "WebAuthn"
msgstr "WebAuthn"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:38
#, fuzzy
msgid "xref:security-webauthn.adoc[WebAuthn]"
msgstr "xref:security-webauthn.adoc[WebAuthn]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:40
msgid "Kerberos ticket"
msgstr "ケルベロスチケット"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:40
msgid "link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-kerberos/dev/index.html[Kerberos]"
msgstr "link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-kerberos/dev/index.html[Kerberos]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:43
#, fuzzy
msgid "For more information, see the following xref:table[Token authentication mechanism comparison] table."
msgstr "詳細については、以下の xref:table[トークン認証メカニズム比較] 表を参照のこと。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:46
msgid "Built-in authentication mechanisms"
msgstr "組込認証メカニズム"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:48
msgid "Quarkus Security provides the following built-in authentication support:"
msgstr "Quarkus Securityには、次のような組込の認証サポートがあります:"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:59
#, fuzzy
msgid "xref:security-basic-authentication.adoc[Basic authentication]"
msgstr "xref:security-basic-authentication.adoc[Basic認証]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:51
msgid "xref:form-auth[Form-based authentication]"
msgstr "xref:form-auth[フォームベース認証]"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:54
msgid "Basic authentication"
msgstr "Basic認証"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:56
msgid ""
"You can secure your Quarkus application endpoints with the built-in HTTP Basic authentication mechanism.\n"
"For more information, see the following documentation:"
msgstr "内蔵のHTTP Basic認証メカニズムを使用して、Quarkusアプリケーションエンドポイントを保護することができます。詳細については、次のドキュメントを参照してください:"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:60
msgid "xref:security-basic-authentication-howto.adoc[Enable Basic authentication]"
msgstr "xref:security-basic-authentication-howto.adoc[Basic認証の有効化]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:61
msgid "xref:security-jpa.adoc[Quarkus Security with Jakarta Persistence]"
msgstr "xref:security-jpa.adoc[Quarkus SecurityとJakarta Persistence]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:62
msgid "xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication and Jakarta Persistence]"
msgstr "xref:security-basic-authentication-tutorial.adoc[Basic認証とJakarta PersistenceによるQuarkusアプリケーションの保護]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:368
msgid "xref:security-identity-providers.adoc[Identity providers]"
msgstr "xref:security-identity-providers.adoc[アイデンティティ・プロバイダー]"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:66
msgid "Form-based authentication"
msgstr "フォームベース認証"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:68
#, fuzzy
msgid ""
"Quarkus provides form-based authentication that works similarly to traditional Servlet form-based auth.\n"
"Unlike traditional form authentication, the authenticated user is not stored in an HTTP session because Quarkus does not support clustered HTTP sessions.\n"
"Instead, the authentication information is stored in an encrypted cookie, which can be read by all cluster members who share the same encryption key."
msgstr "Quarkusは、従来のServletフォームベース認証と同様に動作するフォームベース認証を提供します。従来のフォーム認証とは異なり、Quarkusはクラスタ化されたHTTPセッションをサポートしていないため、認証されたユーザーはHTTPセッションに保存されません。代わりに、認証情報は暗号化されたCookieに保存され、同じ暗号化キーを共有するすべてのクラスタメンバーが読み取ることができます。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:72
#, fuzzy
msgid ""
"To apply encryption, add the `quarkus.http.auth.session.encryption-key` property, and ensure the value you set is at least 16 characters long.\n"
"The encryption key is hashed by using SHA-256.\n"
"The resulting digest is used as a key for AES-256 encryption of the cookie value.\n"
"The cookie contains an expiry time as part of the encrypted value, so all nodes in the cluster must have their clocks synchronized.\n"
"At one-minute intervals, a new cookie gets generated with an updated expiry time if the session is in use."
msgstr "暗号化を適用するには、 `quarkus.http.auth.session.encryption-key` プロパティを追加し、設定する値が16文字以上であることを確認します。暗号化キーはSHA-256を使用してハッシュ化されます。結果のダイジェストは、クッキー値のAES-256暗号化のキーとして使用されます。クッキーは暗号化された値の一部として有効期限を含むため、クラスタ内のすべてのノードのクロックが同期されている必要があります。1分間隔で、セッションが使用中であれば有効期限が更新された新しいクッキーが生成されます。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:78
#, fuzzy
msgid "With single-page applications (SPA), you typically want to avoid redirects by removing default page paths, as shown in the following example:"
msgstr "シングル・ページ・アプリケーション（SPA）では、通常、次の例に示すように、デフォルトのページ・パスを削除することでリダイレクトを回避したい："

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:90
msgid "The following properties can be used to configure form-based authentication:"
msgstr "フォームベース認証の設定には、以下のプロパティを使用できます:"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:92
#, fuzzy
msgid "link:{generated-dir}/config/quarkus-vertx-http-config-group-form-auth-config.adoc[role=include]"
msgstr "{generated-dir}/config/quarkus-vertx-http-config-group-form-auth-config.adoc"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:95
msgid "Mutual TLS authentication"
msgstr "相互TLS認証"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:97
msgid "Quarkus provides mutual TLS (mTLS) authentication so that you can authenticate users based on their X.509 certificates."
msgstr "Quarkusには相互TLS（mTLS）認証があり、X.509証明書に基づいてユーザーを認証することができます。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:99
#, fuzzy
msgid ""
"To use this authentication method, you must first enable SSL/TLS for your application.\n"
"For more information, see the xref:http-reference.adoc#ssl[Supporting secure connections with SSL]  section of the Quarkus \"HTTP reference\" guide."
msgstr "この認証方法を使用するには、まずアプリケーションで SSL/TLS を有効にする必要があります。詳細については、Quarkusの「HTTPリファレンス」ガイドの「 xref:http-reference.adoc#ssl[SSLを使用した安全な接続のサポート] 」のセクションを参照してください。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:102
#, fuzzy
msgid "After your application accepts secure connections, the next step is to configure the `quarkus.http.ssl.certificate.trust-store-file` property with the name of that file that holds all the certificates your application trusts. The specified file also includes information about how your application asks for certificates when a client, such as a browser or other service, tries to access one of its protected resources."
msgstr "アプリケーションがセキュアな接続を受け入れたら、次のステップでは、 `quarkus.http.ssl.certificate.trust-store-file` プロパティに、アプリケーションが信頼するすべての証明書を保持するファイル名を設定します。指定されたファイルには、ブラウザやその他のサービスなどのクライアントが保護されたリソースにアクセスしようとするときに、アプリケーションが証明書を要求する方法に関する情報も含まれます。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:114
#, fuzzy
msgid "The keystore where the server's private key is located."
msgstr "サーバーの秘密鍵があるキーストア。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:115
#, fuzzy
msgid "The truststore from which the trusted certificates are loaded."
msgstr "信頼された証明書がロードされるトラストストア。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:116
#, fuzzy
msgid ""
"With this value set to `required`, the server requires certificates from clients.\n"
"To relax this requirement so that the server accepts requests without a certificate, set the value to `REQUEST`.\n"
"This option is useful when you are also supporting authentication methods other than mTLS."
msgstr "この値を `required` に設定すると、サーバはクライアントの証明書を要求します。この要件を緩和して、サーバーが証明書なしでリクエストを受け付けるようにするには、値を `REQUEST` に設定する。 このオプションは、mTLS以外の認証方式もサポートしている場合に便利である。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:119
msgid "Defines a policy where only authenticated users should have access to resources from your application."
msgstr "認証されたユーザーのみがアプリケーションからリソースにアクセスできるようにするポリシーを定義します。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:121
#, fuzzy
msgid "When the incoming request matches a valid certificate in the truststore, your application can obtain the subject by injecting a `SecurityIdentity` as follows:"
msgstr "受信リクエストがトラストストアの有効な証明書と一致する場合、アプリケーションは 以下のように `SecurityIdentity` ："

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:124
msgid "Obtaining the subject"
msgstr "subjectの取得"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:137
#, fuzzy
msgid "You can also get the certificate by using the code outlined in the following example:"
msgstr "また、以下の例で説明するコードを使用して証明書を取得することもできる："

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:139
msgid "Obtaining the certificate"
msgstr "証明書の取得"

#. type: Title ====
#: upstream/_guides/security-authentication-mechanisms.adoc:149
msgid "Authorization"
msgstr "認可"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:151
#, fuzzy
msgid ""
"The information from the client certificate can be used to enhance Quarkus `SecurityIdentity`.\n"
"For example, you can add new roles after checking a client certificate subject name, and so on.\n"
"For more information about customizing `SecurityIdentity`, see the xref:security-customization.adoc#security-identity-customization[Security identity customization] section in the Quarkus \"Security tips and tricks\" guide."
msgstr "クライアント証明書の情報は、Quarkus `SecurityIdentity` 。たとえば、クライアント証明書のサブジェクト名を確認した後に、新しいロールを追加することなどが可能です。 `SecurityIdentity` のカスタマイズの詳細については、Quarkus の「セキュリティに関するヒントとトリック」ガイドの「 xref:security-customization.adoc#security-identity-customization[セキュリティ ID のカスタマイズ] 」のセクションを参照してください。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:156
msgid "Other supported authentication mechanisms"
msgstr "その他のサポートされる認証メカニズム"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:158
msgid "Quarkus Security also supports the following authentication mechanisms through extensions:"
msgstr "Quarkus Securityは、エクステンションによって、以下の認証メカニズムもサポートしています:"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:160
msgid "xref:webauthn-authentication[WebAuthn authentication]"
msgstr "xref:webauthn-authentication[WebAuthn 認証]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:161
msgid "xref:openid-connect-authentication[OpenID Connect authentication]"
msgstr "xref:openid-connect-authentication[OpenID Connect認証]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:162
msgid "xref:smallrye-jwt-authentication[SmallRye JWT authentication]"
msgstr "xref:smallrye-jwt-authentication[SmallRye JWT認証]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:163
msgid "xref:oauth2-authentication[OAuth2 authentication]"
msgstr "xref:oauth2-authentication[OAuth2認証]"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:166
msgid "WebAuthn authentication"
msgstr "WebAuthn認証"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:168
#, fuzzy
msgid ""
"https://webauthn.guide/[WebAuthn] is an authentication mechanism that replaces passwords.\n"
"When you write a service for registering new users, or logging them in, instead of asking for a password, you can use WebAuthn, which replaces the password.\n"
"For more information, see the  xref:security-webauthn.adoc[Secure a Quarkus application by using the WebAuthn authentication mechanism] guide."
msgstr "link:https://webauthn.guide/[WebAuthn] はパスワードに代わる認証メカニズムです。新規ユーザーの登録やログインを行うサービスを作成する際、パスワードの入力を求める代わりに、WebAuthnを使用することで、パスワードの代わりとすることができます。詳細については、 xref:security-webauthn.adoc[WebAuthn認証メカニズムを使用したQuarkusアプリケーションのセキュリティ] 確保ガイドを参照してください。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:173
msgid "OpenID Connect authentication"
msgstr "OpenID Connect 認証"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:175
#, fuzzy
msgid ""
"OpenID Connect (OIDC) is an identity layer that works on top of the OAuth 2.0 protocol.\n"
"OIDC enables client applications to verify the identity of a user based on the authentication performed by the OIDC provider and retrieve basic information about that user."
msgstr "OpenID Connect（OIDC）は、OAuth 2.0プロトコルの上で動作するIDレイヤです。OIDCは、クライアントアプリケーションがOIDCプロバイダによって実行された認証に基づいてユーザーの身元を確認し、そのユーザーに関する基本情報を取得することを可能にします。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:178
#, fuzzy
msgid ""
"The Quarkus `quarkus-oidc` extension provides a reactive, interoperable, multitenant-enabled OIDC adapter that supports Bearer token and Authorization Code Flow authentication mechanisms.\n"
"The Bearer token authentication mechanism extracts the token from the HTTP Authorization header.\n"
"The Authorization Code Flow mechanism redirects the user to an OIDC provider to authenticate the user's identity.\n"
"After the user is redirected back to Quarkus, the mechanism completes the authentication process by exchanging the provided code that was granted for the ID, access, and refresh tokens."
msgstr "Quarkus `quarkus-oidc` エクステンションは、ベアラートークンと認可コードフロー認証メカニズムをサポートする、リアクティブで相互運用可能なマルチテナント対応OIDCアダプタを提供します。ベアラートークン認証メカニズムは、HTTP Authorizationヘッダーからトークンを抽出します。認可コードフローメカニズムは、ユーザーを OIDC プロバイダーにリダイレクトし、ユーザーの ID を認証します。ユーザーがQuarkusにリダイレクトされた後、認証メカニズムは、ID、アクセス、リフレッシュトークンに対して付与されたコードを交換することで、認証プロセスを完了します。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:183
#, fuzzy
msgid ""
"You can verify ID and access JSON Web Token (JWT) tokens by using the refreshable JSON Web Key (JWK) set or introspect them remotely.\n"
"However, opaque, also known as binary tokens, can only be introspected remotely."
msgstr "リフレッシュ可能な JSON Web Key（JWK）セットを使用することで、ID を検証し、JSON Web Token（JWT）トークンにアクセスすることができます。ただし、不透明なトークン（バイナリートークンとも呼ばれる）は、リモートでイントロスペクトすることしかできません。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:188
#, fuzzy
msgid "Using the Quarkus OIDC extension, both the Bearer token and Authorization Code Flow authentication mechanisms use xref:smallrye-jwt-authentication[SmallRye JWT authentication] to represent JWT tokens as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "Quarkus OIDCエクステンションを使用すると、ベアラートークンと認可コードフロー認証メカニズムの両方が、SmallRye xref:smallrye-jwt-authentication[JWT認証を] 使用して、JWTトークンをMicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken` として表現します。"

#. type: Title ====
#: upstream/_guides/security-authentication-mechanisms.adoc:191
msgid "Additional Quarkus resources for OIDC authentication"
msgstr "OIDC認証のための追加のQuarkusリソース"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:193
#, fuzzy
msgid "For more information about OIDC authentication and authorization methods that you can use to secure your Quarkus applications, see the following resources:"
msgstr "Quarkusアプリケーションのセキュリティ確保に使用できるOIDC認証および認可方法の詳細については、以下のリソースを参照してください："

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:197
msgid "OIDC topic"
msgstr "OIDCトピック"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:197
msgid "Quarkus information resource"
msgstr "Quarkusの情報リソース"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:198
msgid "Bearer token authentication mechanism"
msgstr "ベアラートークン認証メカニズム"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:198
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDCベアラートークン認証]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:199
#, fuzzy
msgid "Authorization Code Flow authentication mechanism"
msgstr "認証コードフロー認証メカニズム"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:199
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc[OpenID Connect (OIDC) Authorization Code Flow mechanism]"
msgstr "xref:security-oidc-code-flow-authentication.adoc[OpenID Connect (OIDC) 認可コードフローメカニズム]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:200
#, fuzzy
msgid "OIDC and SAML Identity broker"
msgstr "OIDC と SAML アイデンティティ・ブローカー"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:200
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc#oidc-saml-broker[OpenID Connect (OIDC) Authorization Code Flow and SAML Identity broker]"
msgstr "xref:security-oidc-code-flow-authentication.adoc#oidc-saml-broker[OpenID Connect (OIDC) 認証コードフローと SAML アイデンティティブローカ]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:201
#, fuzzy
msgid "Multiple tenants that can support the Bearer token authentication or Authorization Code Flow mechanisms"
msgstr "ベアラートークン認証または認証コードフロー・メカニズムをサポートする複数のテナント"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:201
msgid "xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect (OIDC) multi-tenancy]"
msgstr "xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC)マルチテナントの使用]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:202
#, fuzzy
msgid "Securing Quarkus with commonly-used OpenID Connect providers"
msgstr "一般的に使用されているOpenID ConnectプロバイダでQuarkusを保護する"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:202
#, fuzzy
msgid "xref:security-openid-connect-providers.adoc[Configuring well-known OpenID Connect providers]"
msgstr "xref:security-openid-connect-providers.adoc[OpenID Connectプロバイダーの設定]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:203
msgid "Using Keycloak to centralize authorization"
msgstr "Keycloakを使用した認可の一元化"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:203
msgid "xref:security-keycloak-authorization.adoc[Using OpenID Connect (OIDC) and Keycloak to centralize authorization]"
msgstr "xref:security-keycloak-authorization.adoc[OpenID Connect (OIDC)とKeycloakを使用して認可を一元化]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:204
msgid "Configuring Keycloak programmatically"
msgstr "Keycloakのプログラムによる設定"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:204
msgid "xref:security-keycloak-admin-client.adoc[Using the Keycloak admin client]"
msgstr "xref:security-keycloak-admin-client.adoc[Keycloak admin クライアントの使用]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:209
#, fuzzy
msgid ""
"To enable the Quarkus OIDC extension at runtime, set `quarkus.oidc.tenant-enabled=false` at build time.\n"
"Then re-enable it at runtime by using a system property."
msgstr "Quarkus OIDCエクステンションを実行時に有効にするには、ビルド時に `quarkus.oidc.tenant-enabled=false` 。その後、システムプロパティを使用して、実行時に再有効化します。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:212
#, fuzzy
msgid "For more information about managing the individual tenant configurations in multitenant OIDC deployments, see the xref:security-openid-connect-multitenancy.adoc#disable-tenant[Disabling tenant configurations] section in the \"Using OpenID Connect (OIDC) multi-tenancy\" guide."
msgstr "マルチテナントOIDCデプロイメントにおける個々のテナント構成の管理の詳細については、「OpenID Connect（OIDC）のマルチテナントの使用」ガイドの「 xref:security-openid-connect-multitenancy.adoc#disable-tenant[テナント構成の無効化] 」のセクションを参照してください。"

#. type: Title ====
#: upstream/_guides/security-authentication-mechanisms.adoc:215
msgid "OpenID Connect client and filters"
msgstr "OpenID Connectクライアントとフィルター"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:217
msgid "The `quarkus-oidc-client` extension provides `OidcClient` for acquiring and refreshing access tokens from OpenID Connect and OAuth2 providers that support the following token grants:"
msgstr "`quarkus-oidc-client` エクステンションは、以下のトークングラントをサポートする OpenID Connect および OAuth2 プロバイダからアクセストークンを取得し、リフレッシュするための `OidcClient` を提供します。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:219
msgid "`client-credentials`"
msgstr "`client-credentials`"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:220
msgid "`password`"
msgstr "`password`"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:221
msgid "`refresh_token`"
msgstr "`refresh_token`"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:223
#, fuzzy
msgid ""
"The `quarkus-oidc-client-filter` extension requires the `quarkus-oidc-client` extension.\n"
"It provides JAX-RS RESTful Web Services `OidcClientRequestFilter`, which sets the access token acquired by `OidcClient` as the `Bearer` scheme value of the HTTP `Authorization` header.\n"
"This filter can be registered with MicroProfile REST client implementations injected into the current Quarkus endpoint, but it is not related to the authentication requirements of this service endpoint.\n"
"For example, it can be a public endpoint or be protected with mTLS."
msgstr "`quarkus-oidc-client-filter` エクステンションは `quarkus-oidc-client` エクステンションを必要とする。これは JAX-RS RESTful Web Services `OidcClientRequestFilter` を提供し、 `OidcClient` で取得したアクセストークンを HTTP `Authorization` ヘッダーの `Bearer` スキーム値として設定します。このフィルタは、現在の Quarkus エンドポイントに注入された MicroProfile REST クライアント実装に登録できますが、このサービスエンドポイントの認証要件とは関係ありません。たとえば、パブリックエンドポイントにすることも、mTLS で保護することもできます。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:230
msgid "In this scenario, you do not need to protect your Quarkus endpoint by using the Quarkus OpenID Connect adapter."
msgstr "このシナリオでは、Quarkus OpenID Connectアダプターを使用してQuarkusエンドポイントを保護する必要はありません。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:233
#, fuzzy
msgid ""
"The `quarkus-oidc-token-propagation` extension requires the `quarkus-oidc` extension.\n"
"It provides Jakarta REST `TokenCredentialRequestFilter`, which sets the OpenID Connect Bearer token or Authorization Code Flow access token as the `Bearer` scheme value of the HTTP `Authorization` header.\n"
"This filter can be registered with MicroProfile REST client implementations injected into the current Quarkus endpoint, which must be protected by using the Quarkus OIDC adapter.\n"
"This filter can propagate the access token to the downstream services."
msgstr "`quarkus-oidc-token-propagation` エクステンションには `quarkus-oidc` エクステンションが必要です。これは Jakarta REST `TokenCredentialRequestFilter` を提供し、OpenID Connect ベアラートークンまたは認可コードフローアクセストークンを HTTP `Authorization` ヘッダーの `Bearer` スキーム値として設定します。このフィルターは、Quarkus OIDC アダプターを使用して保護する必要がある現在の Quarkus エンドポイントに注入された MicroProfile REST クライアント実装に登録できます。このフィルタは、アクセストークンを下流のサービスに伝達することができます。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:238
msgid "For more information, see the xref:security-openid-connect-client.adoc[OpenID Connect client and token propagation quickstart] and xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) and OAuth2 client and filters reference] guides."
msgstr "詳しくは、 xref:security-openid-connect-client.adoc[OpenID Connectクライアントとトークン伝搬クイックスタート] 、 xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) とOAuth2クライアントとフィルターのリファレンス] ガイドをご覧ください。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:241
msgid "SmallRye JWT authentication"
msgstr "SmallRye JWT 認証"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:243
#, fuzzy
msgid ""
"The `quarkus-smallrye-jwt` extension provides a MicroProfile JSON Web Token (JWT) 2.1 implementation and multiple options to verify signed and encrypted `JWT` tokens.\n"
"It represents them as `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "`quarkus-smallrye-jwt` エクステンションは、MicroProfile JSON Web Token (JWT) 2.1 実装と、署名および暗号化された `JWT` トークンを検証するための複数のオプションを提供します。これらは `org.eclipse.microprofile.jwt.JsonWebToken` として表現されます。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:246
#, fuzzy
msgid ""
"`quarkus-smallrye-jwt` is an alternative to the `quarkus-oidc` Bearer token authentication mechanism and verifies only `JWT` tokens by using either Privacy Enhanced Mail (PEM) keys or the refreshable `JWK` key set.\n"
"`quarkus-smallrye-jwt` also provides the JWT generation API, which you can use to easily create `signed`, `inner-signed`, and `encrypted` `JWT` tokens."
msgstr "`quarkus-smallrye-jwt` は、 ベアラートークン認証メカニズムの代替であり、Privacy Enhanced Mail（PEM）キーまたはリフレッシュ可能な キーセットのいずれかを使用して、 トークンのみを検証します。 は JWT 生成 API も提供しており、これを使用して 、 、  トークンを簡単に作成できます。 `quarkus-oidc` `JWK` `JWT` `quarkus-smallrye-jwt` `signed` `inner-signed` `encrypted` `JWT` "

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:249
#, fuzzy
msgid "For more information, see the  xref:security-jwt.adoc[Using JWT RBAC] guide."
msgstr "詳細については、「 xref:security-jwt.adoc[JWT RBACの使用] 」ガイドを参照してください。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:252
msgid "OAuth2 authentication"
msgstr "OAuth2 認証"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:254
#, fuzzy
msgid ""
"`quarkus-elytron-security-oauth2` provides an alternative to the Quarkus `quarkus-oidc` Bearer token authentication mechanism extension.\n"
"`quarkus-elytron-security-oauth2` is based on `Elytron` and is primarily intended for introspecting opaque tokens remotely.\n"
"For more information, see the Quarkus xref:security-oauth2.adoc[Using OAuth2] guide."
msgstr "`quarkus-elytron-security-oauth2` は、Quarkus ベアラートークン認証メカニズムエクステンションの代替を提供します。 は に基づいており、主にリモートで不透明トークンをイントロスペクトすることを目的としています。詳細については、Quarkus `quarkus-oidc` `quarkus-elytron-security-oauth2` `Elytron` xref:security-oauth2.adoc[Using OAuth2] ガイドを参照してください。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:259
msgid "Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms"
msgstr "OpenID Connect、SmallRye JWT、OAuth2認証メカニズムからの選択"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:261
msgid "Use the following information to select the appropriate token authentication mechanism to secure your Quarkus applications."
msgstr "次の情報を使用して、Quarkusアプリケーションを保護するために適切なトークン認証メカニズムを選択して下さい。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:263
msgid "List of authentication mechanism use-cases"
msgstr "認証メカニズムのユースケース一覧"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:265
#, fuzzy
msgid ""
"`quarkus-oidc` requires an OpenID Connect provider such as Keycloak, which can verify the bearer tokens or authenticate the end users with the Authorization Code flow.\n"
"In both cases, `quarkus-oidc` requires a connection to the specified OpenID Connect provider."
msgstr "`quarkus-oidc` には、ベアラートークンを検証したり、認可コードフローでエンドユーザーを認証したりできる、KeycloakなどのOpenID Connectプロバイダーが必要です。どちらの場合も、 、指定されたOpenID Connectプロバイダへの接続が必要です。 `quarkus-oidc` "

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:268
#, fuzzy
msgid ""
"If the user authentication requires Authorization Code flow, or you need to support multiple tenants, use `quarkus-oidc`.\n"
"`quarkus-oidc` can also request user information by using both Authorization Code Flow and Bearer access tokens."
msgstr "ユーザー認証に認可コードフローが必要な場合、または複数のテナントをサポートする必要がある場合は、 `quarkus-oidc` を使用してください。 `quarkus-oidc` は、認可コードフローとベアラー・アクセストークンの両方を使用してユーザー情報を要求することもできます。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:271
#, fuzzy
msgid "If your bearer tokens must be verified, use `quarkus-oidc`, `quarkus-smallrye-jwt`, or `quarkus-elytron-security-oauth2`."
msgstr "ベアラートークンを検証する必要がある場合は、 `quarkus-oidc` 、 `quarkus-smallrye-jwt` 、または `quarkus-elytron-security-oauth2` を使用してください。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:273
#, fuzzy
msgid ""
"If your bearer tokens are in a JSON web token (JWT) format, you can use any extensions in the preceding list.\n"
"Both `quarkus-oidc` and `quarkus-smallrye-jwt` support refreshing the `JsonWebKey` (JWK) set when the OpenID Connect provider rotates the keys.\n"
"Therefore, if remote token introspection must be avoided or is unsupported by the providers, use `quarkus-oidc` or `quarkus-smallrye-jwt` for verifying JWT tokens."
msgstr "ベアラートークンがJSONウェブトークン（JWT）形式である場合、前述のリストにあるどのエクステンションも使用できます。 `quarkus-oidc` と `quarkus-smallrye-jwt` はどちらも、OpenID Connect プロバイダがキーをローテーションする際に `JsonWebKey` (JWK) セットをリフレッシュすることをサポートしています。したがって、リモート・トークン・イントロスペクションを避けなければならない場合や、プロバイダがサポートしていない場合は、JWTトークンの検証に `quarkus-oidc` または `quarkus-smallrye-jwt` を使用してください。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:277
#, fuzzy
msgid ""
"To introspect the JWT tokens remotely, you can use either `quarkus-oidc` or `quarkus-elytron-security-oauth2` because they support verifying the opaque or binary tokens by using remote introspection.\n"
"`quarkus-smallrye-jwt` does not support the remote introspection of both opaque or JWT tokens but instead relies on the locally available keys that are usually retrieved from the OpenID Connect provider."
msgstr "JWT トークンをリモートでイントロスペクションするには、 `quarkus-oidc` または `quarkus-elytron-security-oauth2` のいずれかを使用することができます。 `quarkus-smallrye-jwt` は、opaque トークンまたは JWT トークンの両方のリモート・イントロスペクションをサポートしていませんが、その代わりに、通常は OpenID Connect プロバイダーから取得されるローカルで利用可能なキーに依存します。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:280
#, fuzzy
msgid ""
"`quarkus-oidc` and `quarkus-smallrye-jwt` support the JWT and opaque token injection into the endpoint code.\n"
"Injected JWT tokens provide more information about the user.\n"
"All extensions can have the tokens injected as `Principal`."
msgstr "`quarkus-oidc` と 、エンドポイント・コードへのJWTと不透明トークンの注入をサポートしている。注入された JWT トークンは、ユーザーに関するより多くの情報を提供する。すべてのエクステンションは、 としてトークンを注入することができる。 `quarkus-smallrye-jwt` `Principal`"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:284
#, fuzzy
msgid ""
"`quarkus-smallrye-jwt` supports more key formats than `quarkus-oidc`.\n"
"`quarkus-oidc` uses only the JWK-formatted keys that are part of a JWK set, whereas `quarkus-smallrye-jwt` supports PEM keys."
msgstr "`quarkus-smallrye-jwt` `quarkus-oidc` `quarkus-oidc` は、JWKセットの一部であるJWK形式の鍵のみを使用するのに対し、 はPEM鍵をサポートする。 `quarkus-smallrye-jwt` "

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:287
#, fuzzy
msgid ""
"`quarkus-smallrye-jwt` handles locally signed, inner-signed-and-encrypted, and encrypted tokens.\n"
"In contrast, although `quarkus-oidc` and `quarkus-elytron-security-oauth2` can also verify such tokens, they treat them as opaque tokens and verify them through remote introspection."
msgstr "`quarkus-smallrye-jwt` は、ローカルで署名されたトークン、内部で署名および暗号化されたトークン、お よび暗号化されたトークンを処理する。対照的に、 と はそのようなトークンも検証できるが、それらは不透明なトークンとして扱われ、リモートのイントロスペクションによって検証される。 `quarkus-oidc` `quarkus-elytron-security-oauth2` "

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:290
msgid "If you need a lightweight library for the remote introspection of opaque or JWT tokens, use `quarkus-elytron-security-oauth2`."
msgstr "不透明トークンやJWTトークンのリモートイントロスペクションのための軽量なライブラリが必要な場合は、 `quarkus-elytron-security-oauth2` を使用してください。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:294
msgid ""
"Architectural considerations drive your decision to use opaque or JSON web token (JWT) token format.\n"
"Opaque tokens tend to be much shorter than JWT tokens but need most of the token-associated state to be maintained in the provider database.\n"
"Opaque tokens are effectively database pointers."
msgstr "トークン形式として、不透明トークンかJSONウェブトークン（JWT）のどちらを使用するかは、アーキテクチャの検討によって決定されます。不透明トークンはJWTトークンよりもはるかに短い傾向がありますが、トークンに関連する状態のほとんどをプロバイダーのデータベースで維持する必要があります。不透明トークンは、事実上データベース・ポインタです。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:298
#, fuzzy
msgid ""
"JWT tokens are significantly longer than opaque tokens.\n"
"Nonetheless, the providers effectively delegate most of the token-associated state to the client by storing it as the token claims and either signing or encrypting them."
msgstr "JWTトークンは不透明トークンよりもかなり長い。それにもかかわらず、プロバイダーは、トークンに関連する状態のほとんどを、トークン・クレームとして保存し、署名するか暗号化することによって、クライアントに効果的に委譲する。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:303
msgid "Token authentication mechanism comparison"
msgstr "トークン認証メカニズムの比較"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:305
msgid "Feature required"
msgstr "必要な機能"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:307
msgid "`quarkus-oidc`"
msgstr "`quarkus-oidc`"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:307
msgid "`quarkus-smallrye-jwt`"
msgstr "`quarkus-smallrye-jwt`"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:307
msgid "`quarkus-elytron-security-oauth2`"
msgstr "`quarkus-elytron-security-oauth2`"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:309
msgid "Bearer JWT verification"
msgstr "ベアラーJWTの検証"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:309
msgid "Local verification or introspection"
msgstr "ローカル検証もしくはイントロスペクション"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:322
msgid "Local verification"
msgstr "ローカル検証"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:322
msgid "Introspection"
msgstr "イントロスペクション"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:311
msgid "Bearer opaque token verification"
msgstr "ベアラー不透明Tokenの検証"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:324
msgid "No"
msgstr "No"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:312
msgid "Refreshing `JsonWebKey` set for verifying JWT tokens"
msgstr "JWTトークンを検証するための `JsonWebKey` セットのリフレッシュ"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:324
msgid "Yes"
msgstr "Yes"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:313
msgid "Represent token as `Principal`"
msgstr "トークンを `Principal` として表現"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:314
msgid "Inject JWT as MP JWT"
msgstr "MP JWTとしてJWTをインジェクト"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:316
msgid "Authorization code flow"
msgstr "認可コードフロー"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:317
msgid "Multi-tenancy"
msgstr "マルチテナンシー"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:318
msgid "User information support"
msgstr "ユーザー情報のサポート"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:319
msgid "PEM key format support"
msgstr "PEMキーフォーマットサポート"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:321
msgid "SecretKey support"
msgstr "SecretKey のサポート"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:321
msgid "In JSON Web Key (JWK) format"
msgstr "JSON Web Key（JWK）フォーマットで"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:322
msgid "Inner-signed and encrypted or encrypted tokens"
msgstr "内部署名付き暗号化トークン、または暗号化トークン"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:323
msgid "Custom token verification"
msgstr "カスタムトークン検証"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:323
msgid "With injected JWT parser"
msgstr "注入されたJWTパーサーで"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms.adoc:324
msgid "JWT as a cookie support"
msgstr "クッキーとしてのJWTのサポート"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:328
msgid "Combining authentication mechanisms"
msgstr "認証メカニズムの組み合わせ"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:330
#, fuzzy
msgid ""
"If different sources provide the user credentials, you can combine authentication mechanisms.\n"
"For example, you can combine the built-in Basic and the Quarkus `quarkus-oidc` Bearer token authentication mechanisms."
msgstr "異なるソースからユーザークレデンシャルが提供される場合、認証メカニズムを組み合わせることができます。たとえば、組み込みのBasic認証とQuarkus `quarkus-oidc` ベアラートークン認証メカニズムを組み合わせることができます。"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:335
#, fuzzy
msgid "You cannot combine the Quarkus `quarkus-oidc` Bearer token and `smallrye-jwt` authentication mechanisms because both mechanisms attempt to verify the token extracted from the HTTP Bearer token authentication scheme."
msgstr "どちらの認証メカニズムも、HTTPベアラートークン認証スキームから抽出されたトークンの検証を試みるため、Quarkus `quarkus-oidc` ベアラートークンと `smallrye-jwt` 認証メカニズムを組み合わせることはできません。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms.adoc:338
msgid "Path-specific authentication mechanisms"
msgstr "パス固有認証メカニズム"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:340
msgid "The following configuration example demonstrates how you can enforce a single selectable authentication mechanism for a given request path:"
msgstr "次の設定例は、あるリクエストパスに対して、選択可能な単一の認証メカニズムを強制する方法を示しています："

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:356
msgid "Ensure that the value of the `auth-mechanism` property matches the authentication scheme supported by `HttpAuthenticationMechanism`, for example, `basic`, `bearer`, or `form`."
msgstr "`auth-mechanism` プロパティの値が、 `HttpAuthenticationMechanism` がサポートする認証スキーム（例えば、 `basic` 、 `bearer` 、 `form` ）と一致しているようにして下さい。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:358
msgid "Proactive authentication"
msgstr "プロアクティブ認証"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:360
#, fuzzy
msgid ""
"Proactive authentication is enabled in Quarkus by default.\n"
"This means that if an incoming request has a credential, the request will always be authenticated, even if the target page does not require authentication.\n"
"For more information, see the Quarkus xref:security-proactive-authentication.adoc[Proactive authentication] guide."
msgstr "Quarkusでは、プロアクティブ認証がデフォルトで有効になっています。つまり、受信リクエストにクレデンシャルがある場合、ターゲットページが認証を必要としなくても、リクエストは常に認証されます。詳細については、Quarkusプロアクティブ xref:security-proactive-authentication.adoc[認証] ガイドを参照してください。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms.adoc:364
msgid "References"
msgstr "参照"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:366
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:367
#, fuzzy
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr "xref:security-architecture.adoc[Quarkus セキュリティアーキテクチャ]"

#. type: Plain Text
#: upstream/_guides/security-authentication-mechanisms.adoc:369
msgid "xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints]"
msgstr "xref:security-authorize-web-endpoints-reference.adoc[ウェブエンドポイントの認可]"
