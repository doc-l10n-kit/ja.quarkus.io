msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _guides/websockets-next-reference.adoc
msgid "WebSockets Next extension reference guide"
msgstr "WebSockets Next エクステンションリファレンスガイド"

#: _guides/websockets-next-reference.adoc
msgid "The `quarkus-websockets-next` extension provides a modern declarative API to define WebSocket server and client endpoints."
msgstr ""

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket protocol"
msgstr "WebSocketプロトコル"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The _WebSocket_ protocol, documented in the https://datatracker.ietf.org/doc/html/rfc6455[RFC6455], establishes a standardized method for creating a bidirectional communication channel between a client and a server through a single TCP connection.\n"
"Unlike HTTP, WebSocket operates as a distinct TCP protocol but is designed to function seamlessly alongside HTTP.\n"
"For example, it reuses the same ports and is compatible with the same security mechanisms."
msgstr "link:https://datatracker.ietf.org/doc/html/rfc6455[RFC6455] で文書化されている _WebSocket_ プロトコルは、単一の TCP 接続を通じてクライアントとサーバーの間に双方向通信チャネルを作成するための標準化された方法を確立します。HTTPとは異なり、WebSocketは別のTCPプロトコルとして動作しますが、HTTPとシームレスに機能するように設計されています。例えば、同じポートを再利用し、同じセキュリティ機構と互換性があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The interaction using WebSocket initiates with an HTTP request employing the 'Upgrade' header to transition to the WebSocket protocol.\n"
"Instead of a `200 OK` response, the server replies with a `101 Switching Protocols` response to upgrade the HTTP connection to a WebSocket connection.\n"
"Following this successful handshake, the TCP socket utilized in the initial HTTP upgrade request remains open, allowing both client and server to exchange messages in both direction continually."
msgstr "WebSocket を使用した対話は、WebSocket プロトコルに移行するために 'Upgrade' ヘッダーを使用する HTTP リクエストで開始します。サーバーは `200 OK` レスポンスの代わりに、HTTP 接続を WebSocket 接続にアップグレードするための `101 Switching Protocols` レスポンスで応答します。このハンドシェイクが成功すると、最初の HTTP アップグレードリクエストで使用された TCP ソケットは開いたままになり、クライアントとサーバーの両方が継続的に双方向のメッセージを交換できるようになります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "HTTP and WebSocket architecture styles"
msgstr "HTTPとWebSocketのアーキテクチャスタイル"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Despite WebSocket's compatibility with HTTP and its initiation through an HTTP request, it's crucial to recognize that the two protocols lead to distinctly different architectures and programming models."
msgstr "WebSocket は HTTP と互換性があり、HTTP リクエストによって開始されるにもかかわらず、2 つのプロトコルは明確に異なるアーキテクチャとプログラミングモデルにつながることを認識することが重要です。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"With HTTP/REST, applications are structured around resources/endpoints that handle various HTTP methods and paths.\n"
"Client interaction occurs through emitting HTTP requests with appropriate methods and paths, following a request-response pattern.\n"
"The server routes incoming requests to corresponding handlers based on path, method, and headers and then replies with a well-defined response."
msgstr "HTTP/RESTでは、アプリケーションはさまざまなHTTPメソッドとパスを扱うリソース/エンドポイントを中心に構成されます。クライアントとの対話は、リクエスト-レスポンスパターンに従って、適切なメソッドとパスを持つ HTTP リクエストを発行することで行われます。サーバーは、パス、メソッド、ヘッダーに基づいて、入ってきたリクエストを対応するハンドラーにルーティングし、その後、明確に定義されたレスポンスで返信します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Conversely, WebSocket typically involves a single endpoint for the initial HTTP connection, after which all messages utilize the same TCP connection.\n"
"It introduces an entirely different interaction model: asynchronous and message-driven."
msgstr "逆に、WebSocketは通常、最初のHTTP接続に単一のエンドポイントを使用し、その後すべてのメッセージは同じTCP接続を使用します。WebSocket は、非同期かつメッセージ駆動型という、まったく異なる相互作用モデルを導入しています。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket is a low-level transport protocol, in contrast to HTTP.\n"
"Message formats, routing, or processing require prior agreement between the client and server regarding message semantics."
msgstr "WebSocketはHTTPとは対照的に、低レベルのトランスポートプロトコルです。メッセージの形式、ルーティング、または処理には、メッセージのセマンティクスに関するクライアントとサーバー間の事前の合意が必要です。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "For WebSocket clients and servers, the `Sec-WebSocket-Protocol` header in the HTTP handshake request allows negotiation of a higher-level messaging protocol. In its absence, the server and client must establish their own conventions."
msgstr "WebSocket クライアントとサーバーでは、HTTP ハンドシェイクリクエストの `Sec-WebSocket-Protocol` ヘッダーが、より高いレベルのメッセージングプロトコルのネゴシエーションを可能にします。このヘッダがない場合、サーバーとクライアントは独自の規約を確立する必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Quarkus WebSockets vs. Quarkus WebSockets Next"
msgstr "Quarkus WebSocketsとQuarkus WebSockets Nextの比較"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"This guide utilizes the `quarkus-websockets-next` extension, an implementation of the WebSocket API boasting enhanced efficiency and usability compared to the legacy `quarkus-websockets` extension.\n"
"The original `quarkus-websockets` extension remains accessible, will receive ongoing support, but it's unlikely to receive to feature development."
msgstr "このガイドでは、WebSocket API の実装である `quarkus-websockets-next` 拡張機能を使用します。この拡張機能は、従来の `quarkus-websockets` 拡張機能よりも効率と使いやすさが向上しています。オリジナルの `quarkus-websockets` エクステンションは引き続きアクセス可能で、継続的なサポートを受けられますが、機能開発が行われる可能性は低いです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Unlike `quarkus-websockets`, the `quarkus-websockets-next` extension does **not** implement the Jakarta WebSocket specification.\n"
"Instead, it introduces a modern API, prioritizing simplicity of use.\n"
"Additionally, it's tailored to integrate with Quarkus' reactive architecture and networking layer seamlessly."
msgstr "`quarkus-websockets` とは異なり、 `quarkus-websockets-next` 拡張は Jakarta WebSocket 仕様を実装して *いません* 。その代わりに、使いやすさを優先した最新のAPIを導入しています。さらに、Quarkusのリアクティブアーキテクチャやネットワークレイヤーとシームレスに統合できるように調整されています。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The annotations utilized by the Quarkus WebSockets next extension differ from those in JSR 356 despite, sometimes, sharing the same name.\n"
"The JSR annotations carry a semantic that the Quarkus WebSockets Next extension does not follow."
msgstr "Quarkus WebSockets Next拡張機能で使用されるアノテーションは、JSR 356のアノテーションと名前が同じであるにもかかわらず、異なります。JSRのアノテーションは、Quarkus WebSockets Nextエクステンションが従わないセマンティクスを持ちます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use the WebSockets Next extension"
msgstr "WebSockets Next 拡張機能を使用します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"To use the `websockets-next` extension, you need to add the `io.quarkus.quarkus-websockets-next` extension to your project.\n"
"In your `pom.xml` file, add:"
msgstr "`websockets-next` 拡張機能を使用するには、 `io.quarkus.quarkus-websockets-next` 拡張機能をプロジェクトに追加する必要があります。 `pom.xml` ファイルに"

#: _guides/websockets-next-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _guides/websockets-next-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Configure the WebSocket server"
msgstr "WebSocketサーバーの設定"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket handling reuses the _main_ HTTP server."
msgstr "WebSocketの処理は、 _メインの_ HTTPサーバーを再利用します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Thus, the configuration of the WebSocket server is done in the `quarkus.http.` configuration section."
msgstr "したがって、WebSocketサーバーの設定は `quarkus.http.` の設定セクションで行います。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket paths configured within the application are concatenated with the root path defined by `quarkus.http.root` (which defaults to /).\n"
"This concatenation ensures that WebSocket endpoints are appropriately positioned within the application's URL structure."
msgstr "アプリケーション内で設定された WebSocket パスは、 `quarkus.http.root` （デフォルトは /）で定義されたルートパスに連結されます。この連結により、WebSocket のエンドポイントがアプリケーションの URL 構造内に適切に配置されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Refer to the xref:http-reference.adoc[HTTP guide] for more details."
msgstr "詳しくは xref:http-reference.adoc[HTTPガイドを] ご覧ください。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Declare WebSocket endpoints"
msgstr "WebSocketエンドポイントの宣言"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "To declare web socket endpoints, you need to create a class annotated with `@io.quarkus.websockets.next.WebSocket` and define the path of the WebSocket endpoint:"
msgstr "ウェブソケットエンドポイントを宣言するには、 `@io.quarkus.websockets.next.WebSocket` でアノテーションされたクラスを作成し、ウェブソケットエンドポイントのパスを定義する必要があります："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Thus, client can connect to this web socket endpoint using `ws://localhost:8080/chat/your-name`.\n"
"If TLS is used, the URL is `wss://localhost:8443/chat/your-name`."
msgstr "したがって、クライアントは `ws://localhost:8080/chat/your-name` を使ってこのウェブソケットエンドポイントに接続できます。TLSを使用する場合、URLは `wss://localhost:8443/chat/your-name` になります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Path parameters"
msgstr "パスパラメータ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The path of the WebSocket endpoint can contain path parameters.\n"
"The syntax is the same as for JAX-RS resources: `{parameterName}`."
msgstr "WebSocket エンドポイントのパスには、パス・パラメータを含めることができます。構文は JAX-RS リソースと同じです： `{parameterName}` ."

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Access to the path parameter values is done through the `io.quarkus.websockets.next.WebSocketConnection` _session_ object:"
msgstr "パス・パラメータ値へのアクセスは、 `io.quarkus.websockets.next.WebSocketConnection` _セッション・_ オブジェクトを通じて行われます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Path parameter values are always strings.\n"
"If the path parameter is not present in the path, the `pathParam` method returns `null`."
msgstr "パスパラメータの値は常に文字列です。path パラメータがパスに存在しない場合、 `pathParam` メソッドは `null` を返します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Query parameters are not supported. However, you can access the query using `session.handshakeRequest().query()`"
msgstr "クエリ・パラメータはサポートされていません。しかし `session.handshakeRequest().query()`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sub-websockets endpoints"
msgstr "サブウェブソケットエンドポイント"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"A class annotated with `@WebSocket` can encapsulate static nested classes, which are also annotated with `@WebSocket` and represent _sub-web_ sockets.\n"
"The resulting path of these sub-web sockets concatenates the path from the enclosing class and the nested class.\n"
"The resulting path is normalized, following the HTTP URL rules."
msgstr "`@WebSocket` `@WebSocket` のアノテーションが付けられたクラスは、静的な入れ子になったクラスをカプセル化することができます。これらのサブ・ウェブ・ソケットの結果のパスは、包含するクラスとネストされたクラスのパスを連結したものです。結果のパスは HTTP URL の規則に従って正規化されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Sub-web sockets inherit access to the path parameters declared in the `@WebSocket` annotation of both the enclosing and nested classes.\n"
"The `consumePrimary` method within the enclosing class can access the `version` parameter in the following example.\n"
"Meanwhile, the `consumeNested` method within the nested class can access both `version` and `id` parameters:"
msgstr "サブウェブ・ソケットは、包含クラスと入れ子クラスの両方の `@WebSocket` アノテーションで宣言されたパ ス・パラメータへのアクセスを継承します。以下の例では、包含クラス内の `consumePrimary` メソッドが `version` パラメータにアクセスできます。一方、入れ子クラス内の `consumeNested` メソッドは、 `version` と `id` の両方のパラメータにアクセスできます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "CDI Scopes for WebSocket Endpoints"
msgstr "WebSocketエンドポイントのCDIスコープ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Classes annotated with `@WebSocket` are managed as CDI beans, allowing for flexible scope management within the application.\n"
"By default, WebSocket endpoints are considered in the singleton pseudo-scope.\n"
"However, developers can specify alternative scopes to suit their specific requirements:"
msgstr "`@WebSocket` でアノテーションされたクラスは CDI Bean として管理され、アプリケーション内で柔軟なスコープ管理が可能になります。デフォルトでは、WebSocket エンドポイントはシングルトン擬似スコープで考慮されます。しかし、開発者は特定の要件に合わせて別のスコープを指定できます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Furthermore, each WebSocket connection is associated with its own _session_ scope.\n"
"When the `@OnOpen` method is invoked, a session scope corresponding to the WebSocket connection is established.\n"
"Subsequent calls to `@On[Text|Binary]Message` or `@OnClose` methods utilize this same session scope.\n"
"The session scope remains active until the `@OnClose` method completes execution, at which point it is terminated."
msgstr "さらに、各 WebSocket 接続は独自の _セッション_ スコープに関連付けられています。 `@OnOpen` メソッドが呼び出されると、WebSocket 接続に対応するセッション スコープが確立されます。その後、 `@On[Text|Binary]Message` または `@OnClose` メソッドを呼び出すと、この同じセッション スコープが使用されます。セッション スコープは、 `@OnClose` メソッドの実行が完了するまでアクティブなままです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `WebSocketConnection` object, which represents the connection itself, is also a session-scoped bean, allowing developers to access and manage WebSocket-specific data within the context of the session."
msgstr "接続そのものを表す `WebSocketConnection` オブジェクトもセッションにスコープされた Bean であるため、開発者はセッションのコンテキスト内で WebSocket 固有のデータにアクセスして管理できます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In cases where a WebSocket endpoint does not declare an `@OnOpen` method, the session scope is still created.\n"
"It remains active until the connection terminates, regardless of the presence of an `@OnClose` method."
msgstr "WebSocket エンドポイントが `@OnOpen` メソッドを宣言していない場合でも、セッションスコープは作成されます。セッションスコープは、 `@OnClose` メソッドがあろうとなかろうと、接続が終了するまでアクティブなままです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnTextMessage,` `@OnBinaryMessage,` `@OnOpen`, and `@OnClose` also have the request scoped activated for the duration of the method execution (until it produced its result)."
msgstr "`@OnTextMessage,` `@OnBinaryMessage,` `@OnOpen` `@OnClose` でアノテーションされたメソッドも、メソッド実行中（結果を生成するま で）はリクエストスコープが有効になります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSocket endpoint methods"
msgstr "WebSocket エンドポイントのメソッド"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "A WebSocket endpoint comprises the following components:"
msgstr "WebSocketエンドポイントは、以下のコンポーネントで構成されます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Path: This is the URL path where the WebSocket connection is established (e.g., ws://localhost:8080/)."
msgstr "パス：WebSocket 接続が確立される URL パスです (例: ws://localhost:8080/)。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnTextMessage` method: Handles the connected client's text messages."
msgstr "`@OnTextMessage` メソッドは1つまで：接続されたクライアントのテキストメッセージを処理します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnBinaryMessage` method: Handles the binary messages the connected client sends."
msgstr "`@OnBinaryMessage` メソッドは1つまで：接続されたクライアントが送信するバイナリメッセージを処理します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnOpen` method: Invoked when a client connects to the WebSocket."
msgstr "`@OnOpen` メソッドは 1 つまでです：クライアントが WebSocket に接続したときに呼び出されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnClose` method: Executed upon the client disconnecting from the WebSocket."
msgstr "最大 1 つの `@OnClose` メソッド：クライアントが WebSocket から切断したときに実行されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any number of `@OnError` methods: Invoked when an error occurs; that is when an endpoint callback throws a runtime error, or when a conversion errors occurs, or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "任意の数の `@OnError` メソッド：つまり、エンドポイントコールバックがランタイムエラーをスローしたとき、変換エラーが発生したとき、または返された `io.smallrye.mutiny.Uni` / `io.smallrye.mutiny.Multi` が失敗したときです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Only some endpoints need to include all methods.\n"
"However, it must contain at least `@On[Text|Binary]Message` or `@OnOpen`."
msgstr "すべてのメソッドを含める必要があるのは一部のエンドポイントだけです。ただし、少なくとも `@On[Text|Binary]Message` か `@OnOpen` を含む必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An error is thrown at build time if any endpoint violates these rules.\n"
"The static nested classes representing sub-websockets adhere to the same guidelines."
msgstr "これらの規則に違反するエンドポイントがあると、ビルド時にエラーがスローされます。サブ・ウェブソケットを表す静的な入れ子クラスも、同じガイドラインに従います。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any methods annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnOpen`, and `@OnClose` outside a WebSocket endpoint are considered erroneous and will result in the build failing with an appropriate error message."
msgstr "WebSocket エンドポイントの外側で、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnOpen` 、 `@OnClose` でアノテーションされたメソッドはエラーと見なされ、適切なエラーメッセージとともにビルドが失敗します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Processing messages"
msgstr "メッセージの処理"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Method receiving messages from the client are annotated with `@OnTextMessage` or `@OnBinaryMessage`."
msgstr "クライアントからメッセージを受け取るメソッドは、 `@OnTextMessage` または `@OnBinaryMessage` でアノテーションされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`OnTextMessage` are invoked for every _text_ message received from the client.\n"
"`OnBinaryMessage` are invoked for every _binary_ message the client receives."
msgstr "`OnTextMessage` `OnBinaryMessage` はクライアントが _バイナリ_ メッセージを受信するたびに呼び出されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Invocation Rules"
msgstr "招聘ルール"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When invoking these annotated methods, the _session_ scope linked to the WebSocket connection remains active.\n"
"In addition, the request scope is active until the completion of the method (or until it produces its result for async and reactive methods)."
msgstr "これらの注釈付きメソッドを呼び出すと、WebSocket 接続にリンクされている _セッション_ スコープがアクティブのままになります。さらに、リクエストスコープはメソッドが完了するまで (または非同期メソッドや反応型メソッドの場合は結果が生成されるまで) アクティブです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Quarkus WebSocket Next supports _blocking_ and _non-blocking_ logic, akin to Quarkus REST, determined by the method signature and additional annotations such as `@Blocking` and `@NonBlocking`."
msgstr "Quarkus WebSocket Nextは、Quarkus RESTと同様に、 _ブロッキングと_ _ノンブロッキングの_ ロジックをサポートしています。これは、メソッドのシグネチャと、 `@Blocking` や `@NonBlocking` などの追加アノテーションによって決定されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are the rules governing execution:"
msgstr "以下は実行に関するルールです："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Non-blocking methods must execute on the connection's event loop."
msgstr "ノンブロッキング・メソッドは、接続のイベント・ループで実行されなければなりません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@RunOnVirtualThread` are considered blocking and should execute on a virtual thread."
msgstr "`@RunOnVirtualThread` でアノテーションされたメソッドはブロッキングとみなされ、仮想スレッド上で実行されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Blocking methods must execute on a worker thread if not annotated with `@RunOnVirtualThread`."
msgstr "ブロックメソッドは、 `@RunOnVirtualThread` でアノテーションされていない場合、ワーカースレッドで実行する必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When `@RunOnVirtualThread` is employed, each invocation spawns a new virtual thread."
msgstr "`@RunOnVirtualThread` 、呼び出されるたびに新しい仮想スレッドが生成されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods returning `CompletionStage`, `Uni` and `Multi` are considered non-blocking."
msgstr "`CompletionStage` 、 `Uni` 、 `Multi` を返すメソッドはノンブロッキングとみなされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods returning `void` or plain objects are considered blocking."
msgstr "`void` またはプレーンなオブジェクトを返すメソッドはブロッキングとみなされます。"

#: _guides/websockets-next-reference.adoc
msgid "Method Parameters"
msgstr "メソッドパラメーター"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The method must accept exactly one message parameter:"
msgstr "このメソッドは、正確に1つのメッセージ・パラメータを受け入れなければなりません："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object (of any type)."
msgstr "メッセージ・オブジェクト（任意の型）。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "A `Multi<X>` with X as the message type."
msgstr "X をメッセージ・タイプとする `Multi<X>` 。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "However, it may also accept the following parameters:"
msgstr "ただし、以下のパラメータを受け付けることもあります："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`WebSocketConnection`"
msgstr "`WebSocketConnection`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`HandshakeRequest`"
msgstr "`HandshakeRequest`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`String` parameters annotated with `@PathParam`"
msgstr "`String` パラメータは `@PathParam`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object represents the data sent and can be accessed as either raw content (`String`, `JsonObject`, `JsonArray`, `Buffer` or `byte[]`) or deserialized high-level objects, which is the recommended approach."
msgstr "メッセージ・オブジェクトは送信されたデータを表し、生のコンテンツ（ `String` , `JsonObject` , `JsonArray` , `Buffer` , `byte[]` ）またはデシリアライズされた高レベル・オブジェクトとしてアクセスできます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When receiving a `Multi`, the method is invoked once per connection, and the provided `Multi` receives the items transmitted by this connection.\n"
"The method must subscribe to the `Multi` to receive these items (or return a Multi)."
msgstr "`Multi` を受信するとき、このメソッドは接続ごとに 1 回呼び出され、提供された `Multi` はこの接続によって送信されたアイテムを受信します。メソッドは、これらのアイテムを受信するために `Multi` をサブスクライブする必要があります (または Multi を返します)。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Allowed Returned Types"
msgstr "返される型"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnTextMessage` or `@OnBinaryMessage` can return various types to handle WebSocket communication efficiently:"
msgstr "`@OnTextMessage` または `@OnBinaryMessage` でアノテーションされたメソッドは、WebSocket 通信を効率的に処理するためにさまざまな型を返すことができます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit response is sent back to the client."
msgstr "`void` :明示的な応答がクライアントに返されないブロッキング・メソッドを示します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned Uni signifies the end of processing. No explicit response is sent back to the client."
msgstr "`Uni<Void>` :返されたUniの完了が処理の終了を意味するノンブロッキングメソッドを表します。明示的なレスポンスはクライアントに返されません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X` represents a blocking method in which the returned object is serialized and sent back to the client as a response."
msgstr "`X` 型のオブジェクトは、返されたオブジェクトがシリアライズされ、レスポンスとしてクライアントに送り返されるブロッキングメソッドを表します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client as a response."
msgstr "`Uni<X>` :ノンブロッキングメソッドを指定し、 `Uni` によって生成されたアイテムがレスポンスとしてクライアントに送信されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Multi<X>`: Indicates a non-blocking method where the items emitted by the non-null `Multi` are sequentially sent to the client until completion or cancellation."
msgstr "`Multi<X>` :ノンブロッキングメソッドを表し、ノンヌル `Multi` によって発行されたアイテムは、完了またはキャンセルされるまでクライアントに順次送信されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are some examples of these methods:"
msgstr "以下はその方法の例です："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When returning a Multi, Quarkus subscribes to the returned Multi automatically and writes the emitted items until completion, failure, or cancellation. Failure or cancellation terminates the connection."
msgstr "Multiを返すと、Quarkusは返されたMultiを自動的に購読し、完了、失敗、またはキャンセルされるまで、発行されたアイテムを書き込みます。失敗またはキャンセルすると、接続が終了します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Streams"
msgstr "ストリーム"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In addition to individual messages, WebSocket endpoints can handle streams of messages.\n"
"In this case, the method receives a `Multi<X>` as a parameter.\n"
"Each instance of `X` is deserialized using the same rules listed above."
msgstr "個々のメッセージに加えて、WebSocket エンドポイントはメッセージのストリームを扱うことができます。この場合、メソッドは `Multi<X>` をパラメータとして受け取ります。 `X` の各インスタンスは、上記と同じルールでデシリアライズされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The method receiving the `Multi` can either return another `Multi` or `void`.\n"
"If the method returns a `Multi`, it does not have to subscribe to the incoming `multi`:"
msgstr "`Multi` を受信したメソッドは、別の `Multi` か `void` を返すことができます。メソッドが `Multi` を返す場合、受信した `multi` を購読する必要はありません："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "This approach allows bi-directional streaming."
msgstr "このアプローチは双方向ストリーミングを可能にします。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When the method returns `void`, it must subscribe to the incoming `Multi`:"
msgstr "メソッドが `void` を返すとき、それは `Multi` を受信しなければなりません："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Skipping reply"
msgstr "返信省略"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When a method is intended to produce a message written to the client, it can emit `null`.\n"
"Emitting `null` signifies no response to be sent to the client, allowing for skipping a response when needed."
msgstr "メソッドがクライアントに書き込むメッセージを生成することを意図している場合、それは `null` を発することができます。 `null` を発することは、クライアントにレスポンスを送らないことを意味します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "JsonObject and JsonArray"
msgstr "JsonObject と JsonArray"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Vert.x `JsonObject` and `JsonArray` instances bypass the serialization and deserialization mechanisms.\n"
"Messages are sent as text messages."
msgstr "Vert.x `JsonObject` および `JsonArray` インスタンスは、シリアライズおよびデシリアライズのメカニズムをバイパスします。メッセージはテキストメッセージとして送信されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Broadcasting"
msgstr "放送"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"By default, responses produced by `@On[Text|Binary]Message` methods are sent back to the connected client.\n"
"However, using the `broadcast` parameter, responses can be broadcasted to all connected clients."
msgstr "デフォルトでは、 `@On[Text|Binary]Message` メソッドによって生成されたレスポンスは、接続されているクライアントに送り返されます。しかし、 `broadcast` パラメータを使うと、接続されているすべてのクライアントにレスポンスをブロードキャストすることができます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The same principle applies to methods returning instances of `Multi` or `Uni`."
msgstr "`Multi` や `Uni` のインスタンスを返すメソッドにも同じ原則が適用されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "If you need to select the connected clients that should receive the message, you can use `WebSocketConnection.broadcast().filter().sendText()`."
msgstr "メッセージを受信する接続クライアントを選択する必要がある場合は、 `WebSocketConnection.broadcast().filter().sendText()` を使用できます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "OnOpen and OnClose methods"
msgstr "OnOpenメソッドとOnCloseメソッド"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket endpoint can also be notified when a client connects or disconnects."
msgstr "WebSocket エンドポイントは、クライアントが接続または切断したときに通知することもできます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "This is done by annotating a method with `@OnOpen` or `@OnClose`:"
msgstr "これは、メソッドに `@OnOpen` または `@OnClose` のアノテーションを付けることで行います："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` is triggered upon client connection, while `@OnClose` is invoked upon disconnection."
msgstr "`@OnOpen` はクライアント接続時に起動され、 は切断時に起動されます。 `@OnClose` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "These methods have access to the _session-scoped_ `WebSocketConnection` bean."
msgstr "これらのメソッドは、 _セッション・スコープの_ `WebSocketConnection` Bean にアクセスできます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Parameters"
msgstr "パラメータ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen` and `@OnClose` may accept the following parameters:"
msgstr "`@OnOpen` と `@OnClose` でアノテーションされたメソッドは、以下のパラメータを受け取ることができます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "An endpoint method annotated with `@OnClose` may also accept the `io.quarkus.websockets.next.CloseReason` parameter that may indicate a reason for closing a connection."
msgstr "`@OnClose` でアノテーションされたエンドポイントメソッドは、接続を閉じる理由を示す `io.quarkus.websockets.next.CloseReason` パラメータも受け取ることができます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` and `@OnClose` methods support different returned types."
msgstr "`@OnOpen` メソッドと メソッドでは、返される型が異なります。 `@OnClose` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"For `@OnOpen` methods, the same rules as `@On[Text|Binary]Message` apply.\n"
"Thus, a method annotated with `@OnOpen` can send messages to the client immediately after connecting.\n"
"The supported return types for `@OnOpen` methods are:"
msgstr "`@OnOpen` メソッドについては、 `@On[Text|Binary]Message` と同じルールが適用されます。したがって、 `@OnOpen` でアノテーションされたメソッドは、接続後すぐにクライアントにメッセージを送信できます。 `@OnOpen` メソッドでサポートされている戻り値の型は以下のとおりです："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit message is sent back to the connected client."
msgstr "`void` :接続されたクライアントに明示的なメッセージを送り返さないブロッキング・メソッドを示します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No message is sent back to the client."
msgstr "`Uni<Void>` :返された `Uni` の完了が処理の終了を意味するノンブロッキングメソッドを表します。クライアントにメッセージは返されません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X`: Represents a blocking method where the returned object is serialized and sent back to the client."
msgstr "`X` 型のオブジェクト：返されたオブジェクトがシリアライズされてクライアントに送り返されるブロッキングメソッドを表します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client."
msgstr "`Uni<X>` :ノンブロッキング・メソッドを指定し、 `Uni` によって生成されたアイテムがクライアントに送信されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Items sent to the client are serialized except for the `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` types.\n"
"In the case of `Multi`, Quarkus subscribes to the returned `Multi` and writes the items to the `WebSocket` as they are emitted.\n"
"`String`, `JsonObject` and `JsonArray` are sent as text messages.\n"
"`Buffers` and byte arrays are sent as binary messages."
msgstr "クライアントに送信されるアイテムは、 `String` 、 `JsonObject` 、 `JsonArray` 、 `Buffer` 、 `byte[]` のタイプを除き、シリアライズされます。 `Multi` の場合、Quarkus は返された `Multi` を購読し、アイテムが送信されると `WebSocket` に書き込みます。 `String` `JsonObject` と `JsonArray` はテキストメッセージとして送信されます。 `Buffers` とバイト配列はバイナリメッセージとして送信されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "For `@OnClose` methods, the allowed return types are:"
msgstr "`@OnClose` メソッドで使用できる戻り値の型は以下のとおりです："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: The method is considered blocking."
msgstr "`void` :このメソッドはブロッキングと見なされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: The method is considered non-blocking."
msgstr "`Uni<Void>` :このメソッドはノンブロッキングとみなされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`@OnClose` methods cannot send items to the connection client by returning objects.\n"
"They can only send messages to the other client by using the `WebSocketConnection` object."
msgstr "`@OnClose` メソッドはオブジェクトを返すことによって接続クライアントにアイテムを送信することはできません。これらのメソッドは、 オブジェクトを使用することによってのみ、他のクライアントにメッセージを送信できます。 `WebSocketConnection`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Server-side Streaming"
msgstr "サーバー側ストリーミング"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen` can utilize server-side streaming by returning a `Multi<X>`:"
msgstr "`@OnOpen` でアノテーションされたメソッドは、 `Multi<X>` を返すことで、サーバーサイドストリーミングを利用できます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Broadcasting with @OnOpen"
msgstr "OnOpenで放送"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Similar to `@On[Text|Binary]Message`, items sent to the client from a method annotated with `@OnOpen` can be broadcasted to all clients instead of just the connecting client:"
msgstr "`@On[Text|Binary]Message` と同様に、 `@OnOpen` でアノテーションされたメソッドからクライアントに送信されたアイテムは、接続しているクライアントだけでなく、すべてのクライアントにブロードキャストすることができます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Error Handling"
msgstr "エラー処理"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The WebSocket endpoint can also be notified when an error occurs.\n"
"A WebSocket endpoint method annotated with `@io.quarkus.websockets.next.OnError` is invoked when an endpoint callback throws a runtime error, or when a conversion errors occurs,\n"
"or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "WebSocket エンドポイントは、エラーが発生したときに通知することもできます。 `@io.quarkus.websockets.next.OnError` でアノテーションされた WebSocket エンドポイントメソッドは、エンドポイントコールバックが実行時エラーをスローしたとき、変換エラーが発生したとき、または返された `io.smallrye.mutiny.Uni` / `io.smallrye.mutiny.Multi` が失敗を受け取ったときに呼び出されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The method must accept exactly one \"error\" parameter, i.e. a parameter that is assignable from `java.lang.Throwable`.\n"
"The method may also accept the following parameters:"
msgstr "メソッドは、1つの \"error \"パラメータ、つまり `java.lang.Throwable` から代入可能なパラメータを受け入れなければなりません。 メソッドは、以下のパラメータも受け入れることができます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An endpoint may declare multiple methods annotated with `@io.quarkus.websockets.next.OnError`.\n"
"However, each method must declare a different error parameter.\n"
"The method that declares a most-specific supertype of the actual exception is selected."
msgstr "`@io.quarkus.websockets.next.OnError` ただし、各メソッドは異なるエラー・パラメータを宣言する必要があります。実際の例外の最も特異的なスーパータイプを宣言しているメソッドが選択されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `@io.quarkus.websockets.next.OnError` annotation can be also used to declare a global error handler, i.e. a method that is not declared on a WebSocket endpoint. Such a method may not accept `@PathParam` paremeters. Error handlers declared on an endpoint take precedence over the global error handlers."
msgstr "`@io.quarkus.websockets.next.OnError` アノテーションは、グローバルエラーハンドラ、つまり WebSocket エンドポイントで宣言されていないメソッドを宣言するためにも使用できます。このようなメソッドは、 `@PathParam` パレメーターを受け付けません。エンドポイントで宣言されたエラーハンドラは、グローバルエラーハンドラよりも優先されます。"

#: _guides/websockets-next-reference.adoc
msgid ""
"When an error occurs but no error handler can handle the failure, Quarkus uses the strategy specified by `quarkus.websockets-next.server.unhandled-failure-strategy` and `quarkus.websockets-next.client.unhandled-failure-strategy`, respectively.\n"
"By default, the connection is closed.\n"
"Alternatively, an error message can be logged or no operation performed."
msgstr ""

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Access to the WebSocketConnection"
msgstr "WebSocketConnection へのアクセス"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `io.quarkus.websockets.next.WebSocketConnection` object represents the WebSocket connection.\n"
"It's _session-scoped_  and is valid for the whole duration of the connection."
msgstr "`io.quarkus.websockets.next.WebSocketConnection` オブジェクトは WebSocket 接続を表します。このオブジェクトは _セッションスコープを_ 持ち、接続の間中有効です。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the `WebSocketConnection` object:"
msgstr "`@OnOpen` 、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnClose` でアノテーションされたメソッドは、 `WebSocketConnection` オブジェクトにアクセスできます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Note that outside of these methos, the `WebSocketConnection` object is not available."
msgstr "これらのメト以外では、 `WebSocketConnection` オブジェクトは利用できないことに注意してください。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The connection can be used to send messages to the client, access the path parameters, and broadcast messages to all connected clients."
msgstr "接続は、クライアントへのメッセージ送信、パス・パラメーターへのアクセス、接続されているすべてのクライアントへのメッセージのブロードキャストに使用できます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `WebSocketConnection` provides both a blocking and a non-blocking method to send messages:"
msgstr "`WebSocketConnection` 、メッセージ送信にはブロッキング方式とノンブロッキング方式の両方が用意されています："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`sendTextAndAwait(String message)`: Sends a text message to the client and waits for the message to be sent. It's blocking and should only be called from an executor thread."
msgstr "`sendTextAndAwait(String message)` :テキスト・メッセージをクライアントに送信し、メッセージが送信されるのを待ちます。これはブロックされるので、実行スレッドからのみ呼び出されるべきです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`sendText(String message)`: Sends a text message to the client. It returns a `Uni`. It's non-blocking, but you must subscribe to it."
msgstr "`sendText(String message)` :テキストメッセージをクライアントに送信します。 `Uni` を返します。 ノンブロッキングですが、サブスクライブする必要があります。"

#: _guides/websockets-next-reference.adoc
msgid "Serialization and Deserialization"
msgstr "シリアライズとデシリアライズ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket Next extension supports automatic serialization and deserialization of messages."
msgstr "WebSocket Next 拡張は、メッセージの自動シリアライズとデシリアライズをサポートします。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Objects of type `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` are sent as-is and by-pass the serialization and deserialization.\n"
"When no codec is provided, the serialization and deserialization uses JSON (Jackson) automatically."
msgstr "`String` , `JsonObject` , `JsonArray` , `Buffer` , `byte[]` 型のオブジェクトはそのまま送信され、シリアライズとデシリアライズはバイパスされます。コーデックが提供されていない場合、シリアライズとデシリアライズは自動的にJSON（Jackson）を使用します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When you need to customize the serialization and deserialization, you can provide a custom codec."
msgstr "シリアライズとデシリアライズをカスタマイズする必要がある場合は、カスタムコーデックを提供することができます。"

#: _guides/websockets-next-reference.adoc
msgid "Custom codec"
msgstr "カスタムコーデック"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "To implement a custom codec, you must provides a CDI bean implementing:"
msgstr "カスタムコーデックを実装するには、CDIビーンを実装する必要があります："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`io.quarkus.websockets.next.BinaryMessageCodec`  for binary messages"
msgstr "`io.quarkus.websockets.next.BinaryMessageCodec` バイナリメッセージの場合"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`io.quarkus.websockets.next.TextMessageCodec`  for text messages"
msgstr "`io.quarkus.websockets.next.TextMessageCodec` テキストメッセージ用"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The following example shows how to implement a custom codec for a `Item` class:"
msgstr "次の例は、 `Item` クラスにカスタムコーデックを実装する方法を示しています："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`OnTextMessage` and `OnBinaryMessage` methods can also specify which codec need to be used explicitly:"
msgstr "`OnTextMessage` および メソッドでは、使用するコーデックを明示的に指定することもできます： `OnBinaryMessage` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for both the deserialization and serialization of the message"
msgstr "メッセージのデシリアライズとシリアライズの両方に使用するコーデックを指定します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When the serialization and deserialization must use a different codec, you can specify the codec to use for the serialization and deserialization separately:"
msgstr "シリアライズとデシリアライズで異なるコーデックを使用する必要がある場合は、シリアライズとデシリアライズで使用するコーデックを別々に指定できます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for both the deserialization of the incoming message"
msgstr "受信メッセージのデシリアライズの両方に使用するコーデックを指定します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for the serialization of the outgoing message"
msgstr "送信メッセージのシリアライゼーションに使用するコーデックを指定します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Handle Pong message"
msgstr "ハンドルポン・メッセージ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `@OnPongMessage` annotation is used to consume pong messages.\n"
"A websocket endpoint must declare at most one method annotated with `@OnPongMessage`."
msgstr "`@OnPongMessage` アノテーションは pong メッセージを消費するために使用されます。ウェブソケットのエンドポイントは、 `@OnPongMessage` でアノテーションされたメソッドをひとつ以上宣言しなければなりません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The method must accept a single parameter of type `Buffer`:"
msgstr "このメソッドは、 `Buffer` 型のパラメータを 1 つ受け取る必要があります："

#: _guides/websockets-next-reference.adoc
msgid "Security"
msgstr "セキュリティー"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket endpoint callback methods can be secured with security annotations such as `io.quarkus.security.Authenticated`,\n"
"`jakarta.annotation.security.RolesAllowed` and other annotations listed in the xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Supported security annotations] documentation."
msgstr "WebSocket のエンドポイント・コールバック・メソッドは、 `io.quarkus.security.Authenticated` 、 `jakarta.annotation.security.RolesAllowed` などのセキュリティ注釈や、 xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[サポートされているセキュリティ注釈の] ドキュメントに記載されている注釈で保護することができます。"

#: _guides/websockets-next-reference.adoc
msgid "For example:"
msgstr "例えば、以下のようになります:"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The echo callback method can only be invoked if the current security identity has an `admin` role."
msgstr "echo コールバックメソッドは、現在のセキュリティ ID が `admin` ロールを持つ場合にのみ呼び出すことができます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The error handler is invoked in case of the authorization failure."
msgstr "エラーハンドラは、認証に失敗した場合に呼び出されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`SecurityIdentity` is initially created during a secure HTTP upgrade and associated with the websocket connection."
msgstr "`SecurityIdentity` は、セキュアな HTTP アップグレード中に最初に作成され、ウェブソケット接続に関連付けられます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Currently, for an HTTP upgrade be secured, users must configure an HTTP policy protecting the HTTP upgrade path.\n"
"For example, to secure the `open()` method in the above websocket endpoint, one can add the following authentication policy:"
msgstr "現在、HTTP アップグレードをセキュアにするには、HTTP アップグレードパスを保護する HTTP ポリシーを設定する必要があります。例えば、上記のウェブソケットエンドポイントの `open()` メソッドを保護するには、以下の認証ポリシーを追加します："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Other options for securing HTTP upgrade requests, such as using the security annotations, will be explored in the future."
msgstr "セキュリティアノテーションの使用など、HTTPアップグレードリクエストを保護するための他のオプションは、将来的に検討される予定です。"

#: _guides/websockets-next-reference.adoc
msgid "When OpenID Connect extension is used and token expires, Quarkus automatically closes connection."
msgstr ""

#: _guides/websockets-next-reference.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _guides/websockets-next-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
