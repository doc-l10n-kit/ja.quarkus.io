msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:12
msgid "While users are encouraged to use JAX-RS annotation for defining REST endpoints, Quarkus provides a compatibility layer for Spring Web in the form of the `spring-web` extension."
msgstr "RESTエンドポイントの定義にはJAX-RSアノテーションを使用することが推奨されていますが、QuarkusはSpring-webエクステンションという形でSpring Webとの互換性のあるレイヤーを提供しています。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:14
msgid "This guide explains how a Quarkus application can leverage the well known Spring Web annotations to define RESTful services."
msgstr "このガイドでは、よく知られているSpring Webアノテーションを利用して、QuarkusアプリケーションでRESTfulサービスを定義する方法を説明します。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:17
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:20
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:23
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:24
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:25
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:27
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:31
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:33
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:35
msgid "The solution is located in the `spring-web-quickstart` {quickstarts-tree-url}/spring-web-quickstart[directory]."
msgstr "このソリューションは `spring-web-quickstart` {quickstarts-tree-url}/spring-web-QuickStart[ディレクトリー]にあります。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:36
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:39
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:49
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=spring-web-quickstart \\\n"
"    -DclassName=\"org.acme.spring.web.GreetingController\" \\\n"
"    -Dpath=\"/greeting\" \\\n"
"    -Dextensions=\"spring-web\"\n"
"cd spring-web-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:55
msgid "If you already have your Quarkus project configured, you can add the `spring-web` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリで以下のコマンドを実行することで、 `spring-web` エクステンションをプロジェクトに追加することができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:59
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"spring-web\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:62
#: upstream/_versions/1.11/guides/spring-web.adoc:211
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:69
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-web</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:71
#, no-wrap
msgid "GreetingController"
msgstr "GreetingController"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:79
#: upstream/_versions/1.11/guides/spring-web.adoc:102
#: upstream/_versions/1.11/guides/spring-web.adoc:175
#, no-wrap
msgid "package org.acme.spring.web;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:83
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:87
#: upstream/_versions/1.11/guides/spring-web.adoc:150
#, no-wrap
msgid ""
"@RestController\n"
"@RequestMapping(\"/greeting\")\n"
"public class GreetingController {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:93
#, no-wrap
msgid ""
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:95
#, no-wrap
msgid "GreetingControllerTest"
msgstr "GreetingControllerTest"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:98
msgid "Note that a test for the controller has been created as well:"
msgstr "コントローラーのテストも作成されていることに注意してください。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:105
#: upstream/_versions/1.11/guides/spring-web.adoc:178
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:108
#: upstream/_versions/1.11/guides/spring-web.adoc:181
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:111
#: upstream/_versions/1.11/guides/spring-web.adoc:184
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingControllerTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:120
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:122
#: upstream/_versions/1.11/guides/spring-web.adoc:195
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:124
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:128
msgid "Run the application with: `./mvnw compile quarkus:dev`.  Open your browser to http://localhost:8080/greeting."
msgstr "アプリケーションを実行するには、次の手順を実行します: `./mvnw compile quarkus:dev` 。ブラウザで http://localhost:8080/greeting を開きます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:130
msgid "The result should be: `{\"message\": \"hello\"}`."
msgstr "結果は `{\"message\": \"hello\"}` のようになります。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:131
#, no-wrap
msgid "Run the application as a native executable"
msgstr "アプリケーションをネイティブ実行可能ファイルとして実行する"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:134
msgid "You can of course create a native image using the instructions of the link:building-native-image[Building a native executable guide]."
msgstr "もちろん、 link:building-native-image[ネイティブ実行可能ファイルのビルドガイド] の指示を使ってネイティブイメージを作成することもできます。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:135
#, no-wrap
msgid "Going further with an endpoint returning JSON"
msgstr "JSONを返すエンドポイントでその先へ"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:139
msgid "The `GreetingController` above was an example of a very simple endpoint. In many cases however it is required to return JSON content.  The following example illustrates how that could be achieved using a Spring RestController:"
msgstr "上の `GreetingController` は、非常にシンプルなエンドポイントの例でした。しかし、多くの場合、JSONコンテンツを返さなければなりません。次の例では、Spring RestControllerを使用して、これを実現しています。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:146
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.PathVariable;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:155
#, no-wrap
msgid ""
"    @GetMapping(\"/{name}\")\n"
"    public Greeting hello(@PathVariable(name = \"name\") String name) {\n"
"        return new Greeting(\"hello \" + name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:158
#, no-wrap
msgid ""
"    public static class Greeting {\n"
"        private final String message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:162
#, no-wrap
msgid ""
"        public Greeting(String message) {\n"
"            this.message = message;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:168
#, no-wrap
msgid ""
"        public String getMessage(){\n"
"            return message;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:171
msgid "The corresponding test could look like:"
msgstr "対応するテストは次のようになります:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:193
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting/quarkus\")\n"
"          .then()\n"
"            .statusCode(200)\n"
"            .body(\"message\", is(\"hello quarkus\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:198
msgid "It should be noted that when using the Spring Web support in Quarkus, link:https://github.com/FasterXML/jackson[Jackson] is automatically added to the classpath and properly setup."
msgstr "なお、QuarkusでSpring Webサポートを使用する場合、 link:https://github.com/FasterXML/jackson[Jackson]は自動的にクラスパスに追加され、適切に設定されます。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:199
#, no-wrap
msgid "Adding OpenAPI and Swagger-UI"
msgstr "OpenAPIとSwagger-UIの追加"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:202
msgid "You can add support for link:https://www.openapis.org/[OpenAPI] and link:https://swagger.io/tools/swagger-ui/[Swagger-UI] by using the `quarkus-smallrye-openapi` extension."
msgstr "`quarkus-smallrye-openapi` エクステンションを使うことで、 link:https://www.openapis.org/[OpenAPI]と link:https://swagger.io/tools/swagger-ui/[Swagger-UI]のサポートを追加することができます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:204
msgid "Add the extension by running this command:"
msgstr "このコマンドを実行してエクステンションを追加"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:208
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"io.quarkus:quarkus-smallrye-openapi\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:218
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-openapi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:221
msgid "This is enough to generate a basic OpenAPI schema document from your REST Endpoints:"
msgstr "これは、RESTエンドポイントから基本的なOpenAPIスキーマドキュメントを生成するのに十分です。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:225
#, no-wrap
msgid "curl http://localhost:8080/q/openapi\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:228
msgid "You will see the generated OpenAPI schema document:"
msgstr "生成された OpenAPI スキーマドキュメントが表示されます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:231
#: upstream/_versions/1.11/guides/spring-web.adoc:314
#, no-wrap
msgid "---\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:268
#, no-wrap
msgid ""
"openapi: 3.0.1\n"
"info:\n"
"  title: Generated API\n"
"  version: \"1.0\"\n"
"paths:\n"
"  /greeting:\n"
"    get:\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                type: string\n"
"  /greeting/{name}:\n"
"    get:\n"
"      parameters:\n"
"      - name: name\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:272
#, no-wrap
msgid "Adding MicroProfile OpenAPI Annotations"
msgstr "MicroProfile OpenAPIアノテーションの追加"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:276
msgid "You can use link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] to better document your schema, example, adding the following to the class level of the `GreetingController`:"
msgstr "link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI]を使用して、スキーマをより良く文書化することができます。例えば、 `GreetingController` のクラスレベルに以下を追加します:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:291
#, no-wrap
msgid ""
"@OpenAPIDefinition(\n"
"    info = @Info(\n"
"        title=\"Greeting API\",\n"
"        version = \"1.0.1\",\n"
"        contact = @Contact(\n"
"            name = \"Greeting API Support\",\n"
"            url = \"http://exampleurl.com/contact\",\n"
"            email = \"techsupport@example.com\"),\n"
"        license = @License(\n"
"            name = \"Apache 2.0\",\n"
"            url = \"https://www.apache.org/licenses/LICENSE-2.0.html\"))\n"
")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:294
msgid "And describe your endpoints like this:"
msgstr "そして、エンドポイントをこのように記述します:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:302
#, no-wrap
msgid ""
"@Tag(name = \"Hello\", description = \"Just say hello\")\n"
"@GetMapping(produces=MediaType.TEXT_PLAIN_VALUE)\n"
"public String hello() {\n"
"    return \"hello\";\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:308
#, no-wrap
msgid ""
"@GetMapping(value = \"/{name}\", produces=MediaType.APPLICATION_JSON_VALUE)\n"
"@Tag(name = \"Hello to someone\", description = \"Just say hello to someone\")\n"
"public Greeting hello(@PathVariable(name = \"name\") String name) {\n"
"    return new Greeting(\"hello \" + name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:311
msgid "will generate this OpenAPI schema:"
msgstr "これにより、このOpenAPIスキーマが生成されます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:367
#, no-wrap
msgid ""
"openapi: 3.0.1\n"
"info:\n"
"  title: Greeting API\n"
"  contact:\n"
"    name: Greeting API Support\n"
"    url: http://exampleurl.com/contact\n"
"    email: techsupport@example.com\n"
"  license:\n"
"    name: Apache 2.0\n"
"    url: https://www.apache.org/licenses/LICENSE-2.0.html\n"
"  version: 1.0.1\n"
"tags:\n"
"- name: Hello\n"
"  description: Just say hello\n"
"- name: Hello to someone\n"
"  description: Just say hello to someone\n"
"paths:\n"
"  /greeting:\n"
"    get:\n"
"      tags:\n"
"      - Hello\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                type: string\n"
"  /greeting/{name}:\n"
"    get:\n"
"      tags:\n"
"      - Hello to someone\n"
"      parameters:\n"
"      - name: name\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:369
#, no-wrap
msgid "Using Swagger UI"
msgstr "Swagger UIの使用"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:375
msgid "Navigate to link:http://localhost:8080/q/swagger-ui/[localhost:8080/q/swagger-ui/] and you will see the Swagger UI screen:"
msgstr "link:http://localhost:8080/q/swagger-ui/[localhost:8080/q/swagger-ui/] に移動すると、Swagger UIの画面が表示されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:377
msgid "image:spring-web-guide-screenshot01.png[alt=Swagger UI]"
msgstr "image:spring-web-guide-screenshot01.png[alt=Swagger UI]"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:378
#, no-wrap
msgid "Supported Spring Web functionalities"
msgstr "サポートされているSpring Webの機能"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:382
msgid "Quarkus currently supports a subset of the functionalities that Spring Web provides. More specifically Quarkus supports the REST related features of Spring Web (think of `@RestController` instead of `@Controller`)."
msgstr "Quarkusは現在、Spring Webが提供する機能のサブセットをサポートしています。具体的には、QuarkusはSpring WebのREST関連の機能をサポートしています（ `@Controller` の代わりに `@RestController` を考えてみてください）。"

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:383
#, no-wrap
msgid "Annotations"
msgstr "アノテーション"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:386
msgid "The table below summarizes the supported annotations:"
msgstr "下の表は、サポートされているアノテーションをまとめたものです。"

#. type: Block title
#: upstream/_versions/1.11/guides/spring-web.adoc:387
#, no-wrap
msgid "Supported Spring Web annotation"
msgstr "サポートされているSpring Webアノテーション"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:389
#, no-wrap
msgid "Nam"
msgstr "Nam"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:391
#: upstream/_versions/1.11/guides/spring-web.adoc:473
#, no-wrap
msgid "Comments"
msgstr "Comments"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:392
#, no-wrap
msgid "@RestController"
msgstr "@RestController"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:395
#, no-wrap
msgid "@RequestMapping"
msgstr "@RequestMapping"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:397
#, no-wrap
msgid "@GetMapping"
msgstr "@GetMapping"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:399
#, no-wrap
msgid "@PostMapping"
msgstr "@PostMapping"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:401
#, no-wrap
msgid "@PutMapping"
msgstr "@PutMapping"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:403
#, no-wrap
msgid "@DeleteMapping"
msgstr "@DeleteMapping"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:405
#, no-wrap
msgid "@PatchMapping"
msgstr "@PatchMapping"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:407
#: upstream/_versions/1.11/guides/spring-web.adoc:490
#, no-wrap
msgid "@RequestParam"
msgstr "@RequestParam"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:409
#, no-wrap
msgid "@RequestHeader"
msgstr "@RequestHeader"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:411
#, no-wrap
msgid "@MatrixVariable"
msgstr "@MatrixVariable"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:413
#: upstream/_versions/1.11/guides/spring-web.adoc:494
#, no-wrap
msgid "@PathVariable"
msgstr "@PathVariable"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:415
#, no-wrap
msgid "@CookieValue"
msgstr "@CookieValue"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:417
#: upstream/_versions/1.11/guides/spring-web.adoc:498
#, no-wrap
msgid "@RequestBody"
msgstr "@RequestBody"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:419
#: upstream/_versions/1.11/guides/spring-web.adoc:506
#, no-wrap
msgid "@ResponseStatus"
msgstr "@ResponseStatus"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:421
#: upstream/_versions/1.11/guides/spring-web.adoc:510
#, no-wrap
msgid "@ExceptionHandler"
msgstr "@ExceptionHandler"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:422
#, no-wrap
msgid "Can only be used in a @RestControllerAdvice class, not on a per-controller basis"
msgstr "コントローラごとではなく、@RestControllerAdviceクラスでのみ使用可能です。"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:423
#: upstream/_versions/1.11/guides/spring-web.adoc:502
#, no-wrap
msgid "@RestControllerAdvice"
msgstr "@RestControllerAdvice"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:424
#, no-wrap
msgid "Only the @ExceptionHandler capability is supported"
msgstr "サポートされているのは@ExceptionHandlerケイパビリティのみです。"

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:426
#, no-wrap
msgid "Controller method return types"
msgstr "コントローラメソッドの戻り値の型"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:429
#: upstream/_versions/1.11/guides/spring-web.adoc:444
msgid "The following method return types are supported:"
msgstr "以下のメソッドの戻り値の型がサポートされています。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:431
msgid "Primitive types"
msgstr "プリミティブ型"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:432
msgid "String (which will be used as a literal, no Spring MVC view support is provided)"
msgstr "文字列 (リテラルとして使用されます。Spring MVC ビューのサポートはありません)"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:433
msgid "POJO classes which will be serialized via JSON"
msgstr "JSON 経由でシリアライズされる POJO クラス"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:434
#: upstream/_versions/1.11/guides/spring-web.adoc:446
msgid "`org.springframework.http.ResponseEntity`"
msgstr "`org.springframework.http.ResponseEntity`"

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:435
#, no-wrap
msgid "Controller method parameter types"
msgstr "コントローラメソッドのパラメーターの型"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:440
msgid "In addition to the method parameters that can be annotated with the appropriate Spring Web annotations from the previous table, `javax.servlet.http.HttpServletRequest` and `javax.servlet.http.HttpServletResponse` are also supported.  For this to function however, users need to add the `quarkus-undertow` dependency."
msgstr "前述の表の適切なSpring Webアノテーションでアノテーションできるメソッドパラメータに加えて、 `javax.servlet.http.HttpServletRequest` と `javax.servlet.http.HttpServletResponse` もサポートされています。ただし、これを機能させるためには、 `quarkus-undertow` の依存関係を追加する必要があります。"

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:441
#, no-wrap
msgid "Exception handler method return types"
msgstr "例外ハンドラーメソッドの戻り値の型"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:447
msgid "`java.util.Map`"
msgstr "`java.util.Map`"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:449
msgid "Other return types mentioned in the Spring `https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html[ExceptionHandler javadoc]` are not supported."
msgstr "Spring `https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html[ExceptionHandler javadoc]` に記載されているその他の戻り値型はサポートされていません。"

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:450
#, no-wrap
msgid "Exception handler method parameter types"
msgstr "例外ハンドラーメソッドのパラメーターの型"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:453
msgid "The following parameter types are supported, in arbitrary order:"
msgstr "以下のパラメーターの型がサポートされています（順不同）:"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:455
msgid "An exception argument: declared as a general `Exception` or as a more specific exception. This also serves as a mapping hint if the annotation itself does not narrow the exception types through its `value()`."
msgstr "例外の引数：一般的な `Exception` として、またはより具体的な例外として宣言されています。これは、アノテーション自体が `value()` を使って例外の型を狭めていない場合、マッピングのヒントにもなります。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:456
msgid "Request and/or response objects (typically from the Servlet API). You may choose any specific request/response type, e.g. `ServletRequest` / `HttpServletRequest`. To use Servlet API, the `quarkus-undertow` dependency needs to be added."
msgstr "リクエストおよび／またはレスポンスオブジェクト（通常、サーブレットAPIからのもの）。`ServletRequest` / `HttpServletRequest` のように、 特定のリクエスト/レスポンス型を選択することができます。Servlet APIを使用するには、 `quarkus-undertow` の依存関係を追加する必要があります。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:458
msgid "Other parameter types mentioned in the Spring `https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html[ExceptionHandler javadoc]` are not supported."
msgstr "Spring `https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html[ExceptionHandler javadoc]` に記載されているその他のパラメーターの型はサポートされていません。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:459
#, no-wrap
msgid "Important Technical Note"
msgstr "重要な技術的な注意点"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:465
msgid "Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.  Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types.  What that means for end users, is that adding arbitrary Spring libraries will not have any effect. Moreover Spring infrastructure classes (like `org.springframework.beans.factory.config.BeanPostProcessor` for example) will not be executed."
msgstr "Quarkus での Spring サポートは、Spring Application Context を開始せず、Spring インフラストラクチャークラスも実行しないことに注意してください。Spring クラスとアノテーションは、メタデータの読み取りにのみ使用されるか、ユーザーコードメソッドの戻り値の型またはパラメーター型として使用されます。エンドユーザーにとってそれが意味することは、任意の Spring ライブラリーを追加しても効果がないということです。さらに、Spring インフラストラクチャークラス (たとえば、`org.springframework.beans.factory.config.BeanPostProcessor` など) は実行されません。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:466
#, no-wrap
msgid "Conversion Table"
msgstr "変換テーブル"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:469
msgid "The following table shows how Spring Web annotations can be converted to JAX-RS annotations."
msgstr "以下の表は、Spring WebアノテーションをJAX-RSアノテーションに変換する方法を示しています。"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:471
#, no-wrap
msgid "Spring"
msgstr "Spring"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:471
#, no-wrap
msgid "JAX-RS"
msgstr "JAX-RS"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:477
#, no-wrap
msgid "There is no equivalent in JAX-RS. Annotating a class with @Path suffices"
msgstr "JAX-RSにはこれに相当するものはありません。クラスのアノテーションは@Pathで十分です。"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:478
#, no-wrap
msgid "@RequestMapping(path=\"/api\")"
msgstr "@RequestMapping(path=\"/api\")"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:479
#, no-wrap
msgid "@Path(\"/api\")"
msgstr "@Path(\"/api\")"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:482
#, no-wrap
msgid "@RequestMapping(consumes=\"application/json\")"
msgstr "@RequestMapping(consumes=\"application/json\")"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:483
#, no-wrap
msgid "@Consumes(\"application/json\")"
msgstr "@Consumes(\"application/json\")"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:486
#, no-wrap
msgid "@RequestMapping(produces=\"application/json\")"
msgstr "@RequestMapping(produce=\"application/json\")"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:487
#, no-wrap
msgid "@Produces(\"application/json\")"
msgstr "@Produces(\"application/json\")"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:491
#, no-wrap
msgid "@QueryParam"
msgstr "@QueryParam"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:495
#, no-wrap
msgid "@PathParam"
msgstr "@PathParam"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:501
#, no-wrap
msgid "No equivalent in JAX-RS. Method parameters corresponding to the body of the request are handled in JAX-RS without requiring any annotation"
msgstr "JAX-RSでは同等のものはありません。JAX-RSでは、リクエストのボディに対応するメソッドのパラメータは、アノテーションを必要とせずに処理されます"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:505
#: upstream/_versions/1.11/guides/spring-web.adoc:509
#, no-wrap
msgid "No equivalent in JAX-RS"
msgstr "JAX-RSには同等のものはありません。"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:512
#, no-wrap
msgid "No equivalent annotation in JAX-RS. Exceptions are handled by implementing `javax.ws.rs.ext.ExceptionMapper`"
msgstr "JAX-RSには同等のアノテーションはありません。例外は、 `javax.ws.rs.ext.ExceptionMapper` の実装によってハンドリングされます。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:514
#, no-wrap
msgid "More Spring guides"
msgstr "その他のSpringガイド"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:517
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkusには、より多くのSpring互換機能があります。詳細については、以下のガイドを参照してください。"
