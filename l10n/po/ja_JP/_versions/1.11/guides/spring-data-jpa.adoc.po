msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:13
msgid "While users are encouraged to use Hibernate ORM with Panache for Relational Database access, Quarkus provides a compatibility layer for Spring Data JPA repositories in the form of the `spring-data-jpa` extension."
msgstr "ユーザーにはリレーショナルデータベースアクセスに Hibernate ORM with Panache の使用が勧められていますが、Quarkus は `spring-data-jpa` エクステンションの形式で Spring Data JPA リポジトリーの互換性レイヤーを提供します。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:16
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:19
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:22
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:23
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:24
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:25
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:29
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:31
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:33
msgid "The solution is located in the `spring-data-jpa-quickstart` {quickstarts-tree-url}/spring-data-jpa-quickstart[directory]."
msgstr "ソリューションは `spring-data-jpa-quickstart` {quickstarts-tree-url}/spring-data-jpa-quickstart[ディレクトリー] にあります。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:34
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:37
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:47
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=spring-data-jpa-quickstart \\\n"
"    -DclassName=\"org.acme.spring.data.jpa.FruitResource\" \\\n"
"    -Dpath=\"/greeting\" \\\n"
"    -Dextensions=\"resteasy,spring-data-jpa,resteasy-jackson,quarkus-jdbc-postgresql\"\n"
"cd spring-data-jpa-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:53
msgid "If you already have your Quarkus project configured, you can add the `spring-data-jpa` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `sspring-data-jpa` エクステンションを追加することができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:57
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"spring-data-jpa\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:60
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:67
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-data-jpa</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:69
#, no-wrap
msgid "Define the Entity"
msgstr "エンティティーの定義"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:72
msgid "Throughout the course of this guide, the following JPA Entity will be used:"
msgstr "このガイドのコース全体を通して、次の JPA エンティティーが使用されます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:76
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:178
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:200
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:275
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:441
#, no-wrap
msgid "package org.acme.spring.data.jpa;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:80
#, no-wrap
msgid ""
"import javax.persistence.Entity;\n"
"import javax.persistence.GeneratedValue;\n"
"import javax.persistence.Id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:83
#, no-wrap
msgid ""
"@Entity\n"
"public class Fruit {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:87
#, no-wrap
msgid ""
"    @Id\n"
"    @GeneratedValue\n"
"    private Long id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:89
#, no-wrap
msgid "    private String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:91
#, no-wrap
msgid "    private String color;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:95
#, no-wrap
msgid ""
"    public Fruit() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:100
#, no-wrap
msgid ""
"    public Fruit(String name, String color) {\n"
"        this.name = name;\n"
"        this.color = color;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:104
#, no-wrap
msgid ""
"    public Long getId() {\n"
"        return id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:108
#, no-wrap
msgid ""
"    public void setId(Long id) {\n"
"        this.id = id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:112
#, no-wrap
msgid ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:116
#, no-wrap
msgid ""
"    public void setName(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:120
#, no-wrap
msgid ""
"    public String getColor() {\n"
"        return color;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:125
#, no-wrap
msgid ""
"    public void setColor(String color) {\n"
"        this.color = color;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:128
#, no-wrap
msgid "Configure database access properties"
msgstr "データベースアクセスプロパティーの設定"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:131
msgid "Add the following properties to `application.properties` to configure access to a local PostgreSQL instance."
msgstr "次のプロパティーを `application.properties` に追加して、ローカル PostgreSQL インスタンスへのアクセスを設定します。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:141
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=quarkus_test\n"
"quarkus.datasource.password=quarkus_test\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql:quarkus_test\n"
"quarkus.datasource.jdbc.max-size=8\n"
"quarkus.datasource.jdbc.min-size=2\n"
"quarkus.hibernate-orm.database.generation=drop-and-create\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:144
msgid "This configuration assumes that PostgreSQL will be running locally."
msgstr "この設定は、PostgreSQL がローカルで実行されることを前提としています。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:146
msgid "A very easy way to accomplish that is by using the following Docker command:"
msgstr "これを実現する非常に簡単な方法は、次の Docker コマンドを使用することです。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:150
#, no-wrap
msgid "docker run --ulimit memlock=-1:-1 -it --rm=true --memory-swappiness=0 --name quarkus_test -e POSTGRES_USER=quarkus_test -e POSTGRES_PASSWORD=quarkus_test -e POSTGRES_DB=quarkus_test -p 5432:5432 postgres:11.5\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:153
msgid "If you plan on using a different setup, please change your `application.properties` accordingly."
msgstr "別の設定を使用する場合は、適宜 `application.properties` を変更してください。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:154
#, no-wrap
msgid "Prepare the data"
msgstr "データの準備"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:158
msgid "To make it easier to showcase some capabilities of Spring Data JPA on Quarkus, some test data should be inserted into the database by adding the following content to a new file named `src/main/resources/import.sql`:"
msgstr "Quarkus で Spring DataJ PA の一部の機能を簡単に示すために、次のコンテンツを `src/main/resources/import.sql` という名前の新しいファイルに追加して、データベースにテストデータを挿入する必要があります。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:166
#, no-wrap
msgid ""
"INSERT INTO fruit(id, name, color) VALUES (1, 'Cherry', 'Red');\n"
"INSERT INTO fruit(id, name, color) VALUES (2, 'Apple', 'Red');\n"
"INSERT INTO fruit(id, name, color) VALUES (3, 'Banana', 'Yellow');\n"
"INSERT INTO fruit(id, name, color) VALUES (4, 'Avocado', 'Green');\n"
"INSERT INTO fruit(id, name, color) VALUES (5, 'Strawberry', 'Red');\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:169
msgid "Hibernate ORM will execute these queries on application startup."
msgstr "Hibernate ORM は、アプリケーションの起動時にこれらのクエリーを実行します。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:170
#, no-wrap
msgid "Define the repository"
msgstr "リポジトリーの定義"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:174
msgid "It is now time to define the repository that will be used to access `Fruit`.  In a typical Spring Data fashion create a repository like so:"
msgstr "次に、`Fruit` へのアクセスに使用されるリポジトリーを定義します。典型的な Spring Data の方法で、次のようなリポジトリーを作成します。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:180
#, no-wrap
msgid "import org.springframework.data.repository.CrudRepository;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:182
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:475
#, no-wrap
msgid "import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:184
#, no-wrap
msgid "public interface FruitRepository extends CrudRepository<Fruit, Long> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:187
#, no-wrap
msgid ""
"    List<Fruit> findByColor(String color);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:192
msgid "The `FruitRepository` above extends Spring Data's `org.springframework.data.repository.CrudRepository` which means that all of the latter's methods are available to `FruitRepository`.  Additionally `findByColor` is defined whose purpose is to return all Fruit entities that match the specified color."
msgstr "上記の `FruitRepository` は、Spring Data の `org.springframework.data.repository.CrudRepository` を拡張します。これは、後者のすべてのメソッドが `FruitRepository` で使用できることを意味します。さらに、指定された色に一致するすべての Fruit エンティティーを返すことを目的とした `findByColor` が定義されています。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:193
#, no-wrap
msgid "Update the JAX-RS resource"
msgstr "JAX-RS リソースの更新"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:206
#, no-wrap
msgid ""
"import javax.ws.rs.DELETE;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:208
#, no-wrap
msgid "import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:211
#, no-wrap
msgid ""
"import java.util.List;\n"
"import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:214
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"public class FruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:216
#, no-wrap
msgid "    private final FruitRepository fruitRepository;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:220
#, no-wrap
msgid ""
"    public FruitResource(FruitRepository fruitRepository) {\n"
"        this.fruitRepository = fruitRepository;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:225
#, no-wrap
msgid ""
"    @GET\n"
"    public Iterable<Fruit> findAll() {\n"
"        return fruitRepository.findAll();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:232
#, no-wrap
msgid ""
"    @DELETE\n"
"    @Path(\"{id}\")\n"
"    public void delete(@PathParam long id) {\n"
"        fruitRepository.deleteById(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:238
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/name/{name}/color/{color}\")\n"
"    public Fruit create(@PathParam String name, @PathParam String color) {\n"
"        return fruitRepository.save(new Fruit(name, color));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:248
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"/id/{id}/color/{color}\")\n"
"    public Fruit changeColor(@PathParam Long id, @PathParam String color) {\n"
"        Optional<Fruit> optional = fruitRepository.findById(id);\n"
"        if (optional.isPresent()) {\n"
"            Fruit fruit = optional.get();\n"
"            fruit.setColor(color);\n"
"            return fruitRepository.save(fruit);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:251
#, no-wrap
msgid ""
"        throw new IllegalArgumentException(\"No Fruit with id \" + id + \" exists\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:258
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/color/{color}\")\n"
"    public List<Fruit> findByColor(@PathParam String color) {\n"
"        return fruitRepository.findByColor(color);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:262
msgid "`FruitResource` now provides a few REST endpoints that can be used to perform CRUD operation on `Fruit`."
msgstr "`FruitResource` は、`Fruit` で CRUD 操作を実行するために使用できるいくつかの REST エンドポイントを提供するようになりました。"

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:263
#, no-wrap
msgid "Note on Spring Web"
msgstr "Spring Web に関する注意"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:268
#, no-wrap
msgid "Update the test"
msgstr "テストの更新"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:271
msgid "To test the capabilities of `FruitRepository` proceed to update the content of `FruitResourceTest` to:"
msgstr "`FruitRepository` の機能をテストするには、`FruitResourceTest` のコンテンツを次のように更新します。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:278
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:284
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.containsString;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
"import static org.hamcrest.CoreMatchers.notNullValue;\n"
"import static org.hamcrest.core.IsNot.not;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:287
#, no-wrap
msgid ""
"@QuarkusTest\n"
"class FruitResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:300
#, no-wrap
msgid ""
"    @Test\n"
"    void testListAllFruits() {\n"
"        //List all, should have all 3 fruits the database has initially:\n"
"        given()\n"
"                .when().get(\"/fruits\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\n"
"                        containsString(\"Cherry\"),\n"
"                        containsString(\"Apple\"),\n"
"                        containsString(\"Banana\")\n"
"                );\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:307
#, no-wrap
msgid ""
"        //Delete the Cherry:\n"
"        given()\n"
"                .when().delete(\"/fruits/1\")\n"
"                .then()\n"
"                .statusCode(204)\n"
"        ;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:318
#, no-wrap
msgid ""
"        //List all, cherry should be missing now:\n"
"        given()\n"
"                .when().get(\"/fruits\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\n"
"                        not(containsString(\"Cherry\")),\n"
"                        containsString(\"Apple\"),\n"
"                        containsString(\"Banana\")\n"
"                );\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:327
#, no-wrap
msgid ""
"        //Create a new Fruit\n"
"        given()\n"
"                .when().post(\"/fruits/name/Orange/color/Orange\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(containsString(\"Orange\"))\n"
"                .body(\"id\", notNullValue())\n"
"                .extract().body().jsonPath().getString(\"id\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:339
#, no-wrap
msgid ""
"        //List all, Orange should be present now:\n"
"        given()\n"
"                .when().get(\"/fruits\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\n"
"                        not(containsString(\"Cherry\")),\n"
"                        containsString(\"Apple\"),\n"
"                        containsString(\"Orange\")\n"
"                );\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:348
#, no-wrap
msgid ""
"    @Test\n"
"    void testFindByColor() {\n"
"        //Find by color that no fruit has\n"
"        given()\n"
"                .when().get(\"/fruits/color/Black\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\"size()\", is(0));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:358
#, no-wrap
msgid ""
"        //Find by color that multiple fruits have\n"
"        given()\n"
"                .when().get(\"/fruits/color/Red\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\n"
"                        containsString(\"Apple\"),\n"
"                        containsString(\"Strawberry\")\n"
"                );\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:366
#, no-wrap
msgid ""
"        //Find by color that matches\n"
"        given()\n"
"                .when().get(\"/fruits/color/Green\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\"size()\", is(1))\n"
"                .body(containsString(\"Avocado\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:373
#, no-wrap
msgid ""
"        //Update color of Avocado\n"
"        given()\n"
"                .when().put(\"/fruits/id/4/color/Black\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(containsString(\"Black\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:385
#, no-wrap
msgid ""
"        //Find by color that Avocado now has\n"
"        given()\n"
"                .when().get(\"/fruits/color/Black\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\"size()\", is(1))\n"
"                .body(\n"
"                        containsString(\"Black\"),\n"
"                        containsString(\"Avocado\")\n"
"                );\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:387
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:500
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:391
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:395
msgid "Quarkus dev mode works with the defined repositories just like with any other Quarkus extension, greatly enhancing your productivity during the dev cycle.  The application can be started in dev mode as usual using:"
msgstr "Quarkus 開発モードは、他の Quarkus エクステンションと同じように、定義済みリポジトリーで機能し、開発サイクル中の生産性を大幅に向上させます。アプリケーションは、通常どおり、以下を使用して開発モードで起動できます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:399
#, no-wrap
msgid "./mvnw compile quarkus:dev\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:401
#, no-wrap
msgid "Run the application as a native binary"
msgstr "アプリケーションをネイティブバイナリーとして実行"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:405
#, no-wrap
msgid "Supported Spring Data JPA functionalities"
msgstr "サポートされている Spring Data JPA 機能"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:408
msgid "Quarkus currently supports a subset of Spring Data JPA's features, namely the most useful and most commonly used features."
msgstr "Quarkus は現在、Spring Data JPA の機能のサブセット、つまり最も有用で最も一般的に使用される機能をサポートしています。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:413
msgid "An important part of this support is that all repository generation is done at build time thus ensuring that all supported features work correctly in native mode.  Moreover, developers know at build time whether or not their repository method names can be converted to proper JPQL queries.  This also means that if a method name indicates that a field should be used that is not part of the Entity, developers will get the relevant error at build time."
msgstr "このサポートで重要なのは、すべてのリポジトリー生成がビルド時に行われるため、サポートされているすべての機能がネイティブモードで正しく機能することを保証することです。さらに、開発者はビルド時に、リポジトリーメソッド名を適切な JPQL クエリーに変換できるかどうかを認識しています。これは、メソッド名がエンティティーの一部ではないフィールドを使用する必要があることを示している場合、開発者はビルド時に関連するエラーを受け取ることも意味します。"

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:414
#, no-wrap
msgid "What is supported"
msgstr "サポート対象"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:417
msgid "The following sections described the most important supported features of Spring Data JPA."
msgstr "次のセクションでは、Spring Data JPA でサポートされている最も重要な機能について説明しています。"

#. type: Title ====
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:418
#, no-wrap
msgid "Automatic repository implementation generation"
msgstr "自動リポジトリー実装生成"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:421
msgid "Interfaces that extend any of the following Spring Data repositories are automatically implemented:"
msgstr "次の SpringData リポジトリーのいずれかを拡張するインターフェイスが自動的に実装されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:423
msgid "`org.springframework.data.repository.Repository`"
msgstr "`org.springframework.data.repository.Repository`"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:424
msgid "`org.springframework.data.repository.CrudRepository`"
msgstr "`org.springframework.data.repository.CrudRepository`"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:425
msgid "`org.springframework.data.repository.PagingAndSortingRepository`"
msgstr "`org.springframework.data.repository.PagingAndSortingRepository`"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:426
msgid "`org.springframework.data.jpa.repository.JpaRepository`"
msgstr "`org.springframework.data.jpa.repository.JpaRepository`"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:429
msgid "The generated repositories are also registered as beans so they can be injected into any other bean.  Furthermore the methods that update the database are automatically annotated with `@Transactional`."
msgstr "生成されたリポジトリーも Bean として登録されるため、他の Bean に注入できます。さらに、データベースを更新するメソッドには、自動的に `@Transactional` のアノテーションが付けられます。"

#. type: Title ====
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:430
#, no-wrap
msgid "Fine tuning of repository definition"
msgstr "リポジトリー定義の微調整"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:434
msgid "This allows user defined repository interfaces to cherry-pick methods from any of the supported Spring Data repository interfaces without having to extend those interfaces.  This is particularly useful when for example a repository needs to use some methods from `CrudRepository` but it's undesirable to expose the full list of methods of said interface."
msgstr "これにより、ユーザー定義のリポジトリーインターフェイスは、インターフェイスを拡張することなく、サポートされている Spring Data リポジトリーインターフェイスのメソッドのみ選択できます。これは、たとえばリポジトリーが `CrudRepository` のいくつかのメソッドを使用する必要があるが、そのインターフェイスのメソッドの完全なリストを公開することが望ましくない場合に特に役立ちます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:437
msgid "Assume for example that a `PersonRepository` that shouldn't extend `CrudRepository` but would like to use `save` and `findById` methods which are defined in said interface.  In such a case, `PersonRepository` would look like so:"
msgstr "たとえば `PersonRepository` は、`CrudRepository` を拡張するべきではないが、そのインターフェイスで定義されている `save` メソッドと `findById` メソッドを使用したいと想定します。この場合、`PersonRepository` は次のようになります。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:443
#, no-wrap
msgid "import org.springframework.data.repository.Repository;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:445
#, no-wrap
msgid "public interface PersonRepository extends Repository<Person, Long> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:447
#, no-wrap
msgid "    Person save(Person entity);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:450
#, no-wrap
msgid ""
"    Optional<Person> findById(Person entity);\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:452
#, no-wrap
msgid "Customizing individual repositories using repository fragments"
msgstr "リポジトリーフラグメントを使用した個々のリポジトリーのカスタマイズ"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:456
msgid "Repositories can be enriched with additional functionality or override the default implementation of methods of the supported Spring Data repositories.  This is best shown with an example."
msgstr "リポジトリーは、追加機能で強化したり、サポートされている Spring Data リポジトリーのメソッドのデフォルト実装をオーバーライドしたりできます。これを分かりやすく示しているのが以下の例です。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:458
msgid "A repository fragment is defined as so:"
msgstr "リポジトリーフラグメントは次のように定義されます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:462
#, no-wrap
msgid "public interface PersonFragment {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:465
#, no-wrap
msgid ""
"    // custom findAll\n"
"    List<Person> findAll();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:468
#, no-wrap
msgid ""
"    void makeNameUpperCase(Person person);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:471
msgid "The implementation of that fragment looks like this:"
msgstr "そのフラグメントの実装は次のようになります。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:477
#, no-wrap
msgid "import io.quarkus.hibernate.orm.panache.runtime.JpaOperations;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:479
#, no-wrap
msgid "public class PersonFragmentImpl implements PersonFragment {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:485
#, no-wrap
msgid ""
"    @Override\n"
"    public List<Person> findAll() {\n"
"        // do something here\n"
"        return (List<Person>) JpaOperations.findAll(Person.class).list();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:491
#, no-wrap
msgid ""
"    @Override\n"
"    public void makeNameUpperCase(Person person) {\n"
"        person.setName(person.getName().toUpperCase());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:494
msgid "Then the actual `PersonRepository` interface to be used would look like:"
msgstr "この場合、使用される実際の `PersonRepository` インターフェイスは次のようになります。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:498
#, no-wrap
msgid "public interface PersonRepository extends JpaRepository<Person, Long>, PersonFragment {\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:502
#, no-wrap
msgid "Derived query methods"
msgstr "派生クエリーメソッド"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:506
msgid "Methods of repository interfaces that follow the Spring Data conventions can be automatically implemented (unless they fall into one of the unsupported cases listed later on).  This means that methods like the following will all work:"
msgstr "Spring Data の規則に従うリポジトリーインターフェイスのメソッドは、(後でリストされているサポート対象外のケースに該当しない限り) 自動的に実装できます。これは、次のようなメソッドがすべて機能することを意味します。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:510
#, no-wrap
msgid "public interface PersonRepository extends CrudRepository<Person, Long> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:512
#, no-wrap
msgid "    List<Person> findByName(String name);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:514
#, no-wrap
msgid "    Person findByNameBySsn(String ssn);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:516
#, no-wrap
msgid "    Optional<Person> findByNameBySsnIgnoreCase(String ssn);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:518
#, no-wrap
msgid "    boolean existsBookByYearOfBirthBetween(Integer start, Integer end);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:520
#, no-wrap
msgid "    List<Person> findByName(String name, Sort sort);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:522
#, no-wrap
msgid "    Page<Person> findByNameOrderByJoined(String name, Pageable pageable);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:524
#, no-wrap
msgid "    List<Person> findByNameOrderByAge(String name);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:526
#, no-wrap
msgid "    List<Person> findByNameOrderByAgeDesc(String name, Pageable pageable);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:528
#, no-wrap
msgid "    List<Person> findByAgeBetweenAndNameIsNotNull(int lowerAgeBound, int upperAgeBound);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:530
#, no-wrap
msgid "    List<Person> findByAgeGreaterThanEqualOrderByAgeAsc(int age);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:532
#, no-wrap
msgid "    List<Person> queryByJoinedIsAfter(Date date);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:534
#, no-wrap
msgid "    Collection<Person> readByActiveTrueOrderByAgeDesc();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:536
#, no-wrap
msgid "    Long countByActiveNot(boolean active);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:538
#, no-wrap
msgid "    List<Person> findTop3ByActive(boolean active, Sort sort);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:541
#, no-wrap
msgid ""
"    Stream<Person> findPersonByNameAndSurnameAllIgnoreCase(String name, String surname);\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:543
#, no-wrap
msgid "User defined queries"
msgstr "ユーザー定義のクエリー"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:546
msgid "User supplied queries contained in the `@Query` annotation. For example things like the following all work:"
msgstr "`@Query` アノテーションに含まれるユーザー提供のクエリー。たとえば、次のようなものはすべて機能します。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:550
#, no-wrap
msgid "public interface MovieRepository extends CrudRepository<Movie, Long> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:552
#, no-wrap
msgid "    Movie findFirstByOrderByDurationDesc();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:555
#, no-wrap
msgid ""
"    @Query(\"select m from Movie m where m.rating = ?1\")\n"
"    Iterator<Movie> findByRating(String rating);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:558
#, no-wrap
msgid ""
"    @Query(\"from Movie where title = ?1\")\n"
"    Movie findByTitle(String title);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:561
#, no-wrap
msgid ""
"    @Query(\"select m from Movie m where m.duration > :duration and m.rating = :rating\")\n"
"    List<Movie> withRatingAndDurationLargerThan(@Param(\"duration\") int duration, @Param(\"rating\") String rating);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:564
#, no-wrap
msgid ""
"    @Query(\"from Movie where title like concat('%', ?1, '%')\")\n"
"    List<Object[]> someFieldsWithTitleLike(String title, Sort sort);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:568
#, no-wrap
msgid ""
"    @Modifying\n"
"    @Query(\"delete from Movie where rating = :rating\")\n"
"    void deleteByRating(@Param(\"rating\") String rating);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:572
#, no-wrap
msgid ""
"    @Modifying\n"
"    @Query(\"delete from Movie where title like concat('%', ?1, '%')\")\n"
"    Long deleteByTitleLike(String title);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:576
#, no-wrap
msgid ""
"    @Modifying\n"
"    @Query(\"update Movie m set m.rating = :newName where m.rating = :oldName\")\n"
"    int changeRatingToNewName(@Param(\"newName\") String newName, @Param(\"oldName\") String oldName);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:580
#, no-wrap
msgid ""
"    @Modifying\n"
"    @Query(\"update Movie set rating = null where title =?1\")\n"
"    void setRatingToNullForTitle(String title);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:584
#, no-wrap
msgid ""
"    @Query(\"from Movie order by length(title)\")\n"
"    Slice<Movie> orderByTitleLength(Pageable pageable);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:586
msgid "All methods that are annotated with `@Modifying` will automatically be annotated with `@Transactional`."
msgstr "`@Modified` でアノテーションが付けられたすべてのメソッドには、自動的に`@Transactional` でアノテーションが付けられます。"

#. type: Title ====
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:587
#, no-wrap
msgid "Naming Strategies"
msgstr "命名戦略"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:590
msgid "Hibernate ORM maps property names using a physical naming strategy and an implicit naming strategy. If you wish to use Spring Boot's default naming strategies, the following properties need to be set:"
msgstr "Hibernate ORM は、物理的な命名戦略と暗黙的な命名戦略を使用してプロパティー名をマップします。Spring Boot のデフォルトの命名戦略を使用する場合は、次のプロパティーを設定する必要があります。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:595
#, no-wrap
msgid ""
"quarkus.hibernate-orm.physical-naming-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy\n"
"quarkus.hibernate-orm.implicit-naming-strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:597
#, no-wrap
msgid "More examples"
msgstr "その他の例"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:600
msgid "An extensive list of examples can be seen in the https://github.com/quarkusio/quarkus/tree/main/integration-tests/spring-data-jpa[integration tests] directory which is located inside the Quarkus source code."
msgstr "多様な例のリストは、Quarkus ソースコード内の https://github.com/quarkusio/quarkus/tree/main/integration-tests/spring-data-jpa[統合テスト] にあります。"

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:601
#, no-wrap
msgid "What is currently unsupported"
msgstr "現在サポートされていないもの"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:604
msgid "Methods of the `org.springframework.data.repository.query.QueryByExampleExecutor` interface - if any of these are invoked, a Runtime exception will be thrown."
msgstr "`org.springframework.data.repository.query.QueryByExampleExecutor` インターフェイスのメソッド。そのいずれかが呼び出されると、ランタイム例外が出力されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:605
msgid "QueryDSL support. No attempt will be made to generate implementations of any of the QueryDSL related repositories."
msgstr "QueryDSL のサポート。QueryDSL 関連リポジトリーの実装を生成する試みは行われません。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:606
msgid "Customizing the base repository for all repository interfaces in the code base."
msgstr "コードベース内のすべてのリポジトリーインターフェイスのベースリポジトリーをカスタマイズします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:608
msgid "In Spring Data JPA this is done by registering a class that extends `org.springframework.data.jpa.repository.support.SimpleJpaRepository` however in Quarkus this class is not used at all (since all the necessary plumbing is done at build time). Similar support might be added to Quarkus in the future."
msgstr "Spring Data JPA では、これは `org.springframework.data.jpa.repository.support.SimpleJpaRepository` を拡張するクラスを登録することによって行われますが、Quarkus ではこのクラスはいっさい使用されません (必要な配置設定はすべてビルド時に行われるため)。将来、同様のサポートが Quarkus に追加される可能性があります。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:609
msgid "Using `java.util.concurrent.Future` and classes that extend it as return types of repository methods."
msgstr "`java.util.concurrent.Future` と、それをリポジトリーメソッドのリターンタイプとして拡張するクラスを使用します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:610
msgid "Native and named queries when using `@Query`"
msgstr "`@Query` を使用する場合のネイティブクエリーと名前付きクエリー"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:616
msgid "The Quarkus team is exploring various alternatives to bridging the gap between the JPA and Reactive worlds."
msgstr "Quarkus チームは、JPA と Reactive の間のギャップを埋めるために、さまざまな代替案を模索しています。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:617
#, no-wrap
msgid "Important Technical Note"
msgstr "重要な技術的な注意点"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:621
msgid "Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.  Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types."
msgstr "Quarkus での Spring サポートは、Spring アプリケーションコンテキストを開始せず、Spring インフラストラクチャークラスも実行されないことに注意してください。Spring クラスとアノテーションは、メタデータの読み取りにのみ使用されるか、ユーザーコードメソッドのリターンタイプまたはパラメータータイプとして使用されます。"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:622
#, no-wrap
msgid "More Spring guides"
msgstr "その他のSpringガイド"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-data-jpa.adoc:625
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkusには、より多くのSpring互換機能があります。詳細については、以下のガイドを参照してください。"
