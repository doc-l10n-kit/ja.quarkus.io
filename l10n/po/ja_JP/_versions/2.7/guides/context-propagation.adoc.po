msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Title =
#: upstream/_versions/2.7/guides/context-propagation.adoc:6
msgid "Context Propagation in Quarkus"
msgstr "Quarkusでのコンテキスト伝搬"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:8
#, fuzzy
msgid "link:./attributes.adoc[role=include]"
msgstr "./attributes.adoc"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:10
#, fuzzy
msgid ""
"Traditional blocking code uses link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/ThreadLocal.html[`ThreadLocal`]\n"
" variables to store contextual objects in order to avoid\n"
"passing them as parameters everywhere. Many Quarkus extensions require those contextual objects to operate\n"
"properly: xref:rest-json.adoc[RESTEasy], xref:cdi-reference.adoc[ArC] and xref:transaction.adoc[Transaction]\n"
"for example."
msgstr "従来のブロッキング・コードでは link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/ThreadLocal.html[ThreadLocal] 変数を使用してコンテキストオブジェクトを格納します。Quarkusの拡張機能の多くは、適切に動作するためにコンテキストオブジェクトを必要とします：例えば、 xref:rest-json.adoc[RESTEasy] 、 xref:cdi-reference.adoc[ArC] 、 xref:transaction.adoc[Transactionなど] です。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:16
msgid ""
"If you write reactive/async code, you have to cut your work into a pipeline of code blocks that get executed\n"
"\"later\", and in practice after the method you defined them in have returned. As such, `try/finally` blocks\n"
"as well as `ThreadLocal` variables stop working, because your reactive code gets executed in another thread,\n"
"after the caller ran its `finally` block."
msgstr "リアクティブ/非同期コードを書く場合、「後で」実行されるコードブロックのパイプラインに作業を切り 込まなければならず、実際には、定義したメソッドがreturnされた後に実行されます。そのため、 `try/finally` ブロックや `ThreadLocal` 変数は動作しなくなります。なぜならば、呼び出し元が `finally` ブロックを実行した後に、 リアクティブコードは別のスレッドで実行されるからです。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:21
msgid ""
"link:https://github.com/smallrye/smallrye-context-propagation[SmallRye Context Propagation] an implementation of\n"
"link:https://github.com/eclipse/microprofile-context-propagation[MicroProfile Context Propagation] was made to\n"
"make those Quarkus extensions work properly in reactive/async settings. It works by capturing those contextual\n"
"values that used to be in thread-locals, and restoring them when your code is called."
msgstr "link:https://github.com/eclipse/microprofile-context-propagation[MicroProfile Context Propagation] の実装である link:https://github.com/smallrye/smallrye-context-propagation[SmallRye Context Propagation] は、リアクティブ/非同期設定でQuarkusエクステンションが正しく動作するようにするために作られました。これは、スレッドローカルにあったコンテキスト値を取得し、コードが呼び出されたときにそれらを復元することで動作します。"

#. type: Title ==
#: upstream/_versions/2.7/guides/context-propagation.adoc:26
msgid "Solution"
msgstr "ソリューション"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:28
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:31
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:33
msgid "The solution is located in the `context-propagation-quickstart` {quickstarts-tree-url}/context-propagation-quickstart[directory]."
msgstr "このソリューションは `context-propagation-quickstart` {quickstarts-tree-url}/context-propagation-quickstart[directory]にあります。"

#. type: Title ==
#: upstream/_versions/2.7/guides/context-propagation.adoc:35
msgid "Setting it up"
msgstr "設定"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:37
msgid ""
"If you are using link:http://smallrye.io/smallrye-mutiny[Mutiny] (the `quarkus-mutiny` extension), you just need to add the\n"
"the `quarkus-smallrye-context-propagation` extension to enable context propagation."
msgstr "link:http://smallrye.io/smallrye-mutiny[Mutiny] ( `quarkus-mutiny` のエクステンション) を使用している場合は、コンテキストの伝播を有効にするために `quarkus-smallrye-context-propagation` のエクステンションを追加するだけです。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:40
msgid "In other words, add the following dependencies to your `pom.xml`:"
msgstr "つまり、以下の依存関係を `pom.xml` に追加します:"

#. type: Title ==
#: upstream/_versions/2.7/guides/context-propagation.adoc:43
msgid "pom.xml"
msgstr "pom.xml"

#. type: Title ==
#: upstream/_versions/2.7/guides/context-propagation.adoc:58
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:66
msgid "With this, you will get context propagation for ArC, RESTEasy and transactions, if you are using them."
msgstr "これにより、ArC、RESTEasy、トランザクションを使用している場合は、コンテキストの伝播を得ることができます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/context-propagation.adoc:68
msgid "Usage example with Mutiny"
msgstr "Mutinyとの使用例"

#. type: Title ==
#: upstream/_versions/2.7/guides/context-propagation.adoc:71
msgid "Mutiny"
msgstr "Mutiny"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:73
msgid ""
"This section uses Mutiny reactive types.\n"
"If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "このセクションでは、Mutinyのリアクティブ型を使用しています。もしMutinyに慣れていない場合は、まず xref:mutiny-primer.adoc[Mutiny - 直感的なリアクティブプログラミングライブラリ] を参照してください。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:77
msgid ""
"Let's write a REST endpoint that reads the next 3 items from a xref:kafka.adoc[Kafka topic], stores them in a database using\n"
"xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] (all in the same transaction) before returning\n"
"them to the client, you can do it like this:"
msgstr "link:kafka.html[Kafkaトピック]から次の3つのアイテムを読み込み、 link:hibernate-orm-panache.html[Panacheを使ったHibernate ORM]でデータベースに格納してから（すべて同じトランザクションで）、クライアントに返すRESTエンドポイントを書くとしたら、次のようになります:"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:109
msgid ""
"Notice that thanks to Mutiny support for context propagation, this works out of the box.\n"
"The 3 items are persisted using the same transaction and this transaction is committed when the stream completes."
msgstr "コンテキストの伝播のための Mutiny サポートのおかげで、これは、そのまま直ぐに動作することに注目してください。3つのアイテムは同じトランザクションを使用して保持され、このトランザクションはストリームが完了するとコミットされます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/context-propagation.adoc:112
msgid "Usage example for `CompletionStage`"
msgstr "`CompletionStage` の使用例"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:114
msgid ""
"If you are using link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/CompletionStage.html[`CompletionStage`]\n"
"you need manual context propagation. You can do that by injecting a `ThreadContext`\n"
"or `ManagedExecutor` that will propagate every context. For example, here we use the xref:vertx.adoc[Vert.x Web Client]\n"
"to get the list of Star Wars people, then store them in the database using\n"
"xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] (all in the same transaction) before returning\n"
"them to the client as JSON using xref:rest-json.adoc[Jackson or JSON-B]:"
msgstr "link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/CompletionStage.html[`CompletionStage`]を使っている場合は、手動でのコンテキストの伝播が必要です。そのためには、すべてのコンテキストを伝搬する `ThreadContext` または `ManagedExecutor` を注入することができます。例えば、ここでは link:vertx.html[Vert.x Web Client]を使用してStar Warsの人々のリストを取得し、 link:hibernate-orm-panache.html[Panacheを使用したHibernate ORM]を使用してデータベースに格納し（すべて同じトランザクションで）、 link:rest-json.html[JacksonまたはJSON-B]を使用してJSONとしてクライアントに返しています:"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:155
msgid ""
"Using `ThreadContext` or `ManagedExecutor` you can wrap most useful functional types and `CompletionStage`\n"
"in order to get context propagated."
msgstr "`ThreadContext` または `ManagedExecutor` を使用することで、ほとんどの有用な関数型と `CompletionStage` をラップしてコンテキストを伝播させることができます。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:160
msgid "The injected `ManagedExecutor` uses the Quarkus thread pool."
msgstr "注入された `ManagedExecutor` は、Quarkus のスレッドプールを使用しています。"

#. type: Title ==
#: upstream/_versions/2.7/guides/context-propagation.adoc:163
msgid "Overriding which contexts are propagated"
msgstr "どのコンテキストが伝搬されるかをオーバーライドする"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:165
msgid "By default, all available contexts are propagated. However, you can override this behaviour in several ways."
msgstr "デフォルトでは、利用可能なすべてのコンテキストが伝搬されます。しかし、この動作をいくつかの方法で上書きすることができます。"

#. type: Title ===
#: upstream/_versions/2.7/guides/context-propagation.adoc:167
msgid "Using configuration"
msgstr "設定の使用"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:169
msgid "The following configuration properties allow you to specify the default sets of propagated contexts:"
msgstr "以下の設定プロパティでは、伝搬されるコンテキストのデフォルトセットを指定できます。"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:173
msgid "Configuration Key"
msgstr "設定キー"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:193
msgid "Description"
msgstr "説明"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:173
msgid "Default Value"
msgstr "デフォルト値"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:175
msgid "`mp.context.ThreadContext.propagated`"
msgstr "`mp.context.ThreadContext.propagated`"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:176
msgid "The comma-separated set of propagated contexts"
msgstr "伝播されたコンテクストのコンマで区切られたセット"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:177
msgid "`Remaining` (all non-explicitly list contexts)"
msgstr "`Remaining` (すべての非明示的にリスト化されたコンテキスト)"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:179
msgid "`mp.context.ThreadContext.cleared`"
msgstr "`mp.context.ThreadContext.cleared`"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:180
msgid "The comma-separated set of cleared contexts"
msgstr "クリアされたコンテキストのコンマで区切りのセット"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:181
msgid "`None` (no context), unless neither the propagated nor cleared sets contain `Remaining`, in which case the default is `Remaining` (all non-explicitly listed contexts)"
msgstr "`None`（コンテキストなし）。ただし、伝播されたセットとクリアされたセットのどちらにも `Remaining` が含まれていない場合は、デフォルトで `Remaining` （明示されていないすべてのコンテキスト）となります"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:183
msgid "`mp.context.ThreadContext.unchanged`"
msgstr "`mp.context.ThreadContext.unchanged`"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:184
msgid "The comma-separated set of unchanged contexts"
msgstr "変更されていないコンテキストのコンマで区切られたセット"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:185
msgid "`None` (no context)"
msgstr "`None` （コンテキストなし）"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:188
msgid ""
"The following contexts are available in Quarkus either out of the box, or depending on whether you include\n"
"their extensions:"
msgstr "以下のコンテキストは、Quarkusで設定不要で利用可能か、エクステンションを追加するかによって使用できます:"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:193
msgid "Context Name"
msgstr "コンテキスト名"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:193
msgid "Name Constant"
msgstr "ネーム定数"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:195
msgid "`None`"
msgstr "`None`"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:196
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#NONE[`ThreadContext.NONE`]"
msgstr "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#NONE[`ThreadContext.NONE`]"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:197
msgid "Can be used to specify an empty set of contexts, but setting the value to empty works too"
msgstr "コンテキストの空のセットを指定するために使用できますが、値を空に設定しても機能します。"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:199
msgid "`Remaining`"
msgstr "`Remaining`"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:200
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#ALL_REMAINING[`ThreadContext.ALL_REMAINING`]"
msgstr "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#ALL_REMAINING[`ThreadContext.ALL_REMAINING`]"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:201
msgid "All the contexts that are not explicitly listed in other sets"
msgstr "他のセットに明示されていないすべてのコンテクスト"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:203
msgid "`Transaction`"
msgstr "`Transaction`"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:204
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#TRANSACTION[`ThreadContext.TRANSACTION`]"
msgstr "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#TRANSACTION[`ThreadContext.TRANSACTION`]"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:205
msgid "The JTA transaction context"
msgstr "JTAトランザクションコンテキスト"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:207
msgid "`CDI`"
msgstr "`CDI`"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:208
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#CDI[`ThreadContext.CDI`]"
msgstr "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#CDI[`ThreadContext.CDI`]"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:209
msgid "The CDI (ArC) context"
msgstr "CDI(ArC)のコンテキスト"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:211
msgid "`Servlet`"
msgstr "`Servlet`"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:216
msgid "N/A"
msgstr "N/A"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:213
msgid "The servlet context"
msgstr "サーブレットコンテキスト"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:215
msgid "`JAX-RS`"
msgstr "`JAX-RS`"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:217
msgid "The RESTEasy Classic context"
msgstr "RESTEasy Classic コンテキスト"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:219
msgid "`Application`"
msgstr "`Application`"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:220
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#APPLICATION[`ThreadContext.APPLICATION`]"
msgstr "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#APPLICATION[`ThreadContext.APPLICATION`]"

#. type: Table
#: upstream/_versions/2.7/guides/context-propagation.adoc:221
msgid "The current `ThreadContextClassLoader`"
msgstr "現在の `ThreadContextClassLoader`"

#. type: Title ===
#: upstream/_versions/2.7/guides/context-propagation.adoc:224
msgid "Overriding the propagated contexts using annotations"
msgstr "伝播されたコンテキストをアノテーションで上書き"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:226
msgid ""
"In order for automatic context propagation, such as Mutiny uses, to be overridden in specific methods,\n"
"you can use the https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/CurrentThreadContext.html[`@CurrentThreadContext`]\n"
"annotation:"
msgstr "Mutinyが使用しているような自動コンテキスト伝搬を、特定のメソッドでオーバーライドするためには link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/CurrentThreadContext.html[`@CurrentThreadContext`] アノテーションを使用します:"

#. type: Title ===
#: upstream/_versions/2.7/guides/context-propagation.adoc:249
msgid "Overriding the propagated contexts using CDI injection"
msgstr "CDIインジェクションを用いた伝搬されたコンテキストのオーバーライド"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:251
msgid "You can also inject a custom-built `ThreadContext` using the https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ThreadContextConfig.html[`@ThreadContextConfig`] annotation on your injection point:"
msgstr "また、インジェクションポイントに link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ThreadContextConfig.html[`@ThreadContextConfig`]アノテーションを使うことでカスタムメイドの `ThreadContext` を注入することもできます:"

#. type: Title ==
#: upstream/_versions/2.7/guides/context-propagation.adoc:277
msgid "Context Propagation for CDI"
msgstr "CDIのためのコンテキスト伝搬"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:279
msgid ""
"In terms of CDI, `@RequestScoped`, `@ApplicationScoped` and `@Singleton` beans get propagated and are available in other threads.\n"
"`@Dependent` beans as well as any custom scoped beans cannot be automatically propagated via CDI Context Propagation."
msgstr "CDI の観点からは、 `@RequestScoped`, `@ApplicationScoped`, `@Singleton` Beanは伝播され、他のスレッドで利用可能です。 `@Dependent` BeanやカスタムスコープされたBeanは、CDI コンテキスト伝播を介して自動的に伝播されることはありません。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:283
msgid ""
"`@ApplicationScoped` and `@Singleton` beans are always active scopes and as such are easy to deal with - context propagation tasks can work with those beans so long as the CDI container is running.\n"
"However, `@RequestScoped` beans are a different story. They are only active for a short period of time which can be bound either to HTTP request or some other request/task when manually activated/deactivated.\n"
"In this case user must be aware that once the original thread gets to an end of a request, it will terminate the context, calling `@PreDestroy` on those beans and then clearing them from the context.\n"
"Subsequent attempts to access those beans from other threads can result in unexpected behaviour.\n"
"It is therefore recommended to make sure all tasks using request scoped beans via context propagation are performed in such a manner that they don't outlive the original request duration."
msgstr "`@ApplicationScoped` と `@Singleton` のBeanは常にアクティブなスコープであり、そのため対処が簡単です - コンテキスト伝播タスクは、CDI コンテナーが動作している限り、これらのBeanで動作します。しかし、 `@RequestScoped` Beanは話が違います。手動で有効化/無効化すると、HTTP リクエストや他のリクエスト/タスクにバインドされます。この場合、元のスレッドがリクエストの終了に到達すると、コンテキストを終了し、それらのBeanで `@PreDestroy` を呼び出し、コンテキストからクリアされることに注意しなければなりません。その後、他のスレッドからこれらのBeanにアクセスしようとすると、予期せぬ動作をすることがあります。したがって、コンテキストの伝播を介してリクエストスコープされたBeanを使用するすべてのタスクは、元のリクエストの持続時間を超えないような方法で実行されることを確認することが推奨されます。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/context-propagation.adoc:292
msgid "Due to the above described behavior, it is recommended to avoid using `@PreDestroy` on `@RequestScoped` beans when working with Context Propagation in CDI."
msgstr "上記で説明した動作のため、CDI で Context Propagation を使用する際には `@PreDestroy` を `@RequestScoped` Beanで使用しないことをお勧めします。"
