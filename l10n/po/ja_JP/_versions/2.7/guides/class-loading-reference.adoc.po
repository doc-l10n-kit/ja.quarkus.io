msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Title =
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:6
msgid "Class Loading Reference"
msgstr "クラスローディングリファレンス"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:8
msgid "link:./attributes.adoc[role=include]"
msgstr "link:./attributes.adoc[role=include]"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:10
msgid ""
"This document explains the Quarkus class loading architecture. It is intended for extension\n"
"authors and advanced users who want to understand exactly how Quarkus works."
msgstr "このドキュメントでは、Quarkus のクラスロードアーキテクチャについて説明します。このドキュメントは、Quarkus がどのように動作するかを正確に理解したいエクステンションの作者や上級ユーザーを対象としています。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:13
msgid ""
"The Quarkus class loading architecture is slightly different depending on the mode that\n"
"the application is run in. When running a production application everything is loaded\n"
"in the system ClassLoader, so it is a completely flat class path. This also applies to\n"
"native image mode which does not really support multiple ClassLoaders, and is based on\n"
"a normal production Quarkus application."
msgstr "Quarkus のクラスロードアーキテクチャは、アプリケーションを実行するモードによって若干異なります。本番環境のアプリケーションを実行しているときは、すべてがシステム ClassLoader でロードされるため、完全にフラットなクラスパスとなります。これは、複数の ClassLoader をサポートしていないネイティブイメージモードにも当てはまり、通常のプロダクション Quarkus アプリケーションをベースにしています。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:19
msgid ""
"For all other use cases (e.g. tests, dev mode, and building the application) Quarkus\n"
"uses the class loading architecture outlined here."
msgstr "その他のすべてのユースケース(テスト、開発モード、アプリケーションのビルドなど)では、Quarkus はここで説明したクラスロードアーキテクチャを使用します。"

#. type: Title ==
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:23
msgid "Bootstrapping Quarkus"
msgstr "Quarkus のブートストラップ"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:25
msgid ""
"All Quarkus applications are created by the QuarkusBootstrap class in the `independent-projects/bootstrap` module. This\n"
"class is used to resolve all the relevant dependencies (both deployment and runtime) that are needed for the Quarkus\n"
"application. The end result of this process is a `CuratedApplication`, which contains all the class loading information\n"
"for the application."
msgstr "すべての Quarkus アプリケーションは、 `independent-projects/bootstrap` モジュールの QuarkusBootstrap クラスによって作成されます。このクラスは、Quarkus アプリケーションに必要なすべての関連する依存関係(デプロイメントとランタイムの両方)を解決するために使用されます。このプロセスの最終結果は、 `CuratedApplication` であり、これにはアプリケーションのすべてのクラスロード情報が含まれています。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:30
msgid ""
"The `CuratedApplication` can then be used to create an `AugmentAction` instance, which can create production application\n"
"and start/restart runtime ones. This application instance exists within an isolated ClassLoader, it is not necessary\n"
"to have any of the Quarkus deployment classes on the class path as the curate process will resolve them for you."
msgstr "次に、 `CuratedApplication` を使用して `AugmentAction` インスタンスを作成し、本番アプリケーションを作成したり、ランタイムのものを起動/再起動したりすることができます。このアプリケーションインスタンスは、分離された ClassLoader 内に存在しています。収集処理によって解決されるため、クラスパスに Quarkus デプロイメントクラスを配置する必要はありません。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:34
msgid "This bootstrap process should be the same no matter how Quarkus is launched, just with different parameters passed in."
msgstr "このブートストラッププロセスは、Quarkus がどのように起動されても、異なるパラメーターが渡されているだけで、同じであるべきです。"

#. type: Title ===
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:36
msgid "Current Run Modes"
msgstr "現在の実行モード"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:38
msgid "At the moment we have the following use cases for bootstrapping Quarkus:"
msgstr "現在のところ、Quarkus のブートストラップには以下のようなユースケースがあります。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:40
msgid "Maven creating production application"
msgstr "Maven による本番アプリケーションの作成"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:41
msgid "Maven dev mode"
msgstr "Maven の開発モード"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:42
msgid "Gradle creating a production application"
msgstr "Gradle による本番アプリケーションの作成"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:43
msgid "Gradle dev mode"
msgstr "Gradle の開発モード"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:44
msgid "QuarkusTest (Maven, Gradle and IDE)"
msgstr "QuarkusTest (Maven、Gradle、IDE)"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:45
msgid "QuarkusUnitTest (Maven, Gradle and IDE)"
msgstr "QuarkusUnitTest (Maven、Gradle、IDE)"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:46
msgid "QuarkusDevModeTest (Maven, Gradle and IDE)"
msgstr "QuarkusDevModeTest(Maven、Gradle、IDE)"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:47
msgid "Arquillian Adaptor"
msgstr "Arquillian アダプター"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:49
msgid "One of the goals of this refactor is to have all these different run modes boot Quarkus in fundamentally the same way."
msgstr "このリファクタの目的の一つは、これらの異なる実行モードのすべてが基本的に同じ方法で Quarkus を起動できるようにすることです。"

#. type: Title ===
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:51
msgid "Notes on Transformer Safety"
msgstr "Transformer の安全性に関する注意事項"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:53
msgid ""
"A ClassLoader is said to be 'transformer safe' if it is safe to load classes in the class loader before the transformers\n"
"are ready. Once a class has been loaded it cannot be changed, so if a class is loaded before the transformers have been\n"
"prepared this will prevent the transformation from working. Loading classes in a transformer safe ClassLoader will not\n"
"prevent the transformation, as the loaded class is not used at runtime."
msgstr "ClassLoader は、Transformer が準備される前にクラスをロードしても安全であれば、「Transformerセーフ」と言われます。一度ロードされたクラスは変更することができないので、もし Transformer の準備が整う前にロードされた場合、変換が機能しなくなります。Transformer セーフな ClassLoader でクラスをロードした場合は、ロードされたクラスは実行時には使用されないので、変換を妨げることはありません。"

#. type: Title ==
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:58
msgid "ClassLoader Implementations"
msgstr "クラスローダーの実装"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:60
msgid "Quarkus has the following ClassLoaders:"
msgstr "Quarkus には以下のClassLoadersがあります:"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:62
msgid "Base ClassLoader"
msgstr "ベース ClassLoader"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:63
msgid ""
"This is usually the normal JVM System ClassLoader. In some environments such as Maven it may be different. This ClassLoader\n"
"is used to load the bootstrap classes, and other ClassLoader instances will delegate the loading of JDK classes to it."
msgstr "これは通常、通常の JVM System ClassLoader です。Maven のような環境では異なる場合があります。この ClassLoader はブートストラップクラスをロードするために使用され、他の ClassLoader インスタンスは JDK クラスのロードをこれに委譲します。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:67
msgid "Augment ClassLoader"
msgstr "拡張 ClassLoader"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:68
msgid ""
"This loads all the `-deployment` artifacts and their dependencies, as well as other user dependencies. It does not load the\n"
"application root or any hot deployed code. This ClassLoader is persistent, even if the application restarts it will remain\n"
"(which is why it cannot load application classes that may be hot deployed). Its parent is the base ClassLoader, and it is\n"
"transformer safe."
msgstr "これは、すべての `-deployment` アーティファクトとその依存関係、および他のユーザー依存関係をロードします。アプリケーションのルートやホットデプロイされたコードはロードしません。この ClassLoader は永続的に動作し、アプリケーションが再起動してもそれは残ります (ホットデプロイされている可能性のあるアプリケーションクラスをロードできないのはそのためです)。親はベースの ClassLoader であり、Transformerセーフです。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:74
msgid ""
"At present this can be configured to delegate to the Base ClassLoader, however the plan is for this option to go away and\n"
"always have this as an isolated ClassLoader. Making this an isolated ClassLoader is complicated as it means that all\n"
"the builder classes are isolated, which means that use cases that want to customise the build chains are slightly more complex."
msgstr "現在のところ、これはベース ClassLoader に委譲するように設定することができますが、計画ではこのオプションは廃止され、常に分離された ClassLoader として使用することになっています。これを分離型 ClassLoader にすることは、すべてのビルダクラスが分離されていることを意味するので複雑です。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:78
msgid "Deployment ClassLoader"
msgstr "デプロイメント ClassLoader"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:79
msgid "This can load all application classes, its parent is the Augment ClassLoader so it can also load all deployment classes."
msgstr "これはすべてのアプリケーションクラスをロードすることができ、その親は 拡張 ClassLoader なので、すべてのデプロイメントクラスをロードすることもできます。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:82
msgid ""
"This ClassLoader is non-persistent, it will be re-created when the application is started, and is isolated. This ClassLoader\n"
"is the context ClassLoader that is used when running the build steps. It is also transformer safe."
msgstr "この ClassLoader は永続的ではなく、アプリケーションの起動時に再作成され、分離されています。この ClassLoader は、ビルドステップを実行する際に使用されるコンテキスト ClassLoader です。また、Transformerセーフでもあります。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:85
msgid "Base Runtime ClassLoader"
msgstr "ベースランタイム ClassLoader"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:86
msgid ""
"This loads all the runtime extension dependencies, as well as other user dependencies (note that this may include duplicate\n"
"copies of classes also loaded by the Augment ClassLoader). It does not load the application root or any hot deployed\n"
"code. This ClassLoader is persistent, even if the application restarts it will remain (which is why it cannot load\n"
"application classes that may be hot deployed). Its parent is the base ClassLoader."
msgstr "これは、他のユーザー依存関係と同様に、すべてのランタイムエクステンション依存関係をロードします(これには 拡張 ClassLoader によってロードされたクラスの重複コピーも含まれる可能性があることに注意してください)。アプリケーションのルートやホットデプロイされたコードはロードされません。この ClassLoader は永続的なもので、アプリケーションが再起動しても残ります (ホットデプロイされている可能性のあるアプリケーションクラスをロードできないのはそのためです)。親はベース ClassLoader です。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:92
msgid ""
"This loads code that is not hot-reloadable, but it does support transformation (although once the class is loaded this\n"
"transformation is no longer possible). This means that only transformers registered in the first application start\n"
"will take effect, however as these transformers are expected to be idempotent this should not cause problems. An example\n"
"of the sort of transformation that might be required here is a Panache entity packaged in an external jar. This class\n"
"needs to be transformed to have its static methods implemented, however this transformation only happens once, so\n"
"restarts use the copy of the class that was created on the first start."
msgstr "これはホットリロードできないコードをロードしますが、変換をサポートしています (ただし、クラスがロードされるとこの変換はできなくなります)。これは、最初のアプリケーション起動時に登録された Transformer のみが有効になることを意味しますが、これらの Transformer は冪等であることが期待されているため、これは問題を引き起こすことはないはずです。ここで必要となる可能性のある変換の例として、外部 jar にパッケージ化された Panache エンティティーがあります。このクラスは静的メソッドを実装するために変換する必要がありますが、この変換は一度しか行われないため、再起動時には最初の起動時に作成されたクラスのコピーを使用します。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:99
msgid ""
"This ClassLoader is isolated from the Augment and Deployment ClassLoaders. This means that it is not possible to set\n"
"values in a static field in the deployment side, and expect to read it at runtime. This allows dev and test applications\n"
"to behave more like a production application (production applications are isolated in that they run in a whole new JVM)."
msgstr "この ClassLoader は、拡張 ClassLoader とデプロイメント ClassLoader から分離されています。つまり、デプロイメント側の静的フィールドに値を設定して、実行時に読み込まれることを期待することはできません。これにより、開発アプリケーションやテストアプリケーションが本番アプリケーションのように振る舞うことができます(本番アプリケーションは全く新しい JVM で実行されるという点で分離されています)。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:103
msgid ""
"This also means that the runtime version can be linked against a different set of dependencies, e.g. the hibernate\n"
"version used at deployment time might want to include ByteBuddy, while the version used at runtime does not."
msgstr "これは、実行時のバージョンは別の依存関係のセットに対してリンクされる可能性があることを意味します。例えば、デプロイ時に使用する Hibernate バージョンには ByteBuddy が含まれていても、実行時に使用するバージョンには含まれていない場合があります。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:106
msgid "Runtime Class Loader"
msgstr "ランタイムクラス ローダー"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:107
msgid ""
"This ClassLoader is used to load the application classes and other hot deployable resources. Its parent is the base runtime\n"
"ClassLoader, and it is recreated when the application is restarted."
msgstr "この ClassLoader は、アプリケーションクラスやその他のホットデプロイ可能なリソースをロードするために使用されます。親はベースランタイム ClassLoader で、アプリケーションの再起動時に再作成されます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:112
msgid "Isolated ClassLoaders"
msgstr "分離型クラスローダー"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:114
msgid ""
"The runtime ClassLoader is always isolated. This means that it will have its own copies of almost every class from the\n"
"resolved dependency list. The exception to this are:"
msgstr "ランタイムの ClassLoader は常に分離されています。これは、解決された依存関係リストのほとんどすべてのクラスの独自のコピーを持つことを意味します。これには例外があります:"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:117
msgid "JDK classes"
msgstr "JDK クラス"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:118
msgid "Classes from artifacts that extensions have marked as parent first (more on this later)."
msgstr "エクステンションが親優先とマークしたアーティファクトからのクラス (これについては後述します)。"

#. type: Title ===
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:120
msgid "Parent First Dependencies"
msgstr "親優先の依存関係"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:122
msgid ""
"There are some classes that should not be loaded in an isolated manner, but that should always be loaded by the system\n"
"ClassLoader (or whatever ClassLoader is responsible for bootstrapping Quarkus). Most extensions do not need to worry about\n"
"this, however there are a few cases where this is necessary:"
msgstr "分離された方法でロードされるべきではないクラスがいくつかありますが、それは常にシステムの ClassLoader(または Quarkus のブートストラップを担当している ClassLoader )によってロードされなければなりません。ほとんどのエクステンションはこのことを気にする必要はありませんが、必要な場合もあります:"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:126
msgid "Some logging related classes, as logging must be loaded by the system ClassLoader"
msgstr "ロギングはシステム ClassLoader によってロードされなければならないので、いくつかのロギング関連のクラス"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:127
msgid "Quarkus bootstrap itself"
msgstr "Quarkus のブートストラップ自体"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:129
msgid ""
"If this is required it can be configured in the `quarkus-bootstrap-maven-plugin`. Note that if you\n"
"mark a dependency as parent first then all of its dependencies must also be parent first,\n"
"or a `LinkageError` can occur."
msgstr "これが必要な場合は、 `quarkus-bootstrap-maven-plugin` で設定することができます。 依存関係を親優先とマークした場合は、その依存関係もすべて親優先にしなければならないことに注意してください。そうでないと、 `LinkageError` が発生します。"

#. type: Title ===
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:150
msgid "Banned Dependencies"
msgstr "禁止された依存関係"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:152
msgid ""
"There are some dependencies that we can be sure we do not want. This generally happens when a dependency has had a name\n"
"change (e.g. smallrye-config changing groups from `org.smallrye` to `org.smallrye.config`, the `javax` -> `jakarta` rename).\n"
"This can cause problems, as if these artifacts end up in the dependency tree out of date classes can be loaded that are\n"
"not compatible with Quarkus. To deal with this extensions can specify artifacts that should never be loaded. This is\n"
"done by modifying the `quarkus-bootstrap-maven-plugin` config in the pom (which generates the `quarkus-extension.properties`\n"
"file). Simply add an `excludedArtifacts` section as shown below:"
msgstr "依存関係の中には、必要ないと確信できるものもあります。これは一般的に、依存関係の名前が変更された場合に起こります(例:smallrye-configがグループを `org.smallrye` から `org.smallrye.config` に変更した、 `javax` → `jakarta` のリネームなど)。これは問題を引き起こす可能性があります。これらのアーティファクトが依存関係ツリーで終わると、Quarkusと互換性のない古いクラスがロードされる可能性があるからです。この問題に対処するために、エクステンションでは、決してロードしてはいけないアーティファクトを指定することができます。これは、 `quarkus-extension.properties` ファイルを生成する pom の `quarkus-bootstrap-maven-plugin` 設定を変更することで行います。以下のように `excludedArtifacts` セクションを追加するだけです:"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:173
msgid ""
"This should only be done if the extension depends on a newer version of these artifacts. If the extension does not bring\n"
"in a replacement artifact as a dependency then classes the application needs might end up missing."
msgstr "これは、エクステンションがこれらのアーティファクトの新しいバージョンに依存している場合にのみ行うべきです。もしエクステンションが代替アーティファクトを依存関係として持ち込まなかった場合、 アプリケーションが必要とするクラスが見つからなくなってしまうかもしれません。"

#. type: Title ==
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:176
msgid "Configuring Class Loading"
msgstr "クラスローディングの設定"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:178
msgid ""
"It is possible to configure some aspects of class loading in dev and test mode. This can be done using `application.properties`.\n"
"Note that class loading config is different to normal config, in that it does not use the standard Quarkus config mechanisms\n"
"(as it is needed too early), so only supports `application.properties`. The following options are supported."
msgstr "開発モードとテストモードでクラスローディングのいくつかの側面を設定することができます。これは、 `application.properties` を使用して行うことができます。クラスローディングの設定は通常の設定とは異なり、標準のQuarkusの設定メカニズムを使用していないため（必要な時期が早すぎるため）、 `application.properties` のみをサポートしていることに注意してください。以下のオプションがサポートされています。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:183
#, fuzzy
msgid "link:{generated-dir}/config/quarkus-class-loading-configuration-class-loading-config.adoc[role=include]"
msgstr "link:{generated-dir}/config/quarkus-class-loading-configuration-class-loading-config.adoc[{生成ディレクトリ}/config/quarkus-class-loading-configuration-class-loading-config.adoc]"

#. type: Title ==
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:185
msgid "Hiding/Removing classes and resources from dependencies"
msgstr "クラスやリソースを依存関係から隠す/取り除く"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:187
msgid ""
"It is possible to hide/remove classes and resources from dependencies. This is an advanced option, but it can be useful\n"
"at times. This is done via the `quarkus.class-loading.removed-resources` config key, for example:"
msgstr "クラスやリソースを依存関係から隠したり、削除したりすることができます。これは上級者向けのオプションですが、ときには便利なこともあります。これは、 `quarkus.class-loading.removed-resources` 設定キーで行うことが可能です。例:"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:190
msgid "`quarkus.class-loading.removed-resources.\"io.quarkus\\:quarkus-integration-test-shared-library\"=io/quarkus/it/shared/RemovedResource.class`"
msgstr "`quarkus.class-loading.removed-resources.\"io.quarkus\\:quarkus-integration-test-shared-library\"=io/quarkus/it/shared/RemovedResource.class`"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:192
msgid "This will remove the `RemovedResource.class` file from the `io.quarkus:quarkus-integration-test-shared-library` artifact."
msgstr "これにより、 `io.quarkus:quarkus-integration-test-shared-library` のアーティファクトから `RemovedResource.class` のファイルが削除されます。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:194
msgid ""
"Even though this option is a class loading option it will also affect the generated application, so when the application\n"
"is created removed resources will not be accessible."
msgstr "このオプションはクラスローディングオプションですが、生成されたアプリケーションにも影響するため、アプリケーションが作成されると、削除されたリソースにはアクセスできなくなります。"

#. type: Title ==
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:197
msgid "Reading Class Bytecode"
msgstr "クラスバイトコードの読み取り"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:199
msgid ""
"It is important to use the correct `ClassLoader`. The recommended approach is to get it by calling the\n"
"`Thread.currentThread().getContextClassLoader()` method."
msgstr "正しい `ClassLoader` を使用することが重要です。推奨される方法は、 `Thread.currentThread().getContextClassLoader()` メソッドを呼び出して取得することです。"

#. type: Plain Text
#: upstream/_versions/2.7/guides/class-loading-reference.adoc:202
msgid "Example:"
msgstr "例:"
