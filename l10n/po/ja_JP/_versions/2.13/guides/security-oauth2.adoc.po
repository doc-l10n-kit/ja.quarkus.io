msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Title =
#: upstream/_versions/2.13/guides/security-oauth2.adoc:6
msgid "Using OAuth2 RBAC"
msgstr "OAuth2 RBACの使用"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:12
msgid "This guide explains how your Quarkus application can utilize OAuth2 tokens to provide secured access to the JAX-RS endpoints."
msgstr "このガイドでは、QuarkusアプリケーションでOAuth2トークンを利用して、JAX-RSエンドポイントへのセキュアなアクセスを提供する方法について説明します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:14
msgid ""
"OAuth2 is an authorization framework that enables applications to obtain access to an HTTP resource on behalf of a user.\n"
"It can be used to implement an application authentication mechanism based on tokens by delegating to an external server (the authentication server) the user authentication and providing a token for the authentication context."
msgstr "OAuth2は、アプリケーションがユーザーに代わってHTTPリソースへのアクセスを取得することを可能にする認可フレームワークです。ユーザー認証を外部サーバー(認証サーバー)に委譲し、認証コンテキストにトークンを提供することで、トークンに基づくアプリケーション認証の仕組みを実装することができます。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:17
msgid "This extension provides a light-weight support for using the opaque Bearer Tokens and validating them by calling an introspection endpoint."
msgstr "このエクステンションは、opaque形式のBearerトークンを使用してイントロスペクションエンドポイントを呼び出して検証するための軽量サポートを提供します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:19
msgid ""
"If the OAuth2 Authentication server provides JWT Bearer Tokens then you should consider using either xref:security-openid-connect.adoc[OpenID Connect] or xref:security-jwt.adoc[SmallRye JWT] extensions instead.\n"
"OpenID Connect extension has to be used if the Quarkus application needs to authenticate the users using OIDC Authorization Code Flow, please read xref:security-openid-connect-web-authentication.adoc[Using OpenID Connect to Protect Web Applications] guide for more information."
msgstr "OAuth2認証サーバーがJWT形式のBearer Tokensを提供する場合は、代わりに xref:security-openid-connect.adoc[OpenID Connect] または xref:security-jwt.adoc[SmallRye JWT] エクステンションの使用を検討する必要があります。QuarkusアプリケーションがOIDC認可コードフローを使用してユーザー認証する場合は、OpenID Connectエクステンションを使用する必要があります。詳しくは、xref:security-openid-connect-web-authentication.adoc[OpenID Connect を使った WEB アプリケーションの保護] をご覧ください。"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-oauth2.adoc:24
msgid "Solution"
msgstr "ソリューション"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:26
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次のセクションの指示に従って、段階的にアプリケーションを作成していくことをお勧めします。ただし、完成した例にすぐにアクセスすることもできます。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:29
msgid "Clone the Git repository: git clone https://github.com/quarkusio/quarkus-quickstarts.git, or download an archive."
msgstr "Git リポジトリのクローン: git clone https://github.com/quarkusio/quarkus-quickstarts.git 、またはアーカイブをダウンロードしてください。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:31
msgid ""
"The solution is located in the `security-oauth2-quickstart` {quickstarts-tree-url}/security-oauth2-quickstart[directory].\n"
"It contains a very simple UI to use the JAX-RS resources created here, too."
msgstr "ソリューションは `security-oauth2-quickstart` {quickstarts-tree-url}/security-oauth2-quickstart[ディレクトリ] にあります。ここで作成したJAX-RSリソースを利用するための非常にシンプルなUIも含まれています。"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-oauth2.adoc:34
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:36
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:42
msgid "This command generates a project and imports the `elytron-security-oauth2` extension, which includes the OAuth2 opaque token support."
msgstr "このコマンドはプロジェクトを生成し、OAuth2のopaqueトークンのサポートを含む `elytron-security-oauth2` エクステンションをインポートします。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:44
msgid "If you don't want to use the Maven plugin, you can just include the dependency in your build file:"
msgstr "Mavenプラグインを使用したくない場合は、ビルドファイルに依存関係を含めるだけでよいです:"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-oauth2.adoc:332
msgid "pom.xml"
msgstr "pom.xml"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-oauth2.adoc:344
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-oauth2.adoc:61
msgid "Examine the JAX-RS resource"
msgstr "JAX-RSのリソース調査"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:63
msgid "Create the `src/main/java/org/acme/security/oauth2/TokenSecuredResource.java` file with the following content:"
msgstr "以下の内容で  `src/main/java/org/acme/security/oauth2/TokenSecuredResource.java` ファイルを作成します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:85
msgid "This is a basic REST endpoint that does not have any of the {extension-name} specific features, so let's add some."
msgstr "これは {extension-name} 特有の機能を持たない基本的なRESTエンドポイントなので、いくつか追加してみましょう。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:87
msgid "We will use the JSR 250 common security annotations, they are described in the xref:security.adoc[Using Security] guide."
msgstr "JSR 250の共通セキュリティアノテーションを使用します。これらは、 xref:security.adoc[セキュリティの利用] ガイドで説明されています。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:121
msgid "`@PermitAll` indicates that the given endpoint is accessible by any caller, authenticated or not."
msgstr "`@PermitAll` は、認証されているかどうかに関わらず、どのような呼出元からでもアクセス可能であることを示しています。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:122
msgid "Here we inject the JAX-RS `SecurityContext` to inspect the security state of the call."
msgstr "ここでは、JAX-RS `SecurityContext` をインジェクションして、呼出元のセキュリティー状態を検査します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:123
msgid "Here we obtain the current request user/caller `Principal`. For an unsecured call this will be null, so we build the username by checking `caller` against null."
msgstr "ここでは、現在のリクエストの ユーザー/呼出元である `Principal` を取得します。セキュリティー保護されていない呼出の場合、これはnullになりますので、 `caller` をnullかチェックしてユーザー名を作成します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:124
msgid "The reply we build up makes use of the caller name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`."
msgstr "私たちが作成した応答では 呼出元の名前、リクエストの `SecurityContext` の `isSecure()` と `getAuthenticationScheme()` の状態を利用しています。"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-oauth2.adoc:127
msgid "Setting up application.properties"
msgstr "application.propertiesの設定"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:129
msgid "You need to configure your application with the following minimal properties:"
msgstr "アプリケーションには、以下の最小限のプロパティーを設定する必要があります:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:138
msgid ""
"You need to specify the introspection URL of your authentication server and the `client-id` / `client-secret` that your application will use to authenticate itself to the authentication server. +\n"
"The extension will then use this information to validate the token and recover the information associate with it."
msgstr "認証サーバーのイントロスペクション URL と、アプリケーションが認証サーバーへの認証に使用する `client-id` / `client-secret` を指定する必要があります。+ エクステンションはこの情報を使ってトークンを検証し、トークンに関連する情報を復元します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:141
msgid "For all configuration properties, see the <<config-reference,Configuration reference>> section at the end of this guide."
msgstr "すべての設定プロパティについては、本ガイドの最後にある <<config-reference,設定リファレンス>> セクションを参照してください。"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-oauth2.adoc:143
msgid "Run the application"
msgstr "アプリケーションの実行"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:145
msgid "Now we are ready to run our application. Use:"
msgstr "これで、アプリケーションを実行する準備が整いました。次を実行してください:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:149
msgid "Now that the REST endpoint is running, we can access it using a command line tool like curl:"
msgstr "REST エンドポイントが実行されているので、curl のようなコマンドラインツールを使ってアクセスすることができます。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:157
msgid "We have not provided any token in our request, so we would not expect that there is any security state seen by the endpoint, and the response is consistent with that:"
msgstr "リクエストでトークンを提供していないため、エンドポイントが見ているセキュリティー状態があるとは期待できず、レスポンスもそれと一致しています:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:159
msgid "username is anonymous"
msgstr "ユーザー名は anonymous (匿名) です。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:160
msgid "`isSecure` is false as https is not used"
msgstr "`isSecure` は https が使用されていないため false です。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:161
msgid "`authScheme` is null"
msgstr "`authScheme` はnullです。"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-oauth2.adoc:163
msgid "Securing the endpoint"
msgstr "エンドポイントのセキュア化"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:165
msgid "So now let's actually secure something. Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "では実際に何かをセキュア化してみましょう。下記の新しいエンドポイントメソッド `helloRolesAllowed` を見てみましょう:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:210
msgid "This new endpoint will be located at `/secured/roles-allowed`"
msgstr "この新しいエンドポイントは `/secured/roles-allowed` に配置されます"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:211
msgid "`@RolesAllowed` indicates that the given endpoint is accessible by a caller if they have either an \"Echoer\" or a \"Subscriber\" role assigned."
msgstr "`@RolesAllowed` は指定されたエンドポイントに、呼び出し側が “Echoer” または “Subscriber” のいずれかのロールを割り当てている場合にアクセス可能であることを示します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:213
msgid "After you make this addition to your `TokenSecuredResource`, try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint. Your output should be:"
msgstr "`TokenSecuredResource` に追加後、 `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` を実行し、新しいエンドポイントへのアクセスを試してください。出力は次のようになるはずです:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:236
msgid "Excellent, we have not provided any OAuth2 token in the request, so we should not be able to access the endpoint, and we were not. Instead, we received an HTTP 401 Unauthorized error. We need to obtain and pass in a valid OAuth2 token to access that endpoint. There are two steps to this, 1) configuring our {extension-name} extension with information on how to validate the token, and 2) generating a matching token with the appropriate claims."
msgstr "素晴らしいことに、リクエストでOAuth2トークンを提供していないので、エンドポイントにアクセスできないはずですが、そうではありませんでした。代わりに、HTTP 401 Unauthorized エラーが発生しました。エンドポイントにアクセスするためには、有効な OAuth2 トークンを取得して渡す必要があります。1) {extension-name} エクステンションにトークンの検証方法を設定する、2) 適切なクレームを含む一致するトークンを生成する。"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-oauth2.adoc:238
msgid "Generating a token"
msgstr "トークンの生成"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:240
msgid "You need to obtain the token from a standard OAuth2 authentication server (https://www.keycloak.org/[Keycloak] for example) using the token endpoint."
msgstr "標準的なOAuth2認証サーバー（例えば https://www.keycloak.org/[Keycloak] ）から、トークンのエンドポイントを使用してトークンを取得する必要があります。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:242
msgid "You can find below a curl example of such call for a `client_credential` flow:"
msgstr "以下に、 `client_credential` フローに対するこのような呼び出しのcurlの例を示します:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:250
msgid "It should respond something like that..."
msgstr "これは以下のような応答をする筈です."

#. type: Title ===
#: upstream/_versions/2.13/guides/security-oauth2.adoc:258
msgid "Finally, make a secured request to /secured/roles-allowed"
msgstr "最後に、/secured/roles-allowed へのセキュアなリクエストを行います"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:259
msgid "Now let's use this to make a secured request to the `/secured/roles-allowed` endpoint"
msgstr "これを使って `/secured/roles-allowed` エンドポイントにセキュアなリクエストをしてみましょう"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:267
msgid "Success! We now have:"
msgstr "成功です! これで以下が得られます:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:269
msgid "a non-anonymous caller name of client_id"
msgstr "client_id の匿名でない呼出元名"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:270
msgid "an authentication scheme of OAuth2"
msgstr "OAuth2 の認証スキーム"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-oauth2.adoc:272
msgid "Roles mapping"
msgstr "ロールマッピング"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:274
msgid "Roles are mapped from one of the claims of the introspection endpoint response. By default, it's the `scope` claim. Roles are obtained by splitting the claim with a space separator. If the claim is an array, no splitting is done, the roles are obtained from the array."
msgstr "ロールは、イントロスペクションのエンドポイントレスポンスのクレームの1つからマッピングされます。デフォルトでは、 `scope` クレームです。ロールはクレームをスペース区切りで分割して取得します。クレームが配列の場合、分割は行われず、ロールは配列から取得されます。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:276
msgid "You can customize the name of the claim to use for the roles with the `quarkus.oauth2.role-claim` property."
msgstr "ロールに使用するクレームの名前は、 `quarkus.oauth2.role-claim` プロパティーでカスタマイズできます。"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-oauth2.adoc:278
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:280
msgid "As usual, the application can be packaged using:"
msgstr "いつものように、アプリケーションは以下の方法でパッケージ化できます:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:284
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`:"
msgstr "そして、 `java -jar target/quarkus-app/quarkus-run.jar` を使って実行します:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:295
msgid "You can also generate the native executable with:"
msgstr "ネイティブ実行可能ファイルを `./mvnw clean package -Pnative` で生成することもできます:"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-oauth2.adoc:324
msgid "Integration testing"
msgstr "統合テスト"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:326
msgid ""
"If you don't want to use a real OAuth2 authorization server for your integration tests, you can use the\n"
"xref:security-properties.adoc[Properties based security] extension for your test, or mock an authorization server using Wiremock."
msgstr "統合テストに本物の OAuth2 認可サーバーを使いたくない場合は、テストに xref:security-properties.adoc[プロパティベースのセキュリティ] エクステンションを使うか、Wiremock を使って認可サーバーをモックすることができます。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:329
msgid "First, Wiremock needs to be added as a test dependency. For a Maven project that would happen like so:"
msgstr "まず、Wiremockをテストの依存関係として追加する必要があります。Mavenプロジェクトの場合は以下のようになります:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:348
msgid "Use a proper Wiremock version. All available versions can be found link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[here]."
msgstr "適切なWiremockのバージョンを使用してください。利用可能なすべてのバージョンは link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[ここ] で確認できます。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:350
msgid ""
"In Quarkus tests when some service needs to be started before the Quarkus tests are ran, we utilize the `@io.quarkus.test.common.QuarkusTestResource`\n"
"annotation to specify a `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which can start the service and supply configuration\n"
"values that Quarkus will use."
msgstr "Quarkusでのテストで、テスト実行前にサービスを起動しておく必要がある場合は、  `@io.quarkus.test.common.QuarkusTestResource` を利用して、 `io.quarkus.test.common.QuarkusTestResource`  を指定します。 `io.quarkus.test.common.QuarkusTestResource`  は、サービスを開始し、Quarkusが使用する設定値を提供できます。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:356
msgid "For more details about `@QuarkusTestResource` refer to  xref:getting-started-testing.adoc#quarkus-test-resource[this part of the documentation]."
msgstr "`@QuarkusTestResource` の詳細については、 xref:getting-started-testing.adoc#quarkus-test-resource[マニュアルのこの部分] を参照してください。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:359
msgid "Let's create an implementation of `QuarkusTestResourceLifecycleManager` called `MockAuthorizationServerTestResource` like so:"
msgstr "このように `QuarkusTestResourceLifecycleManager` の実装である `MockAuthorizationServerTestResource` を作成してみましょう:"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:397
msgid "The `start` method is invoked by Quarkus before any test is run and returns a `Map` of configuration properties that apply during the test execution."
msgstr "`start` メソッドは、テストを実行する前にQuarkusによって呼び出され、テスト実行中に適用される設定プロパティーの `Map` を返します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:398
msgid "Launch Wiremock."
msgstr "Wiremockを起動します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:399
msgid "Configure Wiremock to stub the calls to `/introspect` by returning an OAuth2 introspect response. You need to customize this line to return what's needed for your application (at least the scope property as roles are derived from the scope)."
msgstr "OAuth2のイントロスペクトレスポンスを返すことで、 `/introspect` への呼び出しをスタブ化するように Wiremock を設定します。この行をカスタマイズして、アプリケーションに必要なものを返すようにする必要があります (ロールはスコープから派生しているので、少なくともスコープのプロパティーは必要です)。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:400
msgid "As the `start` method returns configuration that applies for tests, we set the `quarkus.oauth2.introspection-url` property that controls the URL of the introspect endpoint used by the OAuth2 extension."
msgstr "`start` メソッドはテストに適用される設定を返すので、OAuth2 エクステンションで使用する introspect エンドポイントの URL を制御する `quarkus.oauth2.introspection-url` プロパティーを設定します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:401
msgid "When all tests have finished, shutdown Wiremock."
msgstr "すべてのテストが終了したら、Wiremockをシャットダウンします。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:404
msgid "Your test class needs to be annotated like with `@QuarkusTestResource(MockAuthorizationServerTestResource.class)` to use this `QuarkusTestResourceLifecycleManager`."
msgstr "この `QuarkusTestResourceLifecycleManager` を使用するには、テストクラスに `@QuarkusTestResource(MockAuthorizationServerTestResource.class)` のようなアノテーションを付ける必要があります。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:406
msgid "Below is an example of a test that uses the `MockAuthorizationServerTestResource`."
msgstr "以下は、 `MockAuthorizationServerTestResource` を使用したテストの例です。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:440
msgid "Use the previously created `MockAuthorizationServerTestResource` as a Quarkus test resource."
msgstr "以前に作成した `MockAuthorizationServerTestResource` をQuarkusのテストリソースとして使用します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:441
msgid "Define whatever token you want, it will not be validated by the OAuth2 mock authorization server."
msgstr "任意のトークンを定義してください。OAuth2のモック認可サーバーでは検証されません。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:442
msgid "Use this token inside the `Authorization` header to trigger OAuth2 authentication."
msgstr "このトークンを `Authorization` ヘッダ内で使用して、OAuth2 認証を開始します。"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:447
msgid "`@QuarkusTestResource` applies to all tests, not just `TokenSecuredResourceTest`."
msgstr "`@QuarkusTestResource` は `TokenSecuredResourceTest` だけでなく、すべてのテストに適用されます。"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-oauth2.adoc:451
msgid "References"
msgstr "参照"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:453
msgid "https://tools.ietf.org/html/rfc6749[OAuth2]"
msgstr "https://tools.ietf.org/html/rfc6749[OAuth2]"

#. type: Plain Text
#: upstream/_versions/2.13/guides/security-oauth2.adoc:454
msgid "xref:security.adoc[Quarkus Security]"
msgstr "xref:security.adoc[Quarkus Security]"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-oauth2.adoc:457
msgid "Configuration Reference"
msgstr "設定リファレンス"
