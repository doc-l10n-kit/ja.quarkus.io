msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:12
msgid "Hardcoded values in your code are a _no go_ (even if we all did it at some point ;-)).  In this guide, we learn how to configure your application."
msgstr "コードの中にハードコードされた値を使うことは _できません_ (たとえ誰もがどこかの時点でそうしていたとしてもです ;-)。このガイドでは、アプリケーションを設定する方法を学びます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:13
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:16
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:19
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:20
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:21
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:22
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:26
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:28
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:30
msgid "The solution is located in the `config-quickstart` {quickstarts-tree-url}/config-quickstart[directory]."
msgstr "ソリューションは `config-quickstart` {quickstarts-tree-url}/config-quickstart[directory] にあります。"

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:31
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:34
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:43
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=config-quickstart \\\n"
"    -DclassName=\"org.acme.config.GreetingResource\" \\\n"
"    -Dpath=\"/greeting\"\n"
"cd config-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:46
msgid "It generates:"
msgstr "以下が生成されます:"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:48
msgid "the Maven structure"
msgstr "Mavenの構造"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:49
msgid "a landing page accessible on `http://localhost:8080`"
msgstr "ランディングページは次のURLでアクセス可能です: `http://localhost:8080`"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:50
msgid "example `Dockerfile` files for both `native` and `jvm` modes"
msgstr "`native`  と `jvm`  の両方のモードに対応した `Dockerfile`  ファイルの例"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:51
msgid "the application configuration file"
msgstr "アプリケーション設定ファイル"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:52
msgid "an `org.acme.config.GreetingResource` resource"
msgstr "`org.acme.config.GreetingResource` リソース"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:53
msgid "an associated test"
msgstr "関連するユニットテスト"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:63
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.message\")\n"
"String message;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:69
msgid "Edit the `org.acme.config.GreetingResource`, and introduce the following configuration properties:"
msgstr "`org.acme.config.GreetingResource` を編集し、以下の設定プロパティーを導入します:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:74
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.message\") <1>\n"
"String message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:77
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.suffix\", defaultValue=\"!\") <2>\n"
"String suffix;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:80
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.name\")\n"
"Optional<String> name; <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:82
msgid "If you do not provide a value for this property, the application startup fails with `javax.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message`."
msgstr "このプロパティーに値を指定しないと、アプリケーションの起動は `javax.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message` エラーで失敗します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:83
msgid "The default value is injected if the configuration does not provide a value for `greeting.suffix`."
msgstr "デフォルト値は、設定が `greeting.suffix` の値を提供していない場合に注入されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:84
msgid "This property is optional - an empty `Optional` is injected if the configuration does not provide a value for `greeting.name`."
msgstr "このプロパティーはオプションです - 設定が `greeting.name` の値を提供していない場合は、空の `Optional` が注入されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:86
msgid "Now, modify the `hello` method to use the injected properties:"
msgstr "ここで、 `hello` メソッドを修正して、注入されたプロパティーを使用します:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:94
#, no-wrap
msgid ""
"@GET\n"
"@Produces(MediaType.TEXT_PLAIN)\n"
"public String hello() {\n"
"    return message + \" \" + name.orElse(\"world\") + suffix;\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:97
#, no-wrap
msgid "Create the configuration"
msgstr "コンフィグレーションの作成"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:107
#, no-wrap
msgid ""
"# Your configuration properties\n"
"greeting.message = hello\n"
"greeting.name = quarkus\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:110
msgid "Once set, check the application with:"
msgstr "設定したら、アプリケーションを使って確認します:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:115
#, no-wrap
msgid ""
"$ curl http://localhost:8080/greeting\n"
"hello quarkus!\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:120
#, no-wrap
msgid "Update the test"
msgstr "テストの更新"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:124
msgid "We also need to update the functional test to reflect the changes made to the endpoint.  Edit the `src/test/java/org/acme/config/GreetingResourceTest.java` file and change the content of the `testHelloEndpoint` method to:"
msgstr "また、エンドポイントに加えられた変更を反映させるために、機能テストを更新する必要があります。 `src/test/java/org/acme/config/GreetingResourceTest.java` ファイルを編集し、 `testHelloEndpoint` メソッドの内容を変更します:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:129
#: upstream/_versions/1.7/guides/config.adoc:185
#: upstream/_versions/1.7/guides/config.adoc:237
#: upstream/_versions/1.7/guides/config.adoc:615
#: upstream/_versions/1.7/guides/config.adoc:637
#: upstream/_versions/1.7/guides/config.adoc:687
#, no-wrap
msgid "package org.acme.config;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:132
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:135
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:138
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:147
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello quarkus!\")); // Modified line\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:149
#: upstream/_versions/1.7/guides/config.adoc:309
#: upstream/_versions/1.7/guides/config.adoc:335
#: upstream/_versions/1.7/guides/config.adoc:350
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:151
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:155
msgid "Run the application with: `./mvnw compile quarkus:dev`.  Open your browser to http://localhost:8080/greeting."
msgstr "アプリケーションを実行するには、次の手順を実行します: `./mvnw compile quarkus:dev` 。ブラウザで http://localhost:8080/greeting を開きます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:158
msgid "Changing the configuration file is immediately reflected.  You can add the `greeting.suffix`, remove the other properties, change the values, etc."
msgstr "設定ファイルの変更はすぐに反映されます。 `greeting.suffix` の追加、他のプロパティーの削除、値の変更などが可能です。"

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:162
#, no-wrap
msgid "Programmatically access the configuration"
msgstr "設定にプログラムでアクセス"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:168
msgid "You can access the configuration programmatically using `org.eclipse.microprofile.config.ConfigProvider.getConfig()` such as in:"
msgstr "以下のように `org.eclipse.microprofile.config.ConfigProvider.getConfig()` を使用してプログラムで設定にアクセスすることも出来ます:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:173
#, no-wrap
msgid ""
"String databaseName = ConfigProvider.getConfig().getValue(\"database.name\", String.class);\n"
"Optional<String> maybeDatabaseName = ConfigProvider.getConfig().getOptionalValue(\"database.name\", String.class);\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:175
#, no-wrap
msgid "Using @ConfigProperties"
msgstr "@ConfigProperties の使用"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:179
msgid "As an alternative to injecting multiple related configuration values in the way that was shown in the previous example, users can also use the `@io.quarkus.arc.config.ConfigProperties` annotation to group these properties together."
msgstr "前の例で示した方法で複数の関連する設定値を注入する代わりに、`@io.quarkus.arc.config.ConfigProperties` アノテーションを使用して、これらのプロパティーをまとめてグループを作成することもできます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:181
msgid "For the greeting properties above, a `GreetingConfiguration` class could be created like so:"
msgstr "上記のグリーティングプロパティーについては、以下のように `GreetingConfiguration` クラスを作成することができます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:188
#, no-wrap
msgid ""
"import io.quarkus.arc.config.ConfigProperties;\n"
"import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:191
#, no-wrap
msgid ""
"@ConfigProperties(prefix = \"greeting\") <1>\n"
"public class GreetingConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:195
#, no-wrap
msgid ""
"    private String message;\n"
"    private String suffix = \"!\"; <2>\n"
"    private Optional<String> name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:199
#, no-wrap
msgid ""
"    public String getMessage() {\n"
"        return message;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:203
#, no-wrap
msgid ""
"    public void setMessage(String message) {\n"
"        this.message = message;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:207
#, no-wrap
msgid ""
"    public String getSuffix() {\n"
"        return suffix;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:211
#, no-wrap
msgid ""
"    public void setSuffix(String suffix) {\n"
"        this.suffix = suffix;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:215
#, no-wrap
msgid ""
"    public Optional<String> getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:220
#, no-wrap
msgid ""
"    public void setName(Optional<String> name) {\n"
"        this.name = name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:222
msgid "`prefix` is optional. If not set then the prefix to be used will be determined by the class name. In this case it would still be `greeting` (since the `Configuration` suffix is removed). If the class were named `GreetingExtraConfiguration` then the resulting default prefix would be `greeting-extra`."
msgstr "`prefix` は任意です。設定していない場合は、使用される接頭辞はクラス名によって決まります。この場合も (`Configuration` の接尾辞は削除されているため) `greeting` となります。クラス名が `GreetingExtraConfiguration` の場合は、デフォルトの接頭辞が `greeting-extra` となります。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:225
msgid "This class could then be injected into the `GreetingResource` using the familiar CDI `@Inject` annotation like so:"
msgstr "このクラスは、おなじみの CDI `@Inject` アノテーションを使用して `GreetingResource` に注入することができます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:230
#, no-wrap
msgid ""
"@Inject\n"
"GreetingConfiguration greetingConfiguration;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:233
msgid "Another alternative style provided by Quarkus is to create `GreetingConfiguration` as an interface like so:"
msgstr "Quarkus が提供する別のスタイルは、`GreetingConfiguration` を以下のようなインターフェースとして作成することです。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:241
#, no-wrap
msgid ""
"import io.quarkus.arc.config.ConfigProperties;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
"import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:244
#, no-wrap
msgid ""
"@ConfigProperties(prefix = \"greeting\")\n"
"public interface GreetingConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:247
#, no-wrap
msgid ""
"    @ConfigProperty(name = \"message\") <1>\n"
"    String message();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:250
#, no-wrap
msgid ""
"    @ConfigProperty(defaultValue = \"!\")\n"
"    String getSuffix(); <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:253
#, no-wrap
msgid ""
"    Optional<String> getName(); <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:256
msgid "In this case since `name` was not set, the corresponding property will be `greeting.suffix`."
msgstr "この場合、`name` が設定されていないため、対応するプロパティーは `greeting.suffix` です。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:257
msgid "It is unnecessary to specify the `@ConfigProperty` annotation because the method name follows the getter method naming conventions (`greeting.name` being the corresponding property) and no default value is needed."
msgstr "メソッド名は getter メソッドの命名規則 (`greeting.name` が対応するプロパティー) に従っており、デフォルト値は不要なため、`@ConfigProperty` アノテーションを指定する必要はありません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:260
msgid "When using `@ConfigProperties` on a class or an interface, if the value of one of its fields is not provided, the application startup will fail and a `javax.enterprise.inject.spi.DeploymentException` indicating the missing value information will be thrown.  This does not apply to `Optional` fields and fields with a default value."
msgstr "クラスまたはインターフェイスで `@ConfigProperties` を使用する場合は、そのフィールドの 1 つの値が提供されていないと、アプリケーションの起動に失敗し、値情報の欠落を示す `javax.enterprise.inject.spi.DeploymentException` が発生します。これは `Optional` フィールドとデフォルト値を持つフィールドには適用されません。"

#. type: Title ===
#: upstream/_versions/1.7/guides/config.adoc:261
#, no-wrap
msgid "Additional notes on @ConfigProperties"
msgstr "@ConfigProperties に関する追加の注意事項"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:265
msgid "When using a regular class annotated with `@ConfigProperties` the class doesn't necessarily have to declare getters and setters.  Having simple public non-final fields is valid as well."
msgstr "`@ConfigProperties` でアノテーションされた通常のクラスを使用する場合、クラスは必ずしも getter および setter を宣言する必要はありません。単純でパブリックな確定的でないフィールドを持つことも有効です。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:273
#: upstream/_versions/1.7/guides/config.adoc:303
#: upstream/_versions/1.7/guides/config.adoc:329
#, no-wrap
msgid ""
"@ConfigProperties(prefix = \"greeting\")\n"
"public class GreetingConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:278
#, no-wrap
msgid ""
"    public String message;\n"
"    public String suffix = \"!\";\n"
"    public Optional<String> name;\n"
"    public HiddenConfig hidden; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:284
#, no-wrap
msgid ""
"    public static class HiddenConfig {\n"
"        public Integer prizeAmount;\n"
"        public List<String> recipients;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:286
msgid "The name of the field (not the class name) will determine the name of the properties that are bound to the object."
msgstr "フィールドの名前 (クラス名ではありません) は、オブジェクトにバインドされるプロパティーの名前を決定します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:288
msgid "Setting the properties would occur in the normal manner, for example in `application.properties` one could have:"
msgstr "プロパティーの設定は通常の方法で行われ、例えば `application.properties` の場合は次のようになります。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:295
#, no-wrap
msgid ""
"greeting.message = hello\n"
"greeting.name = quarkus\n"
"greeting.hidden.prize-amount=10\n"
"greeting.hidden.recipients=Jane,John\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:298
msgid "Furthermore, classes annotated with `@ConfigProperties` can be annotated with Bean Validation annotations similar to the following example:"
msgstr "さらに、`@ConfigProperties` でアノテーションされたクラスは、以下の例に似た Bean Validation アノテーションでアノテートできます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:307
#: upstream/_versions/1.7/guides/config.adoc:333
#, no-wrap
msgid ""
"    @Size(min = 20)\n"
"    public String message;\n"
"    public String suffix = \"!\";\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:312
msgid "For validation to work, the `quarkus-hibernate-validator` extension needs to be present."
msgstr "検証が機能するようにするには、`quarkus-hibernate-validator` エクステンションが存在する必要があります。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:314
msgid "If the validation fails with the given configuration, the application will fail to start and indicate the corresponding validation errors in the log."
msgstr "指定された設定で検証に失敗した場合、アプリケーションは起動に失敗し、対応する検証エラーをログに表示します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:317
msgid "In the case of an interface being annotated with `@ConfigProperties`, the interface is allowed to extend other interfaces and methods from the entire interface hierarchy are used to bind properties."
msgstr "`@ConfigProperties` でアノテートされたインターフェースの場合、インターフェースは他のインターフェースを拡張することができ、インターフェース階層全体のメソッドがプロパティーをバインドするために使用されます。"

#. type: Title ===
#: upstream/_versions/1.7/guides/config.adoc:318
#, no-wrap
msgid "Using same ConfigProperties with different prefixes"
msgstr "同じ ConfigProperties で異なる接頭辞を使用"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:323
msgid "Quarkus also supports the use of the same `@ConfigProperties` object with different prefixes for each injection point using the `io.quarkus.arc.config.@ConfigPrefix` annotation.  Say for example that `GreetingConfiguration` from above needs to be used for both the `greeting` prefix and the `other` prefix.  In that case the code would look like so:"
msgstr "Quarkus は、`io.quarkus.arc.config.@ConfigPrefix` アノテーションを使用して、注入ポイントごとに異なる接頭辞を持つ同じ `@ConfigProperties` オブジェクトの使用もサポートしています。たとえば、上の `GreetingConfiguration` を、`greeting` の接頭辞と `other` の接頭辞の両方に使用する必要があるとします。その場合のコードは以下のようになります。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:325
msgid "`GreetingConfiguration.java`"
msgstr "`GreetingConfiguration.java`"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:338
msgid "`SomeBean.java`"
msgstr "`SomeBean.java`"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:342
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class SomeBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:345
#, no-wrap
msgid ""
"    @Inject <1>\n"
"    GreetingConfiguration greetingConfiguration;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:348
#, no-wrap
msgid ""
"    @ConfigPrefix(\"other\") <2>\n"
"    GreetingConfiguration otherConfiguration;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:352
msgid "At this injection point `greetingConfiguration` will use the `greeting` prefix since that is what has been defined on `@ConfigProperties`."
msgstr "この注入ポイントでは、`greetingConfiguration` は `@ConfigProperties` で定義されている `greeting` の接頭辞を使用します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:353
msgid "At this injection point `otherConfiguration` will use the `other` prefix from `@ConfigPrefix` instead of the `greeting` prefix. Notice that in this case `@Inject` is not required."
msgstr "この注入ポイントでは、`otherConfiguration` は、`greeting` の接頭辞の代わりに `@ConfigPrefix` から `other` の接頭辞を使用します。この場合、`@Inject` は必須ではないことに注意してください。"

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:354
#, no-wrap
msgid "Configuring Quarkus"
msgstr "Quarkus の設定"

#. type: delimited block =
#: upstream/_versions/1.7/guides/config.adoc:364
msgid "As mentioned above, properties prefixed with `quarkus.` are effectively reserved for configuring Quarkus itself and therefore `quarkus.` should **never** be used as prefix for application specific properties."
msgstr "上述したように、 `quarkus.` で始まるプロパティーは、Quarkus 自体を設定するために実質的に予約されているため、アプリケーション固有のプロパティーのプレフィックスとして `quarkus.` を使用してはいけ *ません* 。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/config.adoc:366
msgid "In the previous examples using `quarkus.message` instead of `greeting.message` would result in unexpected behavior."
msgstr "前の例では、 `greeting.message` の代わりに `quarkus.message` を使用すると、予期せぬ動作をすることになります。"

#. type: Title ===
#: upstream/_versions/1.7/guides/config.adoc:372
#, no-wrap
msgid "Generating configuration for your application"
msgstr "アプリケーション設定の生成"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:376
msgid "It is also possible to generate an example `application.properties` with all known configuration properties, to make it easy to see what Quarkus configuration options are available. To do this, run:"
msgstr "また、Quarkus 設定オプションがどのようなものかを簡単に確認できるように、すべての既知の設定プロパティーを含むサンプル (`application.properties`) を生成することもできます。これを行うには、以下のコマンドを実行します。"

#. type: Block title
#: upstream/_versions/1.7/guides/config.adoc:379
#, no-wrap
msgid "/mvnw quarkus:generate-config"
msgstr "/mvnw quarkus:generate-config"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:385
msgid "This will create a `src/main/resources/application.properties.example` file that contains all the config options exposed via the extensions you currently have installed. These options are commented out, and have their default value when applicable. For example this HTTP port config entry will appear as:"
msgstr "これにより、現在インストールされているエクステンションを介して公開されているすべての設定オプションを含む `src/main/resources/application.properties.example` ファイルが作成されます。これらのオプションはコメントアウトされ、該当する場合はデフォルト値となります。たとえば、この HTTP ポート設定エントリーは次のように表示されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:393
msgid "# # The HTTP port # #quarkus.http.port=8080"
msgstr "# # The HTTP port # #quarkus.http.port=8080"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:397
msgid "Rather than generating an example config file, you can also add these to you actual config file by setting the `-Dfile` parameter:"
msgstr "サンプルの設定ファイルを生成するのではなく、`-Dfile` パラメーターを設定して実際の設定ファイルに追加することもできます。"

#. type: Block title
#: upstream/_versions/1.7/guides/config.adoc:400
#, no-wrap
msgid "/mvnw quarkus:generate-config -Dfile=application.properties"
msgstr "/mvnw quarkus:generate-config -Dfile=application.properties"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:405
msgid "If a config option is already present (commented or not) it will not be added, so it is safe to run this after adding an additional extension to see what additional options have been added."
msgstr "設定オプションが既に存在する場合 (コメントされていてもいなくても) は追加されないため、エクステンションを追加した後にこれを実行して、どのような追加オプションが追加されたかを確認するのが安全です。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:439
msgid "Environment variables without a configuration profile defined in `.env` file will overwrite all its related profiles in `application.properties`, e.g. `%test.application.value` is overwritten by `APPLICATION_VALUE` in `.env` file."
msgstr "`.env` ファイルに設定プロファイルが定義されていない環境変数は、`application.properties` 内のすべての関連プロファイルを上書きします。たとえば、`%test.application.value` は `.env` ファイルの `APPLICATION_VALUE` により上書きされます。"

#. type: Title ===
#: upstream/_versions/1.7/guides/config.adoc:443
#, no-wrap
msgid "Configuration Profiles"
msgstr "設定プロファイル"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:449
msgid "The syntax for this is `%{profile}.config.key=value`. For example if I have the following:"
msgstr "このための構文は `%{profile}.config.key=value` です。例えば、以下のような場合:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:454
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%dev.quarkus.http.port=8181\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:457
msgid "The Quarkus HTTP port will be 9090, unless the `dev` profile is active, in which case it will be 8181."
msgstr "Quarkus の HTTP ポートは 9090 になります。この場合は、`dev` プロファイルがアクティブでない限り、8181 になります。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:459
msgid "To use profiles in the `.env` file, you can follow a `_{PROFILE}_CONFIG_KEY=value` pattern. An equivalent of the above example in an `.env` file would be:"
msgstr "`.env` ファイルでプロファイルを使用するには、`_{PROFILE}_CONFIG_KEY=value` のパターンに従います。`.env` ファイル内の上記の例と同等のものは、次のようになります。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:464
#, no-wrap
msgid ""
"QUARKUS_HTTP_PORT=9090\n"
"_DEV_QUARKUS_HTTP_PORT=8181\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:469
#, no-wrap
msgid "*dev* - Activated when in development mode (i.e. `quarkus:dev`)\n"
msgstr "*dev* - 開発モードのときに有効になる (つまり `quarkus:dev`)\n"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:470
#, no-wrap
msgid "*test* - Activated when running tests\n"
msgstr "*test* - テストを実行しているときに有効になる\n"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:471
#, no-wrap
msgid "*prod* - The default profile when not running in development or test mode\n"
msgstr "*prod* - 開発モードまたはテストモード以外で使用されるデフォルトプロファイル\n"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:477
msgid "There are two ways to set a custom profile, either via the `quarkus.profile` system property or the `QUARKUS_PROFILE` environment variable. If both are set the system property takes precedence. Note that it is not necessary to define the names of these profiles anywhere, all that is necessary is to create a config property with the profile name, and then set the current profile to that name. For example if I want a `staging` profile with a different HTTP port I can add the following to `application.properties`:"
msgstr "カスタムプロファイルを設定するには、`quarkus.profile` システムプロパティーまたは `QUARKUS_PROFILE` 環境変数を介して設定する方法があります。両方が設定されている場合は、システムプロパティーが優先されます。これらのプロファイルの名前をどこかで定義する必要はないことに注意してください。必要なのは、プロファイル名を含む設定プロパティーを作成し、現在のプロファイルをその名前に設定することだけです。たとえば、`staging` プロファイルに異なる HTTP ポートを設定する場合は、`application.properties` に以下を追加できます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:482
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%staging.quarkus.http.port=9999\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:485
msgid "And then set the `QUARKUS_PROFILE` environment variable to `staging` to activate my profile."
msgstr "そして、`QUARKUS_PROFILE` 環境変数を `staging` に設定して、プロフィールを有効化します。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/config.adoc:489
msgid "The proper way to check the active profile programmatically is to use the `getActiveProfile` method of `io.quarkus.runtime.configuration.ProfileManager`."
msgstr "アクティブなプロファイルをプログラムで確認する適切な方法は、`io.quarkus.runtime.configuration.ProfileManager` の `getActiveProfile` メソッドを使用します。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/config.adoc:491
msgid "Using `@ConfigProperty(\"quarkus.profile\")` will *not* work properly."
msgstr "`@ConfigProperty(\"quarkus.profile\")` を使用すると正常に**動作しません**。"

#. type: Title ===
#: upstream/_versions/1.7/guides/config.adoc:493
#, no-wrap
msgid "Using Property Expressions"
msgstr "プロパティー式の使用"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:496
msgid "Quarkus supports the use of property expressions in the `application.properties` file."
msgstr "Quarkus は、`application.properties` ファイルのプロパティー式の使用をサポートしています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:500
msgid "These expressions are resolved when the property is read.  So if your configuration property is a build time configuration property, the property expression will be resolved at build time.  If your configuration property is overridable at runtime, the property expression will be resolved at runtime."
msgstr "これらの式は、プロパティーの読み込み時に解決されます。したがって、設定プロパティーがビルド時の設定プロパティーである場合、プロパティー式はビルド時に解決されます。設定プロパティーが実行時にオーバーライド可能になると、プロパティー式は実行時に解決されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:502
msgid "You can use property expressions both for the Quarkus configuration or for your own configuration properties."
msgstr "プロパティー式は、Quarkus の設定にも、独自の設定プロパティーにも使用できます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:504
msgid "Property expressions are defined this way: `${my-property-expression}`."
msgstr "プロパティー式は、`${my-property-expression}` と定義されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:506
msgid "For example, having the following property:"
msgstr "たとえば、以下のようなプロパティーがあるとします。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:510
#: upstream/_versions/1.7/guides/config.adoc:555
#, no-wrap
msgid "remote.host=quarkus.io\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:512
msgid "and another property defined as:"
msgstr "そして、以下のように定義された別のプロパティーがあるとします。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:516
#, no-wrap
msgid "callable.url=https://${remote.host}/\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:519
msgid "will result in the value of the `callable.url` property being set to:"
msgstr "これにより、`callable.url` プロパティーの値が設定されます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:523
#, no-wrap
msgid "callable.url=https://quarkus.io/\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:526
msgid "Another example would be defining different database servers depending on the profile used:"
msgstr "別の例としては、使用するプロファイルに応じて異なるデータベースサーバーを定義できます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:531
#, no-wrap
msgid ""
"%dev.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/mydatabase?useSSL=false\n"
"quarkus.datasource.jdbc.url=jdbc:mysql://remotehost:3306/mydatabase?useSSL=false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:534
msgid "can be simplified by having:"
msgstr "これは、以下を指定することで簡略化できます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:539
#, no-wrap
msgid ""
"%dev.application.server=localhost\n"
"application.server=remotehost\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:541
#, no-wrap
msgid "quarkus.datasource.jdbc.url=jdbc:mysql://${application.server}:3306/mydatabase?useSSL=false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:545
msgid "It does result in one more line in this example but the value of `application.server` can be reused in other properties, diminishing the possibility of typos and providing more flexibility in property definitions."
msgstr "この例ではさらに 1 行増えることになりますが、`application.server` の値は他のプロパティーで再利用でき、タイポの可能性を減らし、プロパティー定義の柔軟性を高めることができます。"

#. type: Title ===
#: upstream/_versions/1.7/guides/config.adoc:546
#, no-wrap
msgid "Combining Property Expressions and Environment Variables"
msgstr "プロパティー式と環境変数の組み合わせ"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:549
msgid "Quarkus also supports the combination of both property expressions and environment variables."
msgstr "また、Quarkus は、プロパティー式と環境変数の両方を組み合わせることもサポートしています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:558
msgid "You can combine environment variables and property expressions by having a property defined as follows:"
msgstr "以下のようにプロパティーを定義しておくことで、環境変数とプロパティー式を組み合わせることができます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:562
#, no-wrap
msgid "application.host=${HOST:${remote.host}}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:565
msgid "This will expand the `HOST` environment variable and use the value of the property `remote.host` as the default value if `HOST` is not set."
msgstr "これは `HOST` 環境変数を展開し、`HOST` が設定されていない場合は、プロパティー `remote.host` の値をデフォルト値として使用します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:568
msgid "For the purpose of this section we used the property `remote.host` we defined previously.  It has to be noted that the value could have been a fixed one such as in:"
msgstr "このセクションでは、先に定義したプロパティー `remote.host` を使用しています。値は、次のような固定値である可能性があることに注意する必要があります。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:572
#, no-wrap
msgid "application.host=${HOST:localhost}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:575
msgid "which will result in `localhost` as the default value if `HOST` is not set."
msgstr "`HOST` が設定されていない場合は `localhost` がデフォルト値になります。"

#. type: Title ===
#: upstream/_versions/1.7/guides/config.adoc:576
#, no-wrap
msgid "Clearing properties"
msgstr "プロパティーの削除"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:584
msgid "The property may be cleared by setting the corresponding `application.properties` property, setting the corresponding system property, or setting the corresponding environment variable."
msgstr "このプロパティーは、対応する `application.properties` プロパティーを設定したり、対応するシステムプロパティーを設定したり、対応する環境変数を設定したりすることで削除できます。"

#. type: Title ====
#: upstream/_versions/1.7/guides/config.adoc:585
#, no-wrap
msgid "Miscellaneous"
msgstr "その他"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:588
msgid "The default Quarkus application runtime profile is set to the profile used to build the application.  For example:"
msgstr "デフォルトの Quarkus アプリケーションランタイムプロファイルは、アプリケーションの構築に使用されるプロファイルに設定されています。たとえば、以下のようになります。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:592
#, no-wrap
msgid ""
"./mvnw package -Pnative -Dquarkus.profile=prod-aws\n"
"./target/my-app-1.0-runner // <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:594
msgid "The command will run with the `prod-aws` profile. This can be overridden using the `quarkus.profile` system property."
msgstr "コマンドは、`prod-aws` プロファイルで実行されます。これは `quarkus.profile` システムプロパティーを使用して上書きすることができます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:595
#, no-wrap
msgid "Custom Configuration"
msgstr "カスタム設定"

#. type: Title ===
#: upstream/_versions/1.7/guides/config.adoc:597
#, no-wrap
msgid "Custom configuration sources"
msgstr "カスタム設定ソース"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:604
msgid "You can also introduce custom configuration sources in the standard MicroProfile Config manner.  To do this, you must provide a class which implements either `org.eclipse.microprofile.config.spi.ConfigSource` or `org.eclipse.microprofile.config.spi.ConfigSourceProvider`.  Create a https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html[service file] for the class and it will be detected and installed at application startup."
msgstr "標準的な MicroProfile Config の方法でカスタム設定ソースを導入することもできます。これを行うには、`org.eclipse.microprofile.config.spi.ConfigSource` または `org.eclipse.microprofile.config.spi.ConfigSourceProvider` を実装したクラスを提供する必要があります。クラスに link:https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html[サービスファイル] を作成すると、アプリケーションの起動時に検出されてインストールされます。"

#. type: Title ===
#: upstream/_versions/1.7/guides/config.adoc:605
#, no-wrap
msgid "Custom configuration converters"
msgstr "カスタム設定コンバーター"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:611
msgid "Let us assume you have a custom type like this one:"
msgstr "このようなカスタムタイプを想定してみましょう。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:617
#, no-wrap
msgid "public class MicroProfileCustomValue {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:619
#, no-wrap
msgid "    private final int number;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:623
#, no-wrap
msgid ""
"    public MicroProfileCustomValue(int number) {\n"
"        this.number = number;\n"
"    };\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:628
#, no-wrap
msgid ""
"    public int getNumber() {\n"
"        return number;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:632
msgid "The corresponding converter will look like the one below. Please note that your custom converter class must be `public` and must have a `public` no-argument constructor. It also must not be `abstract`."
msgstr "対応するコンバータは以下のようになります。カスタムコンバータクラスは `public` で、`public` の引数がないコンストラクターを持つ必要があることに注意してください。また、`abstract` にはしないでください。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:639
#, no-wrap
msgid "import org.eclipse.microprofile.config.spi.Converter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:641
#, no-wrap
msgid "public class MicroProfileCustomValueConverter implements Converter<MicroProfileCustomValue> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:647
#, no-wrap
msgid ""
"    @Override\n"
"    public MicroProfileCustomValue convert(String value) {\n"
"        return new MicroProfileCustomValue(Integer.valueOf(value));\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:657
#, no-wrap
msgid ""
"org.acme.config.MicroProfileCustomValueConverter\n"
"org.acme.config.SomeOtherConverter\n"
"org.acme.config.YetAnotherConverter\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:668
#, no-wrap
msgid ""
"@ConfigProperty(name = \"configuration.value.name\")\n"
"MicroProfileCustomValue value;\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/config.adoc:670
#, no-wrap
msgid "Converter priority"
msgstr "コンバーターの優先順位"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:680
msgid "By default, if no `@Priority` can be found on a converter, it's registered with a priority of 100 and all Quarkus core converters are registered with a priority of 200, so depending on which converter you would like to replace, you need to set a higher value."
msgstr "デフォルトでは、コンバーターに `@Priority` が見つからない場合は優先度 100 で登録され、Quarkus のコアコンバーターはすべて優先度 200 で登録されているため、どのコンバーターを置き換えるかによっては、より高い値を設定する必要があります。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:683
msgid "To demonstrate the idea let us implement a custom converter which will take precedence over `MicroProfileCustomValueConverter` implemented in the previous example."
msgstr "このアイデアを実証するために、先ほどの例で実装した `MicroProfileCustomValueConverter` よりも優先されるカスタムコンバーターを実装してみましょう。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:690
#, no-wrap
msgid ""
"import javax.annotation.Priority;\n"
"import org.eclipse.microprofile.config.spi.Converter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:693
#, no-wrap
msgid ""
"@Priority(150)\n"
"public class MyCustomConverter implements Converter<MicroProfileCustomValue> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:696
#, no-wrap
msgid ""
"    @Override\n"
"    public MicroProfileCustomValue convert(String value) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:703
#, no-wrap
msgid ""
"        final int secretNumber;\n"
"        if (value.startsFrom(\"OBF:\")) {\n"
"            secretNumber = Integer.valueOf(SecretDecoder.decode(value));\n"
"        } else {\n"
"            secretNumber = Integer.valueOf(value);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:707
#, no-wrap
msgid ""
"        return new MicroProfileCustomValue(secretNumber);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:712
msgid "Since it converts the same value type (namely `MicroProfileCustomValue`) and has a priority of 150, it will be used instead of a `MicroProfileCustomValueConverter` which has a default priority of 100."
msgstr "これは同じ値タイプ (すなわち `MicroProfileCustomValue`) を変換し、優先度が 150 であるため、デフォルトの優先度が 100 の `MicroProfileCustomValueConverter` の代わりに使用されます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:714
msgid "This new converter also needs to be listed in a service file, i.e. `META-INF/services/org.eclipse.microprofile.config.spi.Converter`."
msgstr "この新しいコンバーターは、サービスファイル、すなわち `META-INF/services/org.eclipse.microprofile.config.spi.Converter` に記載する必要があります。"

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:716
#, no-wrap
msgid "YAML for Configuration"
msgstr "設定用 YAML"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:723
msgid "You might want to use YAML over properties for configuration.  Since link:https://github.com/smallrye/smallrye-config[SmallRye Config] brings support for YAML configuration, Quarkus supports this as well."
msgstr "設定に、プロパティーよりも YAML を使いたい場合があるかもしれません。link:https://github.com/smallrye/smallrye-config[SmallRye Config] は YAML 設定をサポートしているため、Quarkus でもこの設定がサポートされています。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:732
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-config-yaml</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:735
msgid "Or you can alternatively run this command in the directory containing your Quarkus project:"
msgstr "または、Quarkus プロジェクトが含まれるディレクトリーでこのコマンドを実行することもできます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:739
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"config-yaml\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:743
msgid "Now Quarkus can read YAML configuration files.  The config directories and priorities are the same as before."
msgstr "これで Quarkus は YAML 設定ファイルを読み込めるようになりました。設定ディレクトリーと優先順位は以前と同じです。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:747
msgid "Quarkus will choose an `application.yaml` over an `application.properties`.  YAML files are just an alternative way to configure your application.  You should decide and keep one configuration type to avoid errors."
msgstr "Quarkus では、`application.yaml` が `application.properties` よりも優先されます。YAML ファイルは、アプリケーションを設定するための代替手段にすぎません。エラーを回避するには、設定タイプを 1 つ決めて保持しておく必要があります。"

#. type: Title ====
#: upstream/_versions/1.7/guides/config.adoc:748
#, no-wrap
msgid "Configuration Examples"
msgstr "設定例"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:759
#, no-wrap
msgid ""
"# YAML supports comments\n"
"quarkus:\n"
"  datasource:\n"
"    db-kind: postgresql\n"
"    jdbc:\n"
"      url: jdbc:postgresql://localhost:5432/some-database\n"
"    username: quarkus\n"
"    password: quarkus\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:765
#, no-wrap
msgid ""
"# REST Client configuration property\n"
"org:\n"
"  acme:\n"
"    restclient:\n"
"      CountriesService/mp-rest/url: https://restcountries.eu/rest\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:772
#, no-wrap
msgid ""
"# For configuration property names that use quotes, do not split the string inside the quotes.\n"
"quarkus:\n"
"  log:\n"
"    category:\n"
"      \"io.quarkus.category\":\n"
"        level: INFO\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/config.adoc:777
msgid "Quarkus also supports using `application.yml` as the name of the YAML file. The same rules apply for this file as for `application.yaml`."
msgstr "Quarkus は YAML ファイルの名前として `application.yml` を使用することもサポートしています。このファイルには、 `application.yaml` と同じルールが適用されます。"

#. type: Title ===
#: upstream/_versions/1.7/guides/config.adoc:779
#, no-wrap
msgid "Profile dependent configuration"
msgstr "プロファイル依存の設定"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:783
msgid "Providing profile dependent configuration with YAML is done like with properties.  Just add the `%profile` wrapped in quotation marks before defining the key-value pairs:"
msgstr "プロファイル依存の設定を YAML で提供することはプロパティーと同じように行われます。キーと値のペアを定義する前に、引用符で囲んだ `%profile` を追加するだけです。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:794
#, no-wrap
msgid ""
"\"%dev\":\n"
"  quarkus:\n"
"    datasource:\n"
"      db-kind: postgresql\n"
"      jdbc:\n"
"        url: jdbc:postgresql://localhost:5432/some-database\n"
"      username: quarkus\n"
"      password: quarkus\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/config.adoc:796
#, no-wrap
msgid "Configuration key conflicts"
msgstr "設定キーの競合"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:802
msgid "The MicroProfile Configuration specification defines configuration keys as an arbitrary `.`-delimited string.  However, structured formats like YAML naively only support a subset of the possible configuration namespace.  For example, consider the two configuration properties `quarkus.http.cors` and `quarkus.http.cors.methods`.  One property is the prefix of another, so it may not be immediately evident how to specify both keys in your YAML configuration."
msgstr "MicroProfile の設定仕様は、設定キーを任意の `.` 区切り文字列として定義しています。ただし、YAML のような構造化されたフォーマットは、可能な設定名前空間のサブセットしかサポートしていません。たとえば、`quarkus.http.cors` および `quarkus.http.cors.methods` の 2 つの設定プロパティーについて考えてみましょう。あるプロパティーは別のプロパティーの接頭辞なので、YAML の設定で両方のキーをどのように指定するかはすぐにはわからないかもしれません。"

#. type: Block title
#: upstream/_versions/1.7/guides/config.adoc:805
#, no-wrap
msgid "An example YAML configuration resolving prefix-related key name conflicts"
msgstr "接頭辞関連のキー名の競合を解決する YAML 設定の例"

#. type: delimited block -
#: upstream/_versions/1.7/guides/config.adoc:813
#, no-wrap
msgid ""
"quarkus:\n"
"  http:\n"
"    cors:\n"
"      ~: true\n"
"      methods: GET,PUT,POST\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/config.adoc:818
#, no-wrap
msgid "More info on how to configure"
msgstr "設定方法の詳細"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:821
msgid "Quarkus relies on SmallRye Config and inherits its features."
msgstr "Quarkus は SmallRye Config に依存しており、その機能を継承しています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:823
msgid "SmallRye Config provides:"
msgstr "SmallRye Config は以下を提供します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:825
msgid "Additional Config Sources"
msgstr "その他の設定ソース"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:826
msgid "Additional Converters"
msgstr "追加のコンバーター"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:827
msgid "Interceptors for configuration value resolution"
msgstr "設定値解決のためのインターセプタ―"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:828
msgid "Relocate Configuration Properties"
msgstr "設定プロパティーの再配置"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:829
msgid "Fallback Configuration Properties"
msgstr "フォールバック設定プロパティー"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:830
msgid "Logging"
msgstr "ロギング"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:831
msgid "Hide Secrets"
msgstr "secret の非表示"

#. type: Plain text
#: upstream/_versions/1.7/guides/config.adoc:833
msgid "For more information, please check the link:https://smallrye.io/docs/smallrye-config/index.html[SmallRye Config documentation]."
msgstr "詳細は、link:https://smallrye.io/docs/smallrye-config/index.html[SmallRye Config のドキュメント] を参照してください。"
