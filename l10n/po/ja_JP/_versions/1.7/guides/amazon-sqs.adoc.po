msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:25
msgid "The Quarkus extension supports two programming models:"
msgstr "Quarkusエクステンションは、2つのプログラミングモデルをサポートしています:"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:27
msgid "Blocking access using URL Connection HTTP client (by default) or the Apache HTTP Client"
msgstr "URL Connection HTTP クライアント (デフォルト) または Apache HTTP クライアントを使ったブロッキングアクセス"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:28
msgid "https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/basics-async.html[Asynchronous programming] based on JDK's `CompletableFuture` objects and the Netty HTTP client."
msgstr "JDK の `CompletableFuture` オブジェクトと Netty HTTP クライアントをベースにした link:https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/basics-async.html[非同期プログラミング]"

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:31
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:34
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:36
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:37
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:38
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:48
#, no-wrap
msgid "docker run --rm --name local-sqs -p 8010:4576 -e SERVICES=sqs -e START_WEB=0 -d localstack/localstack:0.11.1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:52
msgid "Create an AWS profile for your local instance using AWS CLI:"
msgstr "AWS CLIを使ってローカルインスタンスのAWSプロファイルを作成します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:59
#, no-wrap
msgid ""
"$ aws configure --profile localstack\n"
"AWS Access Key ID [None]: test-key\n"
"AWS Secret Access Key [None]: test-secret\n"
"Default region name [None]: us-east-1\n"
"Default output format [None]:\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:68
#, no-wrap
msgid "QUEUE_URL=`aws sqs create-queue --queue-name=ColliderQueue --profile localstack --endpoint-url=http://localhost:8010`\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:74
#, no-wrap
msgid "QUEUE_URL=`aws sqs create-queue --queue-name=ColliderQueue`\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:76
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:82
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:84
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:87
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:90
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:100
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=amazon-sqs-quickstart \\\n"
"    -DclassName=\"org.acme.sqs.QuarksCannonSyncResource\" \\\n"
"    -Dpath=\"/sync-cannon\" \\\n"
"    -Dextensions=\"resteasy-jsonb,amazon-sqs,resteasy-mutiny\"\n"
"cd amazon-sqs-quickstart\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:105
#, no-wrap
msgid "Creating JSON REST service"
msgstr "JSON RESTサービスの作成"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:114
#, no-wrap
msgid "package org.acme.sqs.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:117
#, no-wrap
msgid ""
"import io.quarkus.runtime.annotations.RegisterForReflection;\n"
"import java.util.Objects;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:120
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class Quark {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:123
#, no-wrap
msgid ""
"    private String flavor;\n"
"    private String spin;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:126
#, no-wrap
msgid ""
"    public Quark() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:130
#, no-wrap
msgid ""
"    public String getFlavor() {\n"
"        return flavor;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:134
#, no-wrap
msgid ""
"    public void setFlavor(String flavor) {\n"
"        this.flavor = flavor;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:138
#, no-wrap
msgid ""
"    public String getSpin() {\n"
"        return spin;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:142
#, no-wrap
msgid ""
"    public void setSpin(String spin) {\n"
"        this.spin = spin;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:148
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean equals(Object obj) {\n"
"        if (!(obj instanceof Quark)) {\n"
"            return false;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:150
#, no-wrap
msgid "        Quark other = (Quark) obj;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:153
#, no-wrap
msgid ""
"        return Objects.equals(other.flavor, this.flavor);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:159
#, no-wrap
msgid ""
"    @Override\n"
"    public int hashCode() {\n"
"        return Objects.hash(this.flavor);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:165
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:214
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:342
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:393
#, no-wrap
msgid "package org.acme.sqs;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:180
#, no-wrap
msgid ""
"import com.fasterxml.jackson.databind.ObjectMapper;\n"
"import com.fasterxml.jackson.databind.ObjectWriter;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.Response;\n"
"import org.acme.sqs.model.Quark;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
"import org.jboss.logging.Logger;\n"
"import software.amazon.awssdk.services.sqs.SqsClient;\n"
"import software.amazon.awssdk.services.sqs.model.SendMessageResponse;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:184
#, no-wrap
msgid ""
"@Path(\"/sync/cannon\")\n"
"@Produces(MediaType.TEXT_PLAIN)\n"
"public class QuarksCannonSyncResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:186
#, no-wrap
msgid "    private static final Logger LOGGER = Logger.getLogger(QuarksCannonSyncResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:189
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:238
#, no-wrap
msgid ""
"    @Inject\n"
"    SqsClient sqs;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:192
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:241
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:371
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:422
#, no-wrap
msgid ""
"    @ConfigProperty(name = \"queue.url\")\n"
"    String queueUrl;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:194
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:373
#, no-wrap
msgid "    static ObjectWriter QUARK_WRITER = new ObjectMapper().writerFor(Quark.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:205
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/shoot\")\n"
"    @Consumes(MediaType.APPLICATION_JSON)\n"
"    public Response sendMessage(Quark quark) throws Exception {\n"
"        String message = QUARK_WRITER.writeValueAsString(quark);\n"
"        SendMessageResponse response = sqs.sendMessage(m -> m.queueUrl(queueUrl).messageBody(message));\n"
"        LOGGER.infov(\"Fired Quark[{0}, {1}}]\", quark.getFlavor(), quark.getSpin());\n"
"        return Response.ok().entity(response.messageId()).build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:230
#, no-wrap
msgid ""
"import com.fasterxml.jackson.databind.ObjectMapper;\n"
"import com.fasterxml.jackson.databind.ObjectReader;\n"
"import java.util.List;\n"
"import java.util.stream.Collectors;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import org.acme.sqs.model.Quark;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
"import org.jboss.logging.Logger;\n"
"import software.amazon.awssdk.services.sqs.SqsClient;\n"
"import software.amazon.awssdk.services.sqs.model.Message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:233
#, no-wrap
msgid ""
"@Path(\"/sync/shield\")\n"
"public class QuarksShieldSyncResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:235
#, no-wrap
msgid "    private static final Logger LOGGER = Logger.getLogger(QuarksShieldSyncResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:243
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:424
#, no-wrap
msgid "    static ObjectReader QUARK_READER = new ObjectMapper().readerFor(Quark.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:249
#, no-wrap
msgid ""
"    @GET\n"
"    @Consumes(MediaType.APPLICATION_JSON)\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public List<Quark> receive() {\n"
"        List<Message> messages = sqs.receiveMessage(m -> m.maxNumberOfMessages(10).queueUrl(queueUrl)).messages();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:255
#, no-wrap
msgid ""
"        return messages.stream()\n"
"            .map(Message::body)\n"
"            .map(this::toQuark)\n"
"            .collect(Collectors.toList());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:267
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:446
#, no-wrap
msgid ""
"    private Quark toQuark(String message) {\n"
"        Quark quark = null;\n"
"        try {\n"
"            quark = QUARK_READER.readValue(message);\n"
"        } catch (Exception e) {\n"
"            LOGGER.error(\"Error decoding message\", e);\n"
"            throw new RuntimeException(e);\n"
"        }\n"
"        return quark;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:283
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>software.amazon.awssdk</groupId>\n"
"    <artifactId>url-connection-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:286
msgid "If you want to use Apache HTTP client instead, configure it as follows:"
msgstr "代わりにApache HTTPクライアントを使用したい場合は、以下のように設定します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:289
#, no-wrap
msgid "quarkus.sqs.sync-client.type=apache\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:292
msgid "And add the following dependency to the application `pom.xml`:"
msgstr "そして、以下の依存関係をアプリケーションの `pom.xml` に追加します"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:298
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>software.amazon.awssdk</groupId>\n"
"    <artifactId>apache-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:305
#, no-wrap
msgid "quarkus.sqs.endpoint-override=http://localhost:8010\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:310
#, no-wrap
msgid ""
"quarkus.sqs.aws.region=us-east-1\n"
"quarkus.sqs.aws.credentials.type=static\n"
"quarkus.sqs.aws.credentials.static-provider.access-key-id=test-key\n"
"quarkus.sqs.aws.credentials.static-provider.secret-access-key=test-secret\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:322
msgid "And the region from your AWS CLI profile will be used."
msgstr "そして、AWS CLIプロファイルからのリージョンが使用されます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:323
#, no-wrap
msgid "Next steps"
msgstr "次のステップ"

#. type: Title ===
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:325
#, no-wrap
msgid "Packaging"
msgstr "パッケージング"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:332
msgid "With GraalVM installed, you can also create a native executable binary: `./mvnw clean package -Dnative`.  Depending on your system, that will take some time."
msgstr "GraalVMをインストールした状態で、ネイティブの実行バイナリーを作成することもできます: `./mvnw clean package -Dnative` お使いのシステムにもよりますが、時間がかかります。"

#. type: Title ===
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:333
#, no-wrap
msgid "Going asynchronous"
msgstr "非同期にする"

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:336
msgid "Thanks to the AWS SDK v2.x used by the Quarkus extension, you can use the asynchronous programming model out of the box."
msgstr "Quarkusのエクステンションで使われているAWS SDK v2.xのおかげで、非同期プログラミングモデルをすぐに使えるようになりました。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:358
#, no-wrap
msgid ""
"import com.fasterxml.jackson.databind.ObjectMapper;\n"
"import com.fasterxml.jackson.databind.ObjectWriter;\n"
"import io.smallrye.mutiny.Uni;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.Response;\n"
"import org.acme.sqs.model.Quark;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
"import org.jboss.logging.Logger;\n"
"import software.amazon.awssdk.services.sqs.SqsAsyncClient;\n"
"import software.amazon.awssdk.services.sqs.model.SendMessageResponse;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:363
#, no-wrap
msgid ""
"@Path(\"/async/cannon\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"public class QuarksCannonAsyncResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:365
#, no-wrap
msgid "    private static final Logger LOGGER = Logger.getLogger(QuarksCannonAsyncResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:368
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:419
#, no-wrap
msgid ""
"    @Inject\n"
"    SqsAsyncClient sqs;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:386
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/shoot\")\n"
"    @Consumes(MediaType.APPLICATION_JSON)\n"
"    public Uni<Response> sendMessage(Quark quark) throws Exception {\n"
"        String message = QUARK_WRITER.writeValueAsString(quark);\n"
"        return Uni.createFrom()\n"
"            .completionStage(sqs.sendMessage(m -> m.queueUrl(queueUrl).messageBody(message)))\n"
"            .onItem().invoke(item -> LOGGER.infov(\"Fired Quark[{0}, {1}}]\", quark.getFlavor(), quark.getSpin()))\n"
"            .onItem().transform(SendMessageResponse::messageId)\n"
"            .onItem().transform(id -> Response.ok().entity(id).build());\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:411
#, no-wrap
msgid ""
"import com.fasterxml.jackson.databind.ObjectMapper;\n"
"import com.fasterxml.jackson.databind.ObjectReader;\n"
"import io.smallrye.mutiny.Uni;\n"
"import java.util.List;\n"
"import java.util.stream.Collectors;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import org.acme.sqs.model.Quark;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
"import org.jboss.logging.Logger;\n"
"import software.amazon.awssdk.services.sqs.SqsAsyncClient;\n"
"import software.amazon.awssdk.services.sqs.model.Message;\n"
"import software.amazon.awssdk.services.sqs.model.ReceiveMessageResponse;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:414
#, no-wrap
msgid ""
"@Path(\"/async/shield\")\n"
"public class QuarksShieldAsyncResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:416
#, no-wrap
msgid "    private static final Logger LOGGER = Logger.getLogger(QuarksShieldAsyncResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:434
#, no-wrap
msgid ""
"    @GET\n"
"    @Consumes(MediaType.APPLICATION_JSON)\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public Uni<List<Quark>> receive() {\n"
"        return Uni.createFrom()\n"
"            .completionStage(sqs.receiveMessage(m -> m.maxNumberOfMessages(10).queueUrl(queueUrl)))\n"
"            .onItem().transform(ReceiveMessageResponse::messages)\n"
"            .onItem().transform(m -> m.stream().map(Message::body).map(this::toQuark).collect(Collectors.toList()));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:449
msgid "And we need to add the Netty HTTP client dependency to the `pom.xml`:"
msgstr "そして、Netty HTTPクライアント依存関係を `pom.xml` に追加する必要があります。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:456
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>software.amazon.awssdk</groupId>\n"
"    <artifactId>netty-nio-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/amazon-sqs.adoc:458
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"
