msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:11
msgid "You have a Hibernate ORM-based application? You want to provide a full-featured full-text search to your users? You're at the right place."
msgstr "Hibernate ORMベースのアプリケーションをお持ちですか?フル機能のフルテキスト検索をユーザーに提供したいですか?あなたは正しい場所にいます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:23
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:26
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:28
msgid "less than 20 minutes"
msgstr "20 分弱"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:29
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:30
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:31
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:32
msgid "Docker"
msgstr "Docker"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:33
msgid "link:building-native-image[GraalVM installed if you want to run in native mode]"
msgstr "link:building-native-image[ネイティブモードで動作させたい場合は、GraalVM がインストールされていること]"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:34
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:37
msgid "The application described in this guide allows to manage a (simple) library: you manage authors and their books."
msgstr "このガイドに記載されているアプリケーションは、(シンプルな) 図書館を管理することができます:あなたは、著者とその本を管理します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:39
msgid "The entities are stored in a PostgreSQL database and indexed in an Elasticsearch cluster."
msgstr "エンティティはPostgreSQLデータベースに格納され、Elasticsearchクラスターにインデックスされます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:40
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:44
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:46
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:52
msgid "The provided solution contains a few additional elements such as tests and testing infrastructure."
msgstr "提供されるソリューションには、テストやテストのインフラストラクチャなど、いくつかの追加要素が含まれています。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:54
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:57
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:67
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=hibernate-search-elasticsearch-quickstart \\\n"
"    -DclassName=\"org.acme.hibernate.search.elasticsearch.LibraryResource\" \\\n"
"    -Dpath=\"/library\" \\\n"
"    -Dextensions=\"hibernate-orm-panache, hibernate-search-elasticsearch, resteasy-jsonb, jdbc-postgresql\"\n"
"cd hibernate-search-elasticsearch-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:70
msgid "This command generates a Maven structure importing the following extensions:"
msgstr "このコマンドは、以下のエクステンションをインポートするMaven構造体を生成します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:72
msgid "Hibernate ORM with Panache,"
msgstr "Hibernate ORM with Panache,"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:73
msgid "the PostgreSQL JDBC driver,"
msgstr "PostgreSQL JDBCドライバー"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:74
msgid "Hibernate Search + Elasticsearch,"
msgstr "Hibernate Search + Elasticsearch,"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:82
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"hibernate-search-elasticsearch\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:85
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:92
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-hibernate-search-elasticsearch</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:99
msgid "For now, let's delete the two generated tests `LibraryResourceTest` and `NativeLibraryResourceIT` present in `src/test/java`.  If you are interested in how you can test this application, just refer to the solution in the quickstarts Git repository: it contains a lot of tests and the required testing infrastructure."
msgstr "まずは、 `src/test/java` にある `LibraryResourceTest` と `NativeLibraryResourceIT` の 2 つの生成されたテストを削除してみましょう。このアプリケーションのテスト方法に興味があれば、 quickstarts の Git リポジトリにあるソリューションを参照してください。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:101
#, no-wrap
msgid "Creating the bare entities"
msgstr "ベアエンティティーの作成"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:104
msgid "First, let's create our Hibernate ORM entities `Book` and `Author` in the `model` subpackage."
msgstr "まず、 `model` サブパッケージに Hibernate ORM エンティティー `Book` と `Author` を作成しましょう。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:108
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:156
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:312
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:353
#, no-wrap
msgid "package org.acme.hibernate.search.elasticsearch.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:111
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:356
#, no-wrap
msgid ""
"import java.util.List;\n"
"import java.util.Objects;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:116
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:361
#, no-wrap
msgid ""
"import javax.persistence.CascadeType;\n"
"import javax.persistence.Entity;\n"
"import javax.persistence.FetchType;\n"
"import javax.persistence.OneToMany;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:118
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:164
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:323
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:369
#, no-wrap
msgid "import io.quarkus.hibernate.orm.panache.PanacheEntity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:121
#, no-wrap
msgid ""
"@Entity\n"
"public class Author extends PanacheEntity { // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:123
#, no-wrap
msgid "    public String firstName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:125
#, no-wrap
msgid "    public String lastName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:128
#, no-wrap
msgid ""
"    @OneToMany(mappedBy = \"author\", cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER) // <2>\n"
"    public List<Book> books;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:137
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean equals(Object o) {\n"
"        if (this == o) {\n"
"            return true;\n"
"        }\n"
"        if (!(o instanceof Author)) {\n"
"            return false;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:139
#, no-wrap
msgid "        Author other = (Author) o;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:142
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:187
#, no-wrap
msgid ""
"        return Objects.equals(id, other.id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:148
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:193
#, no-wrap
msgid ""
"    @Override\n"
"    public int hashCode() {\n"
"        return 31;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:150
msgid "We are using Hibernate ORM with Panache, it is not mandatory."
msgstr "PanacheでHibernate ORMを使用していますが、必須ではありません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:152
msgid "We are loading these elements eagerly so that they are present in the JSON output.  In a real world application, you should probably use a DTO approach."
msgstr "私たちは、これらの要素がJSON出力に存在するように前もってロードしています。実際のアプリケーションでは、おそらくDTOアプローチを使うべきでしょう。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:158
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:314
#, no-wrap
msgid "import java.util.Objects;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:162
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:318
#, no-wrap
msgid ""
"import javax.json.bind.annotation.JsonbTransient;\n"
"import javax.persistence.Entity;\n"
"import javax.persistence.ManyToOne;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:167
#, no-wrap
msgid ""
"@Entity\n"
"public class Book extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:169
#, no-wrap
msgid "    public String title;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:173
#, no-wrap
msgid ""
"    @ManyToOne\n"
"    @JsonbTransient // <1>\n"
"    public Author author;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:182
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean equals(Object o) {\n"
"        if (this == o) {\n"
"            return true;\n"
"        }\n"
"        if (!(o instanceof Book)) {\n"
"            return false;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:184
#, no-wrap
msgid "        Book other = (Book) o;\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:196
#, no-wrap
msgid "Initializing the REST service"
msgstr "RESTサービスの初期化"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:199
msgid "While everything is not yet set up for our REST service, we can initialize it with the standard CRUD operations we will need."
msgstr "まだRESTサービスの設定はすべて終わっていませんが、必要となる標準的なCRUD操作で初期化することができます。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:205
#, no-wrap
msgid "package org.acme.hibernate.search.elasticsearch;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:216
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.persistence.EntityManager;\n"
"import javax.transaction.Transactional;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.DELETE;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:221
#, no-wrap
msgid ""
"import org.acme.hibernate.search.elasticsearch.model.Author;\n"
"import org.acme.hibernate.search.elasticsearch.model.Book;\n"
"import org.jboss.resteasy.annotations.jaxrs.FormParam;\n"
"import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:226
#, no-wrap
msgid ""
"@Path(\"/library\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"public class LibraryResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:229
#, no-wrap
msgid ""
"    @Inject\n"
"    EntityManager em;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:239
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"book\")\n"
"    @Transactional\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    public void addBook(@FormParam String title, @FormParam Long authorId) {\n"
"        Author author = Author.findById(authorId);\n"
"        if (author == null) {\n"
"            return;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:244
#, no-wrap
msgid ""
"        Book book = new Book();\n"
"        book.title = title;\n"
"        book.author = author;\n"
"        book.persist();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:248
#, no-wrap
msgid ""
"        author.books.add(book);\n"
"        author.persist();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:259
#, no-wrap
msgid ""
"    @DELETE\n"
"    @Path(\"book/{id}\")\n"
"    @Transactional\n"
"    public void deleteBook(@PathParam Long id) {\n"
"        Book book = Book.findById(id);\n"
"        if (book != null) {\n"
"            book.author.books.remove(book);\n"
"            book.delete();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:270
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"author\")\n"
"    @Transactional\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    public void addAuthor(@FormParam String firstName, @FormParam String lastName) {\n"
"        Author author = new Author();\n"
"        author.firstName = firstName;\n"
"        author.lastName = lastName;\n"
"        author.persist();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:284
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"author/{id}\")\n"
"    @Transactional\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    public void updateAuthor(@PathParam Long id, @FormParam String firstName, @FormParam String lastName) {\n"
"        Author author = Author.findById(id);\n"
"        if (author == null) {\n"
"            return;\n"
"        }\n"
"        author.firstName = firstName;\n"
"        author.lastName = lastName;\n"
"        author.persist();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:295
#, no-wrap
msgid ""
"    @DELETE\n"
"    @Path(\"author/{id}\")\n"
"    @Transactional\n"
"    public void deleteAuthor(@PathParam Long id) {\n"
"        Author author = Author.findById(id);\n"
"        if (author != null) {\n"
"            author.delete();\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:298
msgid "Nothing out of the ordinary here: it is just good old Hibernate ORM with Panache operations in a standard JAX-RS service."
msgstr "ここでは何も特別なことはありません。標準的なJAX-RSサービスでPanache操作を行う古き良きHibernate ORMです。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:300
msgid "In fact, the interesting part is that we will need to add very few elements to make our full text search application working."
msgstr "実は、全文検索アプリケーションを動作させるために必要な要素はごくわずかです。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:301
#, no-wrap
msgid "Using Hibernate Search annotations"
msgstr "Hibernate Searchアノテーションの使用"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:304
msgid "Let's go back to our entities."
msgstr "エンティティに戻りましょう"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:306
msgid "Enabling full text search capabilities for them is as simple as adding a few annotations."
msgstr "フルテキスト検索機能を有効にするには、いくつかのアノテーションを追加するだけで簡単です。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:321
#, no-wrap
msgid ""
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.FullTextField;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.Indexed;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:327
#, no-wrap
msgid ""
"@Entity\n"
"@Indexed // <1>\n"
"public class Book extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:330
#, no-wrap
msgid ""
"    @FullTextField(analyzer = \"english\") // <2>\n"
"    public String title;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:334
#, no-wrap
msgid ""
"    @ManyToOne\n"
"    @JsonbTransient\n"
"    public Author author;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:337
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:388
#, no-wrap
msgid ""
"    // Preexisting equals()/hashCode() methods\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:339
msgid "First, let's use the `@Indexed` annotation to register our `Book` entity as part of the full text index."
msgstr "まず、 `@Indexed` アノテーションを使って、 `Book` エンティティを全文検索インデックスの一部として登録してみましょう。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:341
msgid "The `@FullTextField` annotation declares a field in the index specifically tailored for full text search.  In particular, we have to define an analyzer to split and analyze the tokens (~ words) - more on this later."
msgstr "`@FullTextField` アノテーションは、全文検索用に特別に調整されたインデックスのフィールドを宣言します。特に、トークン（～単語）を分割して分析するためのアナライザーを定義する必要があります。 - これについては後で説明します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:343
msgid "Now that our books are indexed, we can do the same for the authors."
msgstr "`Book` がインデックス化されたことで、 `Author` にも同じことができるようになりました。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:345
msgid "Open the `Author` class and include the content below."
msgstr "`Author` クラスを開き、以下の内容を記載します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:347
msgid "Things are quite similar here: we use the `@Indexed`, `@FullTextField` and `@KeywordField` annotations."
msgstr "`@Indexed` 、 `@FullTextField` 、 `@KeywordField` のアノテーションを使用していますが、こちらもよく似ている機能です。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:349
msgid "There are a few differences/additions though. Let's check them out."
msgstr "しかし、いくつかの違いや付加価値があります。それを見てみましょう。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:367
#, no-wrap
msgid ""
"import org.hibernate.search.engine.backend.types.Sortable;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.FullTextField;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.Indexed;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.IndexedEmbedded;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.KeywordField;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:373
#, no-wrap
msgid ""
"@Entity\n"
"@Indexed\n"
"public class Author extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:377
#, no-wrap
msgid ""
"    @FullTextField(analyzer = \"name\") // <1>\n"
"    @KeywordField(name = \"firstName_sort\", sortable = Sortable.YES, normalizer = \"sort\") // <2>\n"
"    public String firstName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:381
#, no-wrap
msgid ""
"    @FullTextField(analyzer = \"name\")\n"
"    @KeywordField(name = \"lastName_sort\", sortable = Sortable.YES, normalizer = \"sort\")\n"
"    public String lastName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:385
#, no-wrap
msgid ""
"    @OneToMany(mappedBy = \"author\", cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER)\n"
"    @IndexedEmbedded // <3>\n"
"    public List<Book> books;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:390
msgid "We use a `@FullTextField` similar to what we did for `Book` but you'll notice that the analyzer is different - more on this later."
msgstr "`@FullTextField` は `Book` と同様のものを使用しますが、アナライザーが異なることに気がつくでしょう - これについては後で説明します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:394
msgid "As you can see, we can define several fields for the same property.  Here, we define a `@KeywordField` with a specific name.  The main difference is that a keyword field is not tokenized (the string is kept as one single token) but can be normalized (i.e. filtered) - more on this later.  This field is marked as sortable as our intention is to use it for sorting our authors."
msgstr "このように、同じプロパティに複数のフィールドを定義することができます。ここでは、固有の名前を持つ `@KeywordField` を定義しています。主な違いは、キーワードフィールドはトークン化されません（文字列は1つのトークンとして保持される）が、正規化（すなわちフィルタリング）することができるということです。これについては後で説明します。このフィールドは `Author` のソートに使用することを意図しているため、ソート可能であるとマークされています。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:400
#, no-wrap
msgid "Analyzers and normalizers"
msgstr "アナライザーとノーマライザー"

#. type: Title ===
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:402
#, no-wrap
msgid "Introduction"
msgstr "はじめに"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:405
msgid "Analysis is a big part of full text search: it defines how text will be processed when indexing or building search queries."
msgstr "アナライズは全文検索の大きな部分を占めています。インデックス作成や検索クエリ構築の際に、テキストがどのように処理されるかを定義します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:407
msgid "The role of analyzers is to split the text into tokens (~ words) and filter them (making it all lowercase and removing accents for instance)."
msgstr "アナライザーの役割は、テキストをトークン（～単語）に分割し、フィルターをかけることです（例えば、すべて小文字にしたり、アクセントを削除したり）。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:410
msgid "Normalizers are a special type of analyzers that keeps the input as a single token.  It is especially useful for sorting or indexing keywords."
msgstr "ノーマライザーは入力を1つのトークンとして保持する特殊なアナライザです。特に、キーワードのソートやインデックス作成に有効です。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:414
msgid "You can learn more about the Elasticsearch analysis framework in the https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html[Analysis section of the Elasticsearch documentation]."
msgstr "Elasticsearchアナリシスフレームワークについては、 link:https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html[ElasticsearchドキュメントのText analysis セクション] で詳しく説明しています。"

#. type: Title ===
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:415
#, no-wrap
msgid "Defining the analyzers used"
msgstr "使用するアナライザーの定義"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:419
msgid "When we added the Hibernate Search annotations to our entities, we defined the analyzers and normalizers used.  Typically:"
msgstr "エンティティにHibernate Searchアノテーションを追加する際に、使用するアナライザーとノーマライザーを定義しました。典型的には:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:423
#, no-wrap
msgid "@FullTextField(analyzer = \"english\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:428
#, no-wrap
msgid "@FullTextField(analyzer = \"name\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:433
#, no-wrap
msgid "@KeywordField(name = \"lastName_sort\", sortable = Sortable.YES, normalizer = \"sort\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:436
msgid "We use:"
msgstr "以下のものを使用しています:"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:438
msgid "an analyzer called `name` for person names,"
msgstr "人名用の `name` というアナライザー,"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:439
msgid "an analyzer called `english` for book titles,"
msgstr "書籍のタイトル用の `english` というアナライザー,"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:440
msgid "a normalizer called `sort` for our sort fields"
msgstr "ソートフィールド用の `sort` というノーマライザー"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:442
msgid "but we haven't set them up yet."
msgstr "ですが、まだ設定していません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:444
msgid "Let's see how you can do it with Hibernate Search."
msgstr "それでは、Hibernate Searchを使ってどのように設定できるのか見てみましょう。"

#. type: Title ===
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:445
#, no-wrap
msgid "Setting up the analyzers"
msgstr "アナライザーのセットアップ"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:449
msgid "It is an easy task, we just need to create an implementation of `ElasticsearchAnalysisConfigurer` (and configure Quarkus to use it, more on that later)."
msgstr "これは簡単な作業で、 `ElasticsearchAnalysisConfigurer` の実装を作成するだけです（そして、それを使用するようにQuarkusを設定します、詳細は後述します）。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:451
msgid "To fulfill our requirements, let's create the following implementation:"
msgstr "要件を満たすために、次のような実装を作ってみましょう:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:455
#, no-wrap
msgid "package org.acme.hibernate.search.elasticsearch.config;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:458
#, no-wrap
msgid ""
"import org.hibernate.search.backend.elasticsearch.analysis.ElasticsearchAnalysisConfigurationContext;\n"
"import org.hibernate.search.backend.elasticsearch.analysis.ElasticsearchAnalysisConfigurer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:460
#, no-wrap
msgid "public class AnalysisConfigurer implements ElasticsearchAnalysisConfigurer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:466
#, no-wrap
msgid ""
"    @Override\n"
"    public void configure(ElasticsearchAnalysisConfigurationContext context) {\n"
"        context.analyzer(\"name\").custom() // <1>\n"
"                .tokenizer(\"standard\")\n"
"                .tokenFilters(\"asciifolding\", \"lowercase\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:470
#, no-wrap
msgid ""
"        context.analyzer(\"english\").custom() // <2>\n"
"                .tokenizer(\"standard\")\n"
"                .tokenFilters(\"asciifolding\", \"lowercase\", \"porter_stem\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:475
#, no-wrap
msgid ""
"        context.normalizer(\"sort\").custom() // <3>\n"
"                .tokenFilters(\"asciifolding\", \"lowercase\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:478
msgid "This is a simple analyzer separating the words on spaces, removing any non-ASCII characters by its ASCII counterpart (and thus removing accents) and putting everything in lowercase.  It is used in our examples for the author's names."
msgstr "これは、スペースで単語を分離し、ASCII以外の文字をASCIIの対応する文字で置換し（したがって、アクセントを除去し）、すべてを小文字にするシンプルなアナライザーです。これは、例では著者名に使用されています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:481
msgid "Here is the normalizer used for sorting. Very similar to our first analyzer, except we don't tokenize the words as we want one and only one token."
msgstr "ここではソートに使われるノーマライザーを紹介します。最初のアナライザーと非常によく似ていますが、1つだけのトークンが欲しいので、単語をトークン化しないことを除けば同じです。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:482
#, no-wrap
msgid "Adding full text capabilities to our REST service"
msgstr "RESTサービスに全文検索機能を追加"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:497
#, no-wrap
msgid ""
"    @Transactional // <1>\n"
"    void onStart(@Observes StartupEvent ev) throws InterruptedException { // <2>\n"
"        // only reindex if we imported some content\n"
"        if (Book.count() > 0) {\n"
"            Search.session(em)\n"
"                    .massIndexer()\n"
"                    .startAndWait();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:514
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"author/search\") // <3>\n"
"    @Transactional\n"
"    public List<Author> searchAuthors(@QueryParam String pattern, // <4>\n"
"            @QueryParam Optional<Integer> size) {\n"
"        return Search.session(em) // <5>\n"
"                .search(Author.class) // <6>\n"
"                .where(f ->\n"
"                    pattern == null || pattern.trim().isEmpty() ?\n"
"                            f.matchAll() : // <7>\n"
"                            f.simpleQueryString()\n"
"                                .fields(\"firstName\", \"lastName\", \"books.title\").matching(pattern) // <8>\n"
"                )\n"
"                .sort(f -> f.field(\"lastName_sort\").then().field(\"firstName_sort\")) // <9>\n"
"                .fetchHits(size.orElse(20)); // <10>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:516
msgid "Important point: we need a transactional context for these methods."
msgstr "重要なポイント：これらのメソッドには、トランザクションコンテキストが必要です。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:521
msgid "As we will import data into the PostgreSQL database using an SQL script, we need to reindex the data at startup.  For this, we use Hibernate Search's mass indexer, which allows to index a lot of data efficiently (you can fine tune it for better performances).  All the upcoming updates coming through Hibernate ORM operations will be synchronized automatically to the full text index.  If you don't import data manually in the database, you don't need that: the mass indexer should then only be used when you change your indexing configuration (adding a new field, changing an analyzer's configuration...) and you want the new configuration to be applied to your existing entities."
msgstr "SQLスクリプトを使用してPostgreSQLデータベースにデータをインポートするために起動時にデータのインデックスを再作成する必要があります。Hibernate Searchのマスインデクサーを使用して大量のデータを効率的にインデクシングすることができます（パフォーマンスを向上させるために微調整できます）。Hibernate ORMの操作によるその後のすべての更新は自動的に全文インデックスに同期されます。マスインデクサーを使用するのはインデクシング構成を変更したりして（新しいフィールドの追加、アナライザーの構成の変更など）、新しい構成を既存のエンティティに適用したい場合のみです。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:522
msgid "This is where the magic begins: just adding the annotations to our entities makes them available for full text search: we can now query the index using the Hibernate Search DSL."
msgstr "エンティティにアノテーションを追加するだけで、全文検索が可能になり、Hibernate Search DSLを使ってインデックスにクエリーを投げることができるようになります。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:525
msgid "We indicate that we are searching for ``Author``s."
msgstr "`Author` を検索していることを示しています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:526
msgid "We create a predicate: if the pattern is empty, we use a `matchAll()` predicate."
msgstr "述語を作成します。パターンが空の場合は `matchAll()` 述語を使用します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:527
msgid "If we have a valid pattern, we create a https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html[`simpleQueryString()`] predicate on the `firstName`, `lastName` and `books.title` fields matching our pattern."
msgstr "有効なパターンがあれば、パターンにマッチする `firstName` 、 `lastName` 、 `books.title` フィールドに対する https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html[`simpleQueryString()`] 述語を作成します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:528
msgid "We define the sort order of our results. Here we sort by last name, then by first name. Note that we use the specific fields we created for sorting."
msgstr "結果のソート順を定義します。ここでは、姓でソートし、次に名でソートしています。ソートには作成した特定のフィールドを使用していることに注意してください。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:529
msgid "Fetch the `size` top hits, `20` by default. Obviously, paging is also supported."
msgstr "`size` で指定した数の一致度が高いものをフェッチします。デフォルトでは `20` です。もちろんページングもサポートしています。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:534
msgid "The Hibernate Search DSL supports a significant subset of the Elasticsearch predicates (match, range, nested, phrase, spatial...).  Feel free to explore the DSL using autocompletion."
msgstr "Hibernate Search DSLはElasticsearchの述語（match、range、nested、phrase、spatial...）の重要なサブセットをサポートしています。オートコンプリートを使ってDSLをご自由にお試しください。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:539
#, no-wrap
msgid "Configuring the application"
msgstr "アプリケーションの設定"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:542
msgid "As usual, we can configure everything in the Quarkus configuration file, `application.properties`."
msgstr "いつものように、Quarkusの設定ファイル（ `application.properties` ）ですべての設定を行うことができます。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:544
msgid "Edit `src/main/resources/application.properties` and inject the following configuration:"
msgstr "以下の内容の `src/main/resources/import.sql` ファイルを作成してみましょう:"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:548
#, no-wrap
msgid "quarkus.ssl.native=false <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:553
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql <2>\n"
"quarkus.datasource.username=quarkus_test\n"
"quarkus.datasource.password=quarkus_test\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql:quarkus_test\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:556
#, no-wrap
msgid ""
"quarkus.hibernate-orm.database.generation=drop-and-create <3>\n"
"quarkus.hibernate-orm.sql-load-script=import.sql <4>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:562
#, no-wrap
msgid ""
"quarkus.hibernate-search.elasticsearch.version=7 <5>\n"
"quarkus.hibernate-search.elasticsearch.analysis.configurer=org.acme.hibernate.search.elasticsearch.config.AnalysisConfigurer <6>\n"
"quarkus.hibernate-search.schema-management.strategy=drop-and-create <7>\n"
"quarkus.hibernate-search.elasticsearch.index-defaults.schema-management.required-status=yellow <8>\n"
"quarkus.hibernate-search.automatic-indexing.synchronization.strategy=sync <9>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:565
msgid "Let's create a PostgreSQL datasource."
msgstr "それでは、PostgreSQLのデータソースを作成してみましょう。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:578
msgid "This means that we wait for the entities to be searchable before considering a write complete.  On a production setup, the `write-sync` default will provide better performance.  Using `sync` is especially important when testing as you need the entities to be searchable immediately."
msgstr "これは、エンティティが検索可能になるのを待ってから書き込みが完了したとみなすことを意味します。本番環境では、デフォルトの `write-sync` の方がパフォーマンスが高くなります。テスト時にはエンティティがすぐに検索可能になる必要があるため `sync` を使用することが特に重要です。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:581
msgid "For more information about the Hibernate Search extension configuration please refer to the <<configuration-reference, Configuration Reference>>."
msgstr "Hibernate Searchエクステンションの設定については、 <<configuration-reference, 設定リファレンス>> を参照してください。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:582
#, no-wrap
msgid "Creating a frontend"
msgstr "フロントエンドの作成"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:589
#, no-wrap
msgid "Automatic import script"
msgstr "自動インポートスクリプト"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:592
msgid "For the purpose of this demonstration, let's import an initial dataset."
msgstr "このデモの目的のために、初期データセットをインポートしてみましょう。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:594
msgid "Let's create a `src/main/resources/import.sql` file with the following content:"
msgstr "以下の内容の `src/main/resources/import.sql` ファイルを作成してみましょう。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:599
#, no-wrap
msgid ""
"INSERT INTO author(id, firstname, lastname) VALUES (nextval('hibernate_sequence'), 'John', 'Irving');\n"
"INSERT INTO author(id, firstname, lastname) VALUES (nextval('hibernate_sequence'), 'Paul', 'Auster');\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:613
#, no-wrap
msgid ""
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'The World According to Garp', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'The Hotel New Hampshire', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'The Cider House Rules', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'A Prayer for Owen Meany', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'Last Night in Twisted River', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'In One Person', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'Avenue of Mysteries', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'The New York Trilogy', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'Mr. Vertigo', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'The Brooklyn Follies', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'Invisible', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'Sunset Park', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), '4 3 2 1', 2);\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:615
#, no-wrap
msgid "Preparing the infrastructure"
msgstr "インフラの準備"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:618
msgid "We need a PostgreSQL instance and an Elasticsearch cluster."
msgstr "PostgreSQLインスタンスとElasticsearchクラスターが必要です。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:620
msgid "Let's use Docker to start one of each:"
msgstr "Dockerを使ってそれぞれ1つずつ起動してみましょう。"

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:624
#, no-wrap
msgid "docker run -it --rm=true --name elasticsearch_quarkus_test -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" docker.elastic.co/elasticsearch/elasticsearch-oss:{elasticsearch-version}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:629
#, no-wrap
msgid "docker run --ulimit memlock=-1:-1 -it --rm=true --memory-swappiness=0 --name postgresql_quarkus_test -e POSTGRES_USER=quarkus_test -e POSTGRES_PASSWORD=quarkus_test -e POSTGRES_DB=quarkus_test -p 5432:5432 postgres:11.3\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:631
#, no-wrap
msgid "Time to play with your application"
msgstr "アプリケーションで遊ぶ時間"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:634
msgid "You can now interact with your REST service:"
msgstr "これで、REST サービスと対話できるようになりました。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:636
msgid "start Quarkus with `./mvnw compile quarkus:dev`"
msgstr "`./mvnw compile quarkus:dev` で Quarkus を起動します。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:637
msgid "open a browser to `http://localhost:8080/`"
msgstr "ブラウザで `http://localhost:8080/` を開きます"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:638
msgid "search for authors or book titles (we initialized some data for you)"
msgstr "著者や書名の検索してください（いくつかのデータを入れておきました）"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:639
msgid "create new authors and books and search for them too"
msgstr "新しい著者や書籍を作成し、それらを検索することもできます"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:641
msgid "As you can see, all your updates are automatically synchronized to the Elasticsearch cluster."
msgstr "ご覧のように、すべての更新が自動的にElasticsearchクラスタに同期されます。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:642
#, no-wrap
msgid "Building a native executable"
msgstr "ネイティブ実行可能ファイルの構築"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:645
msgid "You can build a native executable with the usual command `./mvnw package -Pnative`."
msgstr "ネイティブ実行可能ファイルは、通常のコマンド `./mvnw package -Pnative` でビルドできます。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:649
msgid "As usual with native executable compilation, this operation consumes a lot of memory."
msgstr "ネイティブ実行可能ファイルのコンパイルと同様に、この操作は大量のメモリーを消費します。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:651
msgid "It might be safer to stop the two containers while you are building the native executable and start them again once you are done."
msgstr "ネイティブ実行可能ファイルをビルドしている間は2つのコンテナーを停止して、ビルドが終わったら再度起動した方が安全かもしれません。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:656
msgid "You can then point your browser to `http://localhost:8080/` and use your application."
msgstr "その後、ブラウザで `http://localhost:8080/` を開きアプリケーションを使用します。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:661
msgid "The startup is a bit slower than usual: it is mostly due to us dropping and recreating the database schema and the Elasticsearch mapping every time at startup.  We also inject some data and execute the mass indexer."
msgstr "起動がいつもより少し遅いのは、起動時に毎回データベーススキーマとElasticsearchマッピングを落として再作成しているのが原因です。また、いくつかのデータを注入し、マスインデクサーを実行しています。"

#. type: delimited block =
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:663
msgid "In a real life application, it is obviously something you won't do at startup."
msgstr "実際のアプリケーションでは、明らかに起動時に実行しないことです。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:665
#, no-wrap
msgid "Further reading"
msgstr "さらに詳しく"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:672
#, no-wrap
msgid "FAQ"
msgstr "FAQ"

#. type: Title ===
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:688
#, no-wrap
msgid "Why Elasticsearch only?"
msgstr "なぜElasticsearchだけなのか?"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:691
msgid "Hibernate Search supports both a Lucene backend and an Elasticsearch backend."
msgstr "Hibernate SearchはLuceneバックエンドとElasticsearchバックエンドの両方をサポートしています。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:694
msgid "In the context of Quarkus and to build microservices, we thought the latter would make more sense.  Thus we focused our efforts on it."
msgstr "Quarkusとマイクロサービスを構築するという文脈では、後者の方がより意味があると考えました。そこで、私たちは後者に力を入れました。"

#. type: Plain text
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:696
msgid "We don't have plans to support the Lucene backend in Quarkus for now."
msgstr "今のところ、QuarkusでLuceneバックエンドをサポートする予定はありません。"

#. type: Title ==
#: upstream/_versions/1.7/guides/hibernate-search-elasticsearch.adoc:698
#, no-wrap
msgid "Hibernate Search Configuration Reference"
msgstr "Hibernate Search 設定リファレンス"
