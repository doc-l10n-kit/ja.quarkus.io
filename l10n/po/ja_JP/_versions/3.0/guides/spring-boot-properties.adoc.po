msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:6
#, no-wrap
msgid "Accessing application properties with Spring Boot properties API"
msgstr "Spring BootプロパティAPIでアプリケーションのプロパティにアクセスする"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:13
msgid "If you prefer to use Spring Boot `@ConfigurationProperties` annotated class to access application properties instead of <<config-mappings.adoc#config-mappings,`@ConfigMapping`>> or a MicroProfile `@ConfigProperty` approach, you can do that with this extension."
msgstr "<<config-mappings.adoc#config-mappings,`@ConfigMapping`>> や MicroProfile `@ConfigProperty` のアプローチではなく、Spring Boot `@ConfigurationProperties` アノテーションクラスを使用してアプリケーションのプロパティーにアクセスしたい場合は、このエクステンションを使用することができます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:16
msgid "Spring Boot `@ConfigurationProperties` has a few limitations. For instance, `Map` injection is not supported. Consider using xref:config-mappings.adoc[Mapping configuration to objects]."
msgstr "Spring Boot `@ConfigurationProperties` にはいくつかの制限があります。例えば、 `Map` インジェクションはサポートされていません。 link:config-mappings.html[オブジェクトへのマッピング設定] の使用を検討してください。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:17
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:21
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:25
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションの指示に従って、段階的にアプリケーションを作成していくことをお勧めします。ただし、完成した例にすぐにアクセスすることもできます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:27
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitリポジトリをクローンする： `git clone {quickstarts-clone-url}` 、または{quickstarts-archive-url}[archive] をダウンロードする。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:29
msgid "The solution is located in the `spring-boot-properties-quickstart` {quickstarts-tree-url}/spring-boot-properties-quickstart[directory]."
msgstr "このソリューションは `spring-boot-properties-quickstart` {quickstarts-tree-url}/spring-boot-properties-quickstart[directory]にあります。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:30
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:33
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:39
msgid "This command generates a project and imports the `spring-boot-properties` extension."
msgstr "このコマンドは、プロジェクトを生成し、 `spring-boot-properties` エクステンションをインポートします。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:42
msgid "If you already have your Quarkus project configured, you can add the `spring-boot-properties` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリで以下のコマンドを実行することで、 `spring-boot-properties` エクステンションをプロジェクトに追加することができます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:47
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:49
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:55
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-boot-properties</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:58
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:61
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-spring-boot-properties\")\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:63
#, no-wrap
msgid "GreetingController"
msgstr "GreetingController"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:67
msgid "First, create a `GreetingResource` JAX-RS resource in the `src/main/java/org/acme/spring/boot/properties/GreetingResource.java` file that looks like:"
msgstr "まず、`src/main/java/org/acme/spring/boot/properties/GreetingResource.java` ファイルに以下のような `GreetingResource` JAX-RSリソースを作成します。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:71
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:95
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:120
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:176
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:193
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:217
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:251
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:272
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:296
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:328
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:366
#, no-wrap
msgid "package org.acme.spring.boot.properties;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:76
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:79
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:86
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:88
#, no-wrap
msgid "Injecting properties"
msgstr "プロパティーの注入"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:91
msgid "Create a new class `src/main/java/org/acme/spring/boot/properties/GreetingProperties.java` with a message field:"
msgstr "次のようにメッセージフィールドを持つ新しいクラス `src/main/java/org/acme/spring/boot/properties/GreetingProperties.java` を作成します:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:97
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:178
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:255
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:332
#, no-wrap
msgid "import org.springframework.boot.context.properties.ConfigurationProperties;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:100
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:181
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:258
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:335
#, no-wrap
msgid ""
"@ConfigurationProperties(\"greeting\")\n"
"public class GreetingProperties {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:103
#, no-wrap
msgid ""
"    public String text;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:108
msgid "Here `text` field is public, but it could also be a private field with getter and setter or just a public getter in an interface.  Because `text` does not have a default value it is considered required and unless it is defined in a configuration file (`application.properties` by default)  your application will fail to start.  Define this property in your `src/main/resources/application.properties` file:"
msgstr "ここでは `text` フィールドはパブリックですが、ゲッターとセッターを持つプライベートフィールドや、インターフェイス内の単なるパブリックゲッターにすることもできます。 `text` にはデフォルト値がないため、必須とみなされ、設定ファイル（デフォルトでは `application.properties` ）に定義されていないと、アプリケーションの起動に失敗します。 `src/main/resources/application.properties` ファイルでこのプロパティを定義してください:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:113
#, no-wrap
msgid ""
"# Your configuration properties\n"
"greeting.text = hello\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:116
msgid "Now modify `GreetingResource` to start using the `GreetingProperties`:"
msgstr "そして、 `GreetingProperties` を使い始めるよう `GreetingResource` を修正します。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:126
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:199
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:278
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:372
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:129
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:202
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:281
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:375
#, no-wrap
msgid ""
"@Path(\"/greeting\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:132
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:205
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:284
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:378
#, no-wrap
msgid ""
"    @Inject\n"
"    GreetingProperties properties;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:139
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return properties.text;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:142
msgid "Run the tests to verify that application still functions correctly."
msgstr "テストを実行し、アプリケーションがまだ正常に機能していることを確認します。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:143
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:146
msgid "Run the application in dev mode with:"
msgstr "次のようにdevモードでアプリケーションを実行します:"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:150
msgid "Open your browser to http://localhost:8080/greeting."
msgstr "ブラウザで http://localhost:8080/greeting を開きます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:152
msgid "Changing the configuration file is immediately reflected."
msgstr "設定ファイルの変更はすぐに反映されます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:154
msgid "As usual, the application can be packaged using:"
msgstr "いつものように、アプリケーションは以下の方法でパッケージ化されます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:158
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "そして、 `java -jar target/quarkus-app/quarkus-run.jar` を使って実行します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:160
msgid "You can also generate the native executable with:"
msgstr "次のようにネイティブ実行可能ファイルを生成することもできます。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:163
#, no-wrap
msgid "Default values"
msgstr "デフォルト値"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:166
msgid "Now let's add a suffix for a greeting for which we'll set a default value."
msgstr "では、デフォルト値を設定する挨拶にサフィックスを追加してみましょう。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:170
msgid "Properties with default values can be configured in a configuration file just like any other property.  However, the default value will be used if the property was not defined in a configuration file."
msgstr "デフォルト値を持つプロパティは、他のプロパティと同様に設定ファイルで設定できます。ただし、そのプロパティが設定ファイルで定義されていない場合は、デフォルト値が使用されます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:172
msgid "Go ahead and add the new field to the `GreetingProperties` class:"
msgstr "`GreetingProperties` クラスに新しいフィールドを追加してください。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:183
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:260
#, no-wrap
msgid "    public String text;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:186
#, no-wrap
msgid ""
"    public String suffix = \"!\";\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:189
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:268
msgid "And update the `GreetingResource` and its test `GreetingResourceTest`:"
msgstr "そして、 `GreetingResource` とそのテスト `GreetingResourceTest` を更新します。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:212
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return properties.text + properties.suffix;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:220
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:299
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:223
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:302
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:226
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:305
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:236
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello!\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:239
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:318
msgid "Run the tests to verify the change."
msgstr "テストを実行して変更を確認します。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:240
#, no-wrap
msgid "Optional values"
msgstr "オプション値"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:245
msgid "Properties with optional values are the middle-ground between standard and properties with default values.  While a missing property in a configuration file will not cause your application to fail, it will nevertheless not have a value set.  We use `java.util.Optional` type to define such properties."
msgstr "オプション値を持つプロパティは、標準的なプロパティとデフォルト値を持つプロパティの中間的な存在です。設定ファイルにプロパティがないからといって、アプリケーションが失敗することはありませんが、それにもかかわらず、値が設定されていないことがあります。このようなプロパティの定義には `java.util.Optional` タイプを使用します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:247
msgid "Add an optional `name` property to the `GreetingProperties`:"
msgstr "`GreetingProperties` クラスに新しいオプションの `name` プロパティを追加してください。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:253
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:330
#, no-wrap
msgid "import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:262
#, no-wrap
msgid "    public String suffix = \"!\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:265
#, no-wrap
msgid ""
"    public Optional<String> name;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:291
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return properties.text + \", \" + properties.name.orElse(\"You\") + properties.suffix;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:315
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello, You!\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:319
#, no-wrap
msgid "Grouping properties"
msgstr "プロパティーのグループ化"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:324
msgid "Now we have three properties in our `GreetingProperties` class.  While `name` could be considered more of a runtime property (and maybe could be passed as an HTTP query parameter in the future), `text` and `suffix` are used to define a message template.  Let's group these two properties in a separate inner class:"
msgstr "これで、 `GreetingProperties` クラスに3つのプロパティができました。 `name` はどちらかというと実行時のプロパティと考えられますが（将来的には HTTP クエリパラメータとして渡すことができるかもしれません）、 `text` と `suffix` はメッセージテンプレートの定義に使用されます。この2つのプロパティを別のインナークラスにまとめてみましょう:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:337
#, no-wrap
msgid "    public Message message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:339
#, no-wrap
msgid "    public Optional<String> name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:341
#, no-wrap
msgid "    public static class Message {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:343
#, no-wrap
msgid "        public String text;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:347
#, no-wrap
msgid ""
"        public String suffix = \"!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:350
msgid "Here `Message` properties class is defined as an inner class, but it could also be a top level class."
msgstr "ここでは `Message` プロパティクラスはインナークラスとして定義されていますが、トップレベルのクラスとすることも出来ます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:353
msgid "Having such property groups brings more structure to your configuration.  This is especially useful when then number of properties grows."
msgstr "このようなプロパティグループによって、設定にさらなる構造をもたらします。これは、プロパティの数が増えてきたときに特に有効です。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:356
msgid "Because of the additional class, our property names have changed.  Let's update the properties file and the `GreetingResource` class."
msgstr "クラスが追加されたため、プロパティ名が変更されています。プロパティファイルと `GreetingResource` クラスを更新してみましょう。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:361
#, no-wrap
msgid ""
"# Your configuration properties\n"
"greeting.message.text = hello\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:385
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return properties.message.text + \", \" + properties.name.orElse(\"You\") + properties.message.suffix;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:387
#, no-wrap
msgid "More Spring guides"
msgstr "その他のSpringガイド"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:390
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkusには、より多くのSpring互換機能があります。詳細については、以下のガイドを参照してください。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:392
msgid "xref:spring-di.adoc[Quarkus - Extension for Spring DI]"
msgstr "xref:spring-di.adoc[Quarkus - Extension for Spring DI]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:393
msgid "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"
msgstr "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:394
msgid "xref:spring-data-jpa.adoc[Quarkus - Extension for Spring Data JPA]"
msgstr "xref:spring-data-jpa.adoc[Quarkus - Extension for Spring Data JPA]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:395
msgid "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"
msgstr "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:396
msgid "xref:spring-security.adoc[Quarkus - Extension for Spring Security]"
msgstr "xref:spring-security.adoc[Quarkus - Spring Security のエクステンション]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:397
msgid "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:398
msgid "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"
msgstr "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-boot-properties.adoc:398
msgid "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
msgstr "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
