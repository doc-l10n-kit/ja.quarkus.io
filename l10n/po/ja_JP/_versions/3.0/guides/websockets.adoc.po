msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.0/guides/websockets.adoc:6
#, no-wrap
msgid "Using WebSockets"
msgstr "WebSocketの使用"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:13
msgid "This guide explains how your Quarkus application can utilize web sockets to create interactive web applications.  Because it's the _canonical_ web socket application, we are going to create a simple chat application."
msgstr "このガイドでは、QuarkusアプリケーションがWebSocketを利用してインタラクティブなウェブアプリケーションを作成する方法を説明します。 _定型的な_ WebSocketアプリケーションを想定し、簡単なチャットアプリケーションを作成します。"

#. type: Title ==
#: upstream/_versions/3.0/guides/websockets.adoc:14
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_versions/3.0/guides/websockets.adoc:18
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:21
msgid "In this guide, we create a straightforward chat application using web sockets to receive and send messages to the other connected users."
msgstr "このガイドでは、WebSocketを使用して、接続されている他のユーザーとメッセージを送受信するための簡単なチャットアプリケーションを作成します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:23
msgid "image:websocket-guide-architecture.png[alt=Architecture]"
msgstr "image:websocket-guide-architecture.png[alt=Architecture]"

#. type: Title ==
#: upstream/_versions/3.0/guides/websockets.adoc:24
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:28
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can skip right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、すぐに完成した例に飛んでも構いません。"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:30
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitリポジトリをクローンする： `git clone {quickstarts-clone-url}` 、または{quickstarts-archive-url}[archive] をダウンロードする。"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:32
msgid "The solution is located in the `websockets-quickstart` {quickstarts-tree-url}/websockets-quickstart[directory]."
msgstr "ソリューションは `websockets-quickstart` {quickstarts-tree-url}/websockets-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_versions/3.0/guides/websockets.adoc:33
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:36
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:42
msgid "This command generates the project (without any classes) and imports the `websockets` extension."
msgstr "このコマンドは、Mavenプロジェクト(クラスなし)を生成し、 `websockets` エクステンションをインポートします。"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:45
msgid "If you already have your Quarkus project configured, you can add the `websockets` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `websockets` エクステンションを追加することができます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:50
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_versions/3.0/guides/websockets.adoc:52
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:58
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-websockets</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.0/guides/websockets.adoc:61
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:64
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-websockets\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:67
msgid "If you only want to use the WebSocket client you should include `quarkus-websockets-client` instead."
msgstr "WebSocketクライアントのみを使用したい場合は、代わりに `quarkus-websockets-client` を含める必要があります。"

#. type: Title ==
#: upstream/_versions/3.0/guides/websockets.adoc:68
#, no-wrap
msgid "Handling web sockets"
msgstr "WebSocketの取り扱い"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:73
msgid "Our application contains a single class that handles the web sockets.  Create the `org.acme.websockets.ChatSocket` class in the `src/main/java` directory.  Copy the following content into the created file:"
msgstr "このアプリケーションには、Web ソケットを処理するクラスが一つ含まれます。 `src/main/java` ディレクトリーに `org.acme.websockets.ChatSocket` クラスを作成します。作成したファイルに以下の内容をコピーします。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:77
#: upstream/_versions/3.0/guides/websockets.adoc:182
#, no-wrap
msgid "package org.acme.websockets;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:80
#, no-wrap
msgid ""
"import java.util.Map;\n"
"import java.util.concurrent.ConcurrentHashMap;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:89
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.websocket.OnClose;\n"
"import jakarta.websocket.OnError;\n"
"import jakarta.websocket.OnMessage;\n"
"import jakarta.websocket.OnOpen;\n"
"import jakarta.websocket.server.PathParam;\n"
"import jakarta.websocket.server.ServerEndpoint;\n"
"import jakarta.websocket.Session;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:93
#, no-wrap
msgid ""
"@ServerEndpoint(\"/chat/{username}\")         // <1>\n"
"@ApplicationScoped\n"
"public class ChatSocket {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:95
#, no-wrap
msgid "    Map<String, Session> sessions = new ConcurrentHashMap<>(); // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:100
#, no-wrap
msgid ""
"    @OnOpen\n"
"    public void onOpen(Session session, @PathParam(\"username\") String username) {\n"
"        sessions.put(username, session);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:106
#, no-wrap
msgid ""
"    @OnClose\n"
"    public void onClose(Session session, @PathParam(\"username\") String username) {\n"
"        sessions.remove(username);\n"
"        broadcast(\"User \" + username + \" left\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:112
#, no-wrap
msgid ""
"    @OnError\n"
"    public void onError(Session session, @PathParam(\"username\") String username, Throwable throwable) {\n"
"        sessions.remove(username);\n"
"        broadcast(\"User \" + username + \" left on error: \" + throwable);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:121
#, no-wrap
msgid ""
"    @OnMessage\n"
"    public void onMessage(String message, @PathParam(\"username\") String username) {\n"
"        if (message.equalsIgnoreCase(\"_ready_\")) {\n"
"            broadcast(\"User \" + username + \" joined\");\n"
"        } else {\n"
"            broadcast(\">> \" + username + \": \" + message);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:131
#, no-wrap
msgid ""
"    private void broadcast(String message) {\n"
"        sessions.values().forEach(s -> {\n"
"            s.getAsyncRemote().sendObject(message, result ->  {\n"
"                if (result.getException() != null) {\n"
"                    System.out.println(\"Unable to send message: \" + result.getException());\n"
"                }\n"
"            });\n"
"        });\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:133
#: upstream/_versions/3.0/guides/websockets.adoc:236
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:135
msgid "Configures the web socket URL"
msgstr "WebSocketのURLを設定する"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:136
msgid "Stores the currently opened web sockets"
msgstr "現在開いているWebSocketを格納します。"

#. type: Title ==
#: upstream/_versions/3.0/guides/websockets.adoc:137
#, no-wrap
msgid "A slick web frontend"
msgstr "洗練されたWebフロントエンド"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:142
msgid "All chat applications need a _nice_ UI, well, this one may not be that nice, but does the work.  Quarkus automatically serves static resources contained in the `META-INF/resources` directory.  Create the `src/main/resources/META-INF/resources` directory and copy this {quickstarts-blob-url}/websockets-quickstart/src/main/resources/META-INF/resources/index.html[index.html] file in it."
msgstr "すべてのチャットアプリケーションには _素敵な_ UIが必要です。Quarkusは、 `META-INF/resources` ディレクトリーに含まれる静的リソースを自動的にサービスします。 `src/main/resources/META-INF/resources` ディレクトリーを作成し、この {quickstarts-blob-url}/websockets-quickstart/src/main/resources/META-INF/resources/index.html[index.html] ファイルをコピーします。"

#. type: Title ==
#: upstream/_versions/3.0/guides/websockets.adoc:143
#, no-wrap
msgid "Run the application"
msgstr "アプリケーションの実行"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:146
msgid "Now, let's see our application in action. Run it with:"
msgstr "では、実際にアプリケーションを見てみましょう。以下のように実行してみてください:"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:150
msgid "Then open your 2 browser windows to http://localhost:8080/:"
msgstr "そして、ブラウザウィンドウを2つ開いて、 http://localhost:8080/ に移動します:"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:152
msgid "Enter a name in the top text area (use 2 different names)."
msgstr "上部のテキストエリアに名前を入力します(2種類の名前を使用します)。"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:153
msgid "Click on connect"
msgstr "connectをクリック"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:154
msgid "Send and receive messages"
msgstr "メッセージの送受信"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:156
msgid "image:websocket-guide-screenshot.png[alt=Application]"
msgstr "image:websocket-guide-screenshot.png[alt=Application]"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:158
msgid "As usual, the application can be packaged using:"
msgstr "いつものように、アプリケーションは以下の方法でパッケージ化されます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:162
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "そして、 `java -jar target/quarkus-app/quarkus-run.jar` を使って実行します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:164
msgid "You can also build the native executable using:"
msgstr "ネイティブ実行可能ファイルを次のようにビルドすることもできます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:168
msgid "You can also test your web socket applications using the approach detailed {quickstarts-blob-url}/websockets-quickstart/src/test/java/org/acme/websockets/ChatTest.java[here]."
msgstr "また、{quickstarts-blob-url}/websockets-quickstart/src/test/java/org/acme/websockets/ChatTest.java[こちら] で詳細に解説された手法を使用して、Webソケットアプリケーションをテストすることもできます。"

#. type: Title ==
#: upstream/_versions/3.0/guides/websockets.adoc:169
#, no-wrap
msgid "WebSocket Clients"
msgstr "WebSocketクライアント"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:172
msgid "Quarkus also contains a WebSocket client. You can call `ContainerProvider.getWebSocketContainer().connectToServer` to create a websocket connection. By default, the `quarkus-websockets` artifact includes both client and server support. However, if you only want the client you can include `quarkus-websockets-client` instead."
msgstr "Quarkusには、WebSocketクライアントも含まれています。 `ContainerProvider.getWebSocketContainer().connectToServer` を呼び出して、WebSocket 接続を作成できます。デフォルトでは、 `quarkus-websockets` アーティファクトにはクライアントとサーバーの両方が含まれていますが、クライアントのみを必要とする場合は、代わりに `quarkus-websockets-client` を含めることができます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:178
msgid "The example below shows the client being used to test the chat endpoint above."
msgstr "以下の例は、上記のチャットエンドポイントをテストするために使用されるクライアントを示しています。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:186
#, no-wrap
msgid ""
"import java.net.URI;\n"
"import java.util.concurrent.LinkedBlockingDeque;\n"
"import java.util.concurrent.TimeUnit;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:192
#, no-wrap
msgid ""
"import jakarta.websocket.ClientEndpoint;\n"
"import jakarta.websocket.ContainerProvider;\n"
"import jakarta.websocket.OnMessage;\n"
"import jakarta.websocket.OnOpen;\n"
"import jakarta.websocket.Session;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:195
#, no-wrap
msgid ""
"import org.junit.jupiter.api.Assertions;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:198
#, no-wrap
msgid ""
"import io.quarkus.test.common.http.TestHTTPResource;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:201
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class ChatTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:203
#, no-wrap
msgid "    private static final LinkedBlockingDeque<String> MESSAGES = new LinkedBlockingDeque<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:206
#, no-wrap
msgid ""
"    @TestHTTPResource(\"/chat/stu\")\n"
"    URI uri;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:216
#, no-wrap
msgid ""
"    @Test\n"
"    public void testWebsocketChat() throws Exception {\n"
"        try (Session session = ContainerProvider.getWebSocketContainer().connectToServer(Client.class, uri)) {\n"
"            Assertions.assertEquals(\"CONNECT\", MESSAGES.poll(10, TimeUnit.SECONDS));\n"
"            Assertions.assertEquals(\"User stu joined\", MESSAGES.poll(10, TimeUnit.SECONDS));\n"
"            session.getAsyncRemote().sendText(\"hello world\");\n"
"            Assertions.assertEquals(\">> stu: hello world\", MESSAGES.poll(10, TimeUnit.SECONDS));\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:219
#, no-wrap
msgid ""
"    @ClientEndpoint\n"
"    public static class Client {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:227
#, no-wrap
msgid ""
"        @OnOpen\n"
"        public void open(Session session) {\n"
"            MESSAGES.add(\"CONNECT\");\n"
"            // Send a message to indicate that we are ready,\n"
"            // as the message handler may not be registered immediately after this callback.\n"
"            session.getAsyncRemote().sendText(\"_ready_\");\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:232
#, no-wrap
msgid ""
"        @OnMessage\n"
"        void message(String msg) {\n"
"            MESSAGES.add(msg);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/websockets.adoc:234
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/websockets.adoc:239
#, no-wrap
msgid "More WebSocket Information"
msgstr "その他のWebSocket情報"

#. type: Plain text
#: upstream/_versions/3.0/guides/websockets.adoc:242
msgid "The Quarkus WebSocket implementation is an implementation of link:https://jakarta.ee/specifications/websocket/[Jakarta Websockets]."
msgstr "Quarkus WebSocketの実装は、 link:https://jakarta.ee/specifications/websocket/[Jakarta Websocket] の実装の一つです。"
