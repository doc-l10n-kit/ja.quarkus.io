msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:16
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:21
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "https://stedolan.github.io/jq/[jq tool]"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:22
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:25
msgid "In this example, we build a very simple microservice which offers two endpoints:"
msgstr "この例では、2つのエンドポイントを提供する非常にシンプルなマイクロサービスを構築しています。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:27
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:28
msgid "`/api/admin`"
msgstr "`/api/admin`"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:30
msgid "These endpoints are protected and can only be accessed if a client is sending a bearer token along with the request, which must be valid (e.g.: signature, expiration and audience) and trusted by the microservice."
msgstr "これらのエンドポイントは保護されており、クライアントがリクエストと一緒にベアラートークンを送信している場合にのみアクセスすることができます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:32
msgid "The bearer token is issued by a Keycloak Server and represents the subject to which the token was issued for. For being an OAuth 2.0 Authorization Server, the token also references the client acting on behalf of the user."
msgstr "Bearer Tokenは、Keycloakサーバーによって発行され、トークンが発行された対象を表します。OAuth 2.0 認可サーバーであるため、トークンはユーザーの代わりに動作するクライアントも参照します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:34
msgid "The `/api/users/me` endpoint can be accessed by any user with a valid token. As a response, it returns a JSON document with details about the user where these details are obtained from the information carried on the token."
msgstr "`/api/users/me` エンドポイントは、有効なトークンを持つ任意のユーザーがアクセスできます。レスポンスとして、トークンに記録されている情報から取得したユーザーの詳細を含む JSON ドキュメントを返します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:36
msgid "The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint."
msgstr "`/api/admin` エンドポイントは RBAC (Role-Based Access Control) で保護されており、 `admin` ロールで許可されたユーザーのみがアクセスできます。このエンドポイントでは、 `@RolesAllowed` アノテーションを使用して、アクセス制約を宣言的に強制します。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:37
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:41
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションの指示に従って、段階的にアプリケーションを作成していくことをお勧めします。ただし、完成した例にすぐにアクセスすることもできます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:43
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitリポジトリをクローンする： `git clone {quickstarts-clone-url}` 、または{quickstarts-archive-url}[archive] をダウンロードする。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:45
msgid "The solution is located in the `security-openid-connect-quickstart` {quickstarts-tree-url}/security-openid-connect-quickstart[directory]."
msgstr "ソリューションは `security-openid-connect-quickstart` {quickstarts-tree-url}/security-openid-connect-quickstart[ディレクトリー] にあります。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:46
#, no-wrap
msgid "Procedure"
msgstr "手順"

#. type: Title ===
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:49
#, no-wrap
msgid "Create the Maven project"
msgstr "Maven プロジェクトの作成"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:52
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:59
msgid "This command generates a Maven project, importing the `oidc` extension which is an implementation of OIDC for Quarkus."
msgstr "このコマンドは、QuarkusのOIDCの実装である `oidc` エクステンションをインポートして、Mavenプロジェクトを生成します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:62
msgid "If you already have your Quarkus project configured, you can add the `oidc` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `oidc` エクステンションを追加することができます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:67
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:69
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:75
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-oidc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:78
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:81
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-oidc\")\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:83
#, no-wrap
msgid "Write the application"
msgstr "アプリケーションの記述"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:86
msgid "Let's start by implementing the `/api/users/me` endpoint. As you can see from the source code below it is just a regular JAX-RS resource:"
msgstr "まずは `/api/users/me` エンドポイントを実装してみましょう。下のソースコードを見るとわかるように、これは通常の JAX-RS リソースです。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:90
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:133
#, no-wrap
msgid "package org.acme.security.openid.connect;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:95
#, no-wrap
msgid ""
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:98
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.NoCache;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:101
#, no-wrap
msgid ""
"@Path(\"/api/users\")\n"
"public class UsersResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:104
#, no-wrap
msgid ""
"    @Inject\n"
"    SecurityIdentity securityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:112
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/me\")\n"
"    @RolesAllowed(\"user\")\n"
"    @NoCache\n"
"    public User me() {\n"
"        return new User(securityIdentity);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:114
#, no-wrap
msgid "    public static class User {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:116
#, no-wrap
msgid "        private final String userName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:120
#, no-wrap
msgid ""
"        User(SecurityIdentity securityIdentity) {\n"
"            this.userName = securityIdentity.getPrincipal().getName();\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:126
#, no-wrap
msgid ""
"        public String getUserName() {\n"
"            return userName;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:129
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr "`/api/admin` エンドポイントのソースコードも非常にシンプルです。ここでの主な違いは、 `admin` ロールで付与されたユーザーだけがエンドポイントにアクセスできるように `@RolesAllowed` アノテーションを使用していることです:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:139
#, no-wrap
msgid ""
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:142
#, no-wrap
msgid ""
"@Path(\"/api/admin\")\n"
"public class AdminResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:150
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String admin() {\n"
"        return \"granted\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:153
msgid "Injection of the `SecurityIdentity` is supported in both `@RequestScoped` and `@ApplicationScoped` contexts."
msgstr "`SecurityIdentity` のインジェクションは、 `@RequestScoped` と `@ApplicationScoped` の両方のコンテキストでサポートされています。"

#. type: Title ===
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:154
#, no-wrap
msgid "Configure the application"
msgstr "アプリケーションの設定"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:163
#, no-wrap
msgid ""
"%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.client-id=backend-service\n"
"quarkus.oidc.credentials.secret=secret\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:166
#, no-wrap
msgid ""
"# Tell Dev Services for Keycloak to import the realm file\n"
"# This property is not effective when running the application in JVM or Native modes\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:168
#, no-wrap
msgid "quarkus.keycloak.devservices.realm-path=quarkus-realm.json\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:181
msgid "Do not start the Keycloak server when you run the application in a dev mode - `Dev Services for Keycloak` will launch a container. See <<keycloak-dev-mode, Running the Application in Dev mode>> section below for more information. Make sure to put the {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] on the classpath (`target/classes` directory) so that it gets imported automatically when running in dev mode - unless you have already built a {quickstarts-tree-url}/security-openid-connect-quickstart[complete solution] in which case this realm file will be added to the classpath during the build."
msgstr "アプリケーションを開発モードで実行しているときは、Keycloak サーバーを起動しないでください。`Dev Services for Keycloak` はコンテナーを起動します。詳細については、以下の <<keycloak-dev-mode, Running the Application in Dev mode>> セクションを参照してください。 {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[レルム設定ファイル] をクラスパス (`target/classes` ディレクトリー) に配置して、開発モードで実行しているときに自動的にインポートされるようにします (すでに {quickstarts-tree-url}/security-openid-connect-quickstart[完全なソリューション] をビルドしている場合を除く (このレルムファイルはビルド時にクラスパスに追加されます))。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:183
msgid "To start a Keycloak Server you can use Docker and just run the following command:"
msgstr "Keycloak サーバーを起動するにはDockerを使用し、以下のコマンドを実行するだけです。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:187
#, no-wrap
msgid "docker run --name keycloak -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin -p 8180:8080 quay.io/keycloak/keycloak:{keycloak.version} start-dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:190
msgid "where `keycloak.version` should be set to `17.0.0` or higher."
msgstr "ここで、`keycloak.version` は `17.0.0` 以上に設定する必要があります。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:192
msgid "You should be able to access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr "http://localhost:8180[localhost:8180] で Keycloak サーバーにアクセスできるはずです。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:194
msgid "Log in as the `admin` user to access the Keycloak Administration Console. Username should be `admin` and password `admin`."
msgstr "Keycloak 管理コンソールにアクセスするには、 `admin` ユーザーとしてログインしてください。ユーザー名は `admin` 、パスワードは `admin` です。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:196
msgid "Import the {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm. For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "新しいレルムを作成するには、 {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[レルム設定ファイル] をインポートします。 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[新しいレルムを作成する] 方法について詳しくはKeycloakのドキュメントを参照してください。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:200
msgid "If you want to use the Keycloak Admin Client to configure your server from your application you need to include the either `quarkus-keycloak-admin-client` or the `quarkus-keycloak-admin-client-reactive` (if the application uses `quarkus-rest-client-reactive`) extension.  See the xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client] guide for more information."
msgstr "Keycloak Admin Clientを使用して、アプリケーションからサーバーを設定したい場合は、`quarkus-keycloak-admin-client` エクステンションまたは `quarkus-keycloak-admin-client-reactive` エクステンション (アプリケーションが `quarkus-rest-client-reactive` を使用する場合) のどちらかを含める必要があります。詳しくは xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client] ガイドをご覧ください。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:205
msgid "To run the application in a dev mode, use:"
msgstr "アプリケーションを開発モードで実行するには、次を使用します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:209
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] will launch a Keycloak container and import a `quarkus-realm.json`."
msgstr "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] は、Keycloak コンテナーを起動し、`quarkus-realm.json` をインポートします。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:211
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev[/q/dev] and click on a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr "http://localhost:8080/q/dev[/q/dev] で入手可能な xref:dev-ui.adoc[Dev UI] を開き、`OpenID Connect` `Dev UI` の `Provider: Keycloak` リンクをクリックします。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:213
msgid "You will be asked to log in into a `Single Page Application` provided by `OpenID Connect Dev UI`:"
msgstr "`OpenID Connect Dev UI` が提供する `Single Page Application` へのログインを求められます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:215
msgid "Login as `alice` (password: `alice`) who has a `user` role"
msgstr "`user` のロールを持つ `alice` (パスワード: `alice`) としてログインします"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:216
msgid "accessing `/api/admin` will return `403`"
msgstr "`/api/admin` にアクセスすると、`403` が返されます"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:217
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:220
msgid "accessing `/api/users/me` will return `200`"
msgstr "`/api/users/me` にアクセスすると、`200` が返されます"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:218
msgid "Logout and login as `admin` (password: `admin`) who has both `admin` and `user` roles"
msgstr "ログアウトし、`admin` と `user` ロールの両方を持つ `admin` (パスワード: `admin`) としててログインします"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:219
msgid "accessing `/api/admin` will return `200`"
msgstr "`/api/admin` にアクセスすると、`200` が返されます"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:224
msgid "When you're done playing with the `dev` mode\" you can run it as a standard Java application."
msgstr "「`dev` モード」で遊び終わったら、標準のJavaアプリケーションとして実行することができます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:226
msgid "First compile it:"
msgstr "まずコンパイルします。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:230
msgid "Then run it:"
msgstr "次に、以下を実行してください。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:234
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:239
msgid "This same demo can be compiled into native code: no modifications required."
msgstr "同じデモをネイティブコードにコンパイルすることができます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:243
msgid "This implies that you no longer need to install a JVM on your production environment, as the runtime technology is included in the produced binary, and optimized to run with minimal resource overhead."
msgstr "これは、生成されたバイナリーにランタイム技術が含まれており、最小限のリソースオーバーヘッドで実行できるように最適化されているため、本番環境にJVMをインストールする必要がないことを意味します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:246
msgid "Compilation will take a bit longer, so this step is disabled by default; let's build again by enabling the `native` profile:"
msgstr "コンパイルには少し時間がかかるので、このステップはデフォルトで無効になっています。 `native` プロファイルを有効にして再度ビルドしてみましょう。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:250
msgid "After getting a cup of coffee, you'll be able to run this binary directly:"
msgstr "コーヒーを飲み終わると、このバイナリーは以下のように直接実行出来るようになります:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:254
#, no-wrap
msgid "./target/security-openid-connect-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:256
#, no-wrap
msgid "Test the application"
msgstr "アプリケーションのテスト"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:259
msgid "See <<keycloak-dev-mode, Running the Application in Dev mode>> section above about testing your application in a dev mode."
msgstr "開発モードでのアプリケーションのテストについては、上記の <<keycloak-dev-mode, 開発モードでのアプリケーションの実行>> セクションを参照してください。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:261
msgid "You can test the application launched in JVM or Native modes with `curl`."
msgstr "`curl` を使用して、JVM またはネイティブモードで起動したアプリケーションをテストできます。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:273
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=alice&password=alice&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:276
msgid "The example above obtains an access token for user `alice`."
msgstr "上記の例では、ユーザー `alice` のアクセストークンを取得しています。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:280
msgid "Any user is allowed to access the `http://localhost:8080/api/users/me` endpoint which basically returns a JSON payload with details about the user."
msgstr "どのユーザーでも `http://localhost:8080/api/users/me` エンドポイントで、ユーザーに関する詳細情報を含む JSON ペイロードを取得することが出来ます。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:286
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"  http://localhost:8080/api/users/me \\\n"
"  -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:291
#, no-wrap
msgid ""
"The `http://localhost:8080/api/admin` endpoint can only be accessed by users with the `admin` role. If you try to access this endpoint with the\n"
" previously issued access token, you should get a `403` response\n"
" from the server.\n"
msgstr "`http://localhost:8080/api/admin` エンドポイントは、 `admin` ロールを持つユーザーのみがアクセスできます。以前に発行されたアクセストークンを使用してこのエンドポイントにアクセスしようとすると、サーバーから `403` 応答が返ってくるはずです。\n"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:297
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"   http://localhost:8080/api/admin \\\n"
"   -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:300
msgid "In order to access the admin endpoint you should obtain a token for the `admin` user:"
msgstr "admin エンドポイントにアクセスするには、 `admin` ユーザーのトークンを取得する必要があります。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:309
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=admin&password=admin&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:313
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:319
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "https://www.keycloak.org/documentation.html[Keycloak Documentation]"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:320
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:321
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:322
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"
msgstr "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:323
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:324
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "xref:security-jwt-build.adoc[JSONウェブトークン (JWT) のビルド、署名、暗号化]"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:325
msgid "xref:security-overview-concept.adoc#oidc-jwt-oauth2-comparison[Summary of Quarkus OIDC, JWT and OAuth2 features]"
msgstr "xref:security.adoc#oidc-jwt-oauth2-comparison[Quarkus OIDC、 JWT および OAuth2 機能のサマリー]"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-protect-service-application-using-oidc-bearer-authentication-tutorial.adoc:326
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Adminクライアント]"
