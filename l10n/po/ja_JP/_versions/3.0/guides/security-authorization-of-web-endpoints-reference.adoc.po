msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Title =
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:7
#, no-wrap
msgid "Authorization of Web Endpoints"
msgstr "ウェブエンドポイントの認可"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:13
msgid "Quarkus has an integrated pluggable web security layer. If security is enabled all HTTP requests will have a permission check performed to make sure they are allowed to continue."
msgstr "Quarkusには、プラグイン可能なウェブセキュリティーレイヤーが統合されています。セキュリティーが有効になっている場合、すべてのHTTPリクエストは、処理の継続が許可されているかどうかを確認するためのパーミッションチェックが実行されます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:20
msgid "Configuration authorization checks are executed before any annotation-based authorization check is done, so both checks have to pass for a request to be allowed. This means you cannot use `@PermitAll` to open up a path if the path has been blocked using `quarkus.http.auth.` configuration. If you are using JAX-RS you may want to consider using the `quarkus.security.jaxrs.deny-unannotated-endpoints` or `quarkus.security.jaxrs.default-roles-allowed` to set default security requirements instead of HTTP path level matching, as these properties can be overridden by annotations on an individual endpoint."
msgstr "設定の認可チェックは、アノテーションベースの認可チェックが行われる前に実行されるため、リクエストを許可するには両方のチェックが通る必要があります。つまり、 `quarkus.http.auth.` の設定でパスがブロックされている場合、 `@PermitAll` を使ってパスを開くことはできません。JAX-RSを使用している場合は、HTTPパスレベルのマッチングではなく、 `quarkus.security.jaxrs.deny-unannotated-endpoints` または `quarkus.security.jaxrs.default-roles-allowed` を使用してデフォルトのセキュリティ要件を設定することを検討するとよいでしょう。これらのプロパティは、個々のエンドポイント上のアノテーションによって上書きすることができるからです。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:24
msgid "Authorization is based on user roles that are provided by the security provider.  To customize these roles, a `SecurityIdentityAugmentor` can be created, see xref:security-customization.adoc#security-identity-customization[Security Identity Customization]."
msgstr "認可は、セキュリティプロバイダが提供するユーザーロールに基づいて行われます。  これらのロールをカスタマイズするために、 `SecurityIdentityAugmentor` を作成することができます。xref:security-customization.adoc#security-identity-customization [Security Identity Customization] を参照してください。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:25
#, no-wrap
msgid "Authorization using Configuration"
msgstr "設定を利用した認可"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:29
msgid "The default implementation allows you to define permissions using config in `application.properties`. An example config is shown below:"
msgstr "デフォルトの実装では、 `application.properties` の 設定を使用してパーミッションを定義することができます。以下に config の例を示します。 :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:33
#, no-wrap
msgid "quarkus.http.auth.policy.role-policy1.roles-allowed=user,admin                      <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:36
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/roles-secured/*,/other/*,/api/*          <2>\n"
"quarkus.http.auth.permission.roles1.policy=role-policy1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:40
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*                                <3>\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:43
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/forbidden                                 <4>\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:45
msgid "This defines a role based policy that allows users with the `user` and `admin` roles. This is referenced by later rules."
msgstr "これは、 `user` と `admin` のロールを持つユーザーを許可するロールベースのポリシーを定義します。これは後のルールで参照されます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:46
msgid "This is a permission set that references the previously defined policy. `roles1` is an arbitrary name, you can call the permission sets whatever you want."
msgstr "これは以前に定義されたポリシーを参照するパーミッションセットです。 `roles1` は任意の名前ですので、好きなようにパーミッションセットを呼び出すことができます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:47
msgid "This permission references the default `permit` built-in policy to allow `GET` methods to `/public`. This is actually a no-op in this example, as this request would have been allowed anyway."
msgstr "このパーミッションはデフォルトの `permit` ビルトインポリシーを参照して、 `/public` への `GET` メソッドを許可します。この例では、このリクエストはいずれにせよ許可されているはずなので、これは実際には no-op です。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:48
msgid "This permission references the built-in `deny` policy for `/forbidden`. This is an exact path match as it does not end with `*`."
msgstr "このパーミッションは `/forbidden` に対する組み込みの `deny` ポリシーを参照します。これは `*` で終わらないので、完全なパスマッチとなります。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:52
msgid "Permissions are defined in config using permission sets. These are arbitrarily named permission grouping. Each permission set must specify a policy that is used to control access. There are three built-in policies: `deny`, `permit` and `authenticated`, which respectively permits all, denies all and only allows authenticated users."
msgstr "パーミッションは、パーミッションセットを使ってコンフィグで定義されます。これらは任意の名前のパーミッション・グルーピングです。各パーミッションセットには、アクセスを制御するためのポリシーを指定する必要があります。組み込みのポリシーには， `deny` ， `permit` ， `authenticated` の3種類があり，それぞれ，すべてを許可，すべてを拒否，認証されたユーザのみを許可 となります。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:55
msgid "It is also possible to define role based policies, as shown in the example. These policies will only allow users with the specified roles to access the resources."
msgstr "また、例に示すように、ロールベースのポリシーを定義することも可能です。これらのポリシーでは、指定されたロールを持つユーザーにのみ、リソースへのアクセスを許可します。"

#. type: Title ===
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:56
#, no-wrap
msgid "Matching on paths, methods"
msgstr "パス、メソッドでのマッチング"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:60
msgid "Permission sets can also specify paths and methods as a comma separated list. If a path ends with `*` then it is considered to be a wildcard match and will match all sub paths, otherwise it is an exact match and will only match that specific path:"
msgstr "パーミッションセットでは、パスとメソッドをカンマ区切りのリストで指定することもできます。パスの末尾が `*` である場合はワイルドカードマッチとみなされ、すべてのサブパスにマッチしますが、そうでない場合は完全一致となり、特定のパスにのみマッチします。 :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:66
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*,/css/*,/js/*,/robots.txt\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:68
#, no-wrap
msgid "Matching path but not method"
msgstr "パスはマッチするがメソッドはマッチしない場合"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:72
msgid "If a request would match one or more permission sets based on the path, but does not match any due to method requirements then the request is rejected."
msgstr "リクエストがパスに基づいて1つ以上のパーミッションセットにマッチするが、 メソッドの要件によりマッチしない場合、そのリクエストは拒否されます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:75
msgid "Given the above permission set, `GET /public/foo` would match both the path and method and thus be allowed, whereas `POST /public/foo` would match the path but not the method and would thus be rejected."
msgstr "上記のパーミッションセットの場合、`GET /public/foo` はパスとメソッドの両方にマッチするので許可されますが、`POST /public/foo` はパスにマッチしますがメソッドにはマッチしないので拒否されます。"

#. type: Title ===
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:76
#, no-wrap
msgid "Matching multiple paths: longest path wins"
msgstr "複数のパスのマッチング:一番長いパスが勝ちます"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:80
msgid "Matching is always done on a longest path wins basis, less specific permission sets are not considered if a more specific one has been matched:"
msgstr "マッチングは常にロンゲストパス に基づいて行われ、より具体的なパーミッションセットがマッチした場合、それより具体的でないパーミッションセットは考慮されません。:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:86
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:123
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:89
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/forbidden-folder/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:94
msgid "Given the above permission set, `GET /public/forbidden-folder/foo` would match both permission sets' paths, but because it matches the `deny1` permission set's path on a longer match, `deny1` will be chosen and the request will be rejected."
msgstr "上記のパーミッションセットを考えると、`GET /public/forbidden-folder/foo` は両方のパーミッションセットのパスにマッチしますが、より長いマッチで `deny1` パーミッションセットのパスにマッチするので、 `deny1` が選択されてリクエストは拒否されます。"

#. type: delimited block =
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:99
msgid "Subpath permissions always win against the root path permissions as explained above in the `deny1` versus `permit1` permission example.  Here is another example showing a subpath permission allowing a public resource access with the root path permission requiring the authorization:"
msgstr "サブパス パーミッションは、上述の `deny1` 対 `permit1` パーミッションの例で説明したように、ルートパス パーミッションに対して常に勝利します。以下は、サブパス権限で公開リソースへのアクセスを許可し、ルートパス権限で認可を要求する例です。 :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:105
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy.roles-allowed=user\n"
"quarkus.http.auth.permission.roles.paths=/api/*\n"
"quarkus.http.auth.permission.roles.policy=user-policy\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:108
#, no-wrap
msgid ""
"quarkus.http.auth.permission.public.paths=/api/noauth/*\n"
"quarkus.http.auth.permission.public.policy=permit\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:111
#, no-wrap
msgid "Matching multiple paths: most specific method wins"
msgstr "複数のパスのマッチング:一番具体的なパスが勝ちます"

#. type: delimited block =
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:117
msgid "If a path is registered with multiple permission sets then any permission sets that specify an HTTP method will take precedence and permissions sets without a method will not be considered (assuming of course the method matches). In this instance, the permission sets without methods will only come into effect if the request method does not match any of the sets with method permissions."
msgstr "パスが複数の許可セットで登録されている場合、HTTPメソッドを指定する許可セットが優先され、メソッドを持たない許可セットは考慮されません(もちろん、メソッドが一致することを前提としています)。この例では、メソッドを持たないパーミッションセットは、 リクエストメソッドがメソッドパーミッションセットのいずれにもマッチしない場合にのみ 有効になります。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:126
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:132
msgid "Given the above permission set, `GET /public/foo` would match both permission sets' paths, but because it matches the `permit1` permission set's explicit method, `permit1` will be chosen and the request will be accepted. `PUT /public/foo` on the other hand, will not match the method permissions of `permit1` and so `deny1` will be activated and reject the request."
msgstr "上記のパーミッションセットの場合、 `GET /public/foo` は両方のパーミッションセットのパスにマッチしますが、 `permit1` パーミッションセットの明示的なメソッドにマッチするので、 `permit1` が選択されてリクエストが受理されることになります。一方、 `PUT /public/foo` は `permit1` のメソッドパーミッションにマッチしないので、 `deny1` が有効になり、リクエストが拒否されます。"

#. type: Title ===
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:133
#, no-wrap
msgid "Matching multiple paths and methods: both win"
msgstr "複数のパスのマッチング:一番長いパスが勝ちます"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:138
msgid "If multiple permission sets specify the same path and method (or multiple have no method) then both permissions have to allow access for the request to proceed. Note that for this to happen both have to either have specified the method, or have no method, method specific matches take precedence as stated above:"
msgstr "複数のパーミッションセットが同じパスとメソッドを指定している場合（または複数のパーミッションがメソッドを持たない場合）、リクエストを進めるためには両方のパーミッションがアクセスを許可しなければなりません。これを実現するためには、両方がメソッドを指定しているか、メソッドを持たないかのいずれかでなければならないことに注意してください、メソッド固有のマッチは上記のように優先されます。 :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:143
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy1.roles-allowed=user\n"
"quarkus.http.auth.policy.admin-policy1.roles-allowed=admin\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:146
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/api/*,/restricted/*\n"
"quarkus.http.auth.permission.roles1.policy=user-policy1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:149
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles2.paths=/api/*,/admin/*\n"
"quarkus.http.auth.permission.roles2.policy=admin-policy1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:153
msgid "Given the above permission set, `GET /api/foo` would match both permission sets' paths, so would require both the `user` and `admin` roles."
msgstr "上記のパーミッションセットを考えると、 `GET /api/foo` は両方のパーミッションセットのパスにマッチするので、 `user` と `admin` の両方のロールが必要になります。"

#. type: Title ===
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:154
#, no-wrap
msgid "Configuration Properties to Deny access"
msgstr "アクセスを拒否する設定プロパティー"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:157
msgid "There are three configuration settings that alter the RBAC Deny behavior:"
msgstr "RBACのDeny動作を変更する設定は3つあります。 :"

#. type: Labeled list
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:158
#, no-wrap
msgid "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"
msgstr "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:161
msgid "If set to true, the access will be denied for all JAX-RS endpoints by default, so if a JAX-RS endpoint does not have any security annotations then it will default to `@DenyAll` behaviour. This is useful to ensure you cannot accidentally expose an endpoint that is supposed to be secured. Defaults to `false`."
msgstr "この値をtrue に設定すると、デフォルトですべての JAX-RS エンドポイントに対してアクセスが拒否されます。したがって、JAX-RS エンドポイントがセキュリティアノテーションを持っていない場合、デフォルトで `@DenyAll` の動作になります。これは、セキュリティで保護されているはずのエンドポイントを誤って公開してしまわないようにするために有用です。デフォルトは `false` です。"

#. type: Labeled list
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:162
#, no-wrap
msgid "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"
msgstr "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:165
msgid "Defines the default role requirements for unannotated endpoints. The role '**' is a special role that means any authenticated user. This cannot be combined with `deny-unannotated-endpoints`, as the deny will take effect instead."
msgstr "アノテーションされていないエンドポイントのデフォルトのロール要件を定義します。ロール「**」は、認証された任意のユーザを意味する特別なロールです。これは、代わりにdenyが有効になるため、 `deny-unannotated-endpoints` と組み合わせることはできません。"

#. type: Labeled list
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:166
#, no-wrap
msgid "`quarkus.security.deny-unannotated-members=true|false`"
msgstr "`quarkus.security.deny-unannotated-members=true|false`"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:170
msgid "if set to true, the access will be denied to all CDI methods and JAX-RS endpoints that do not have security annotations but are defined in classes that contain methods with security annotations. Defaults to `false`."
msgstr "この値をtrue に設定すると、セキュリティアノテーションを持つメソッドを含むクラスで定義されているものの、セキュリティアノテーションを持たないすべての CDI メソッドと JAX-RS エンドポイントへのアクセスが拒否されるようになります。デフォルトは `false` です。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:174
msgid "Permissions can be disabled at build time with an `enabled` property for each declared permission, for example:"
msgstr "パーミッションは、宣言されたパーミッションごとの `enabled` プロパティを使って、ビルド時に無効にすることができます。:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:181
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.enabled=false\n"
"quarkus.http.auth.permission.permit1.paths=/public/*,/css/*,/js/*,/robots.txt\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:184
msgid "and enabled at runtime with a system property or environment variable, for example: `-Dquarkus.http.auth.permission.permit1.enabled=true`."
msgstr "また、実行時にシステムプロパティや環境変数で有効にすることもできます。例えばこのような形です。 `-Dquarkus.http.auth.permission.permit1.enabled=true`."

#. type: Title ==
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:185
#, no-wrap
msgid "Permission paths and http root path"
msgstr "パーミッションパスとhttp rootパス"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:188
msgid "The `quarkus.http.root-path` configuration property is used to change the xref:http-reference.adoc#context-path[http endpoint context path]."
msgstr "`quarkus.http.root-path` 設定プロパティは、 link:http-reference.html#context-path[http エンドポイントコンテキストパスを] 変更するために使用されます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:190
msgid "By default, `quarkus.http.root-path` is prepended automatically to configured permission paths then do not use a forward slash, for example:"
msgstr "デフォルトでは、設定されたパーミッションのパスの前に自動的に `quarkus.http.root-path` 、フォワードスラッシュを使用しない場合などです。 :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:194
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:197
msgid "This configuration is equivalent to the following:"
msgstr "この構成は以下に相当します。 :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:201
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=${quarkus.http.root-path}/public/*,${quarkus.http.root-path}/css/*,${quarkus.http.root-path}/js/*,${quarkus.http.root-path}/robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:204
msgid "A leading slash will change how the configured permission path is interpreted. The configured URL will be used as-is, and paths will not be adjusted if the value of `quarkus.http.root-path` is changed. For example:"
msgstr "先頭のスラッシュは、設定されたパーミッションのパスの解釈方法を変更します。設定されたURLはそのまま使用され、 `quarkus.http.root-path` の値が変更されても、パスは調整されません。例えば下記の形です。 :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:208
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=/public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:211
msgid "This configuration will only impact resources served from the fixed/static URL `/public`, which may not match your application resources if `quarkus.http.root-path` has been set to something other than `/`."
msgstr "この設定は、固定/静的URL `/public` から提供されるリソースにのみ影響します。 `quarkus.http.root-path` が `/` 以外に設定されている場合、アプリケーションリソースと一致しない可能性があります。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:213
msgid "See link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus] for more information."
msgstr "詳細については、 link:https://quarkus.io/blog/path-resolution-in-quarkus/[Quarkusのパス解決] を参照してください。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:215
#, no-wrap
msgid "Authorization using Annotations"
msgstr "アノテーションを使った認可"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:222
msgid "Quarkus comes with built-in security to allow for Role-Based Access Control (link:https://en.wikipedia.org/wiki/Role-based_access_control[RBAC])  based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints and CDI beans.  An example of an endpoint that makes use of both JAX-RS and Common Security annotations to describe and secure its endpoints is given in <<subject-example>>. Quarkus also provides the `io.quarkus.security.Authenticated` annotation that will permit any authenticated user to access the resource (equivalent to `@RolesAllowed(\"**\")`)."
msgstr "Quarkusには、共通のセキュリティーアノテーション( `@RolesAllowed` , `@DenyAll` , `@PermitAll` )に基づいたロールベースのアクセス制御 link:https://en.wikipedia.org/wiki/Role-based_access_control[(RBAC] )をRESTエンドポイントとCDI Bean上で可能にするためのビルトインセキュリティーが搭載されています。JAX-RSとCommon Securityアノテーションの両方を利用してエンドポイントを記述し、セキュリティーを確保するエンドポイントの例は、 <<subject-example>> に記載されています。Quarkusはまた、認証済みのユーザーがリソースにアクセスすることを許可する `io.quarkus.security.Authenticated` アノテーションも提供しています( `@RolesAllowed(\"**\")` と同等です)。"

#. type: Block title
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:224
#, no-wrap
msgid "SubjectExposingResource Example"
msgstr "SubjectExposingResourceの例"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:228
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:291
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:236
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:299
#, no-wrap
msgid ""
"import jakarta.annotation.security.DenyAll;\n"
"import jakarta.annotation.security.PermitAll;\n"
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.core.Context;\n"
"import jakarta.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:239
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:302
#, no-wrap
msgid ""
"@Path(\"subject\")\n"
"public class SubjectExposingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:248
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"Tester\") <1>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <2>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:257
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"unsecured\")\n"
"    @PermitAll <3>\n"
"    public String getSubjectUnsecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <4>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:267
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"denied\")\n"
"    @DenyAll <5>\n"
"    public String getSubjectDenied(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:269
msgid "This `/subject/secured` endpoint requires an authenticated user that has been granted the role \"Tester\" through the use of the `@RolesAllowed(\"Tester\")` annotation."
msgstr "この `/subject/secured` エンドポイントは、 `@RolesAllowed(\"Tester\")` アノテーションを使用して\"Tester\"というロールを付与された認証済みユーザーが必要です。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:270
msgid "The endpoint obtains the user principal from the JAX-RS `SecurityContext`. This will be non-null for a secured endpoint."
msgstr "エンドポイントは、JAX-RS `SecurityContext` からユーザー・プリンシパルを取得します。これは、保護されたエンドポイントの場合は非 null になります。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:271
msgid "The `/subject/unsecured` endpoint allows for unauthenticated access by specifying the `@PermitAll` annotation."
msgstr "`/subject/unsecured` エンドポイントでは、 `@PermitAll` アノテーションを指定することで、認証されていないアクセスが可能になります。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:272
msgid "This call to obtain the user principal will return null if the caller is unauthenticated, non-null if the caller is authenticated."
msgstr "ユーザープリンシパルを取得するためのこの呼び出しは、呼び出し元が認証されていない場合はnullを返し、呼び出し元が認証されている場合は非nullを返します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:273
msgid "The `/subject/denied` endpoint disallows any access regardless of whether the call is authenticated by specifying the `@DenyAll` annotation."
msgstr "`/subject/denied` エンドポイントは、 `@DenyAll` アノテーションを指定することで、呼出が認証されているかどうかにかかわらず、あらゆるアクセスを禁止します。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:286
#, no-wrap
msgid ""
"admin=Administrator\n"
"tester.group=Software\n"
"tester.role=Tester\n"
"%prod.secured=User\n"
"%dev.secured=**\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:311
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"admin\")\n"
"    @RolesAllowed(\"${admin}\") <1>\n"
"    public String getSubjectSecuredAdmin(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:320
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"software-tester\")\n"
"    @RolesAllowed(\"${tester.group}-${tester.role}\") <2>\n"
"    public String getSubjectSoftwareTester(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:329
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"user\")\n"
"    @RolesAllowed(\"${customer:User}\") <3>\n"
"    public String getSubjectUser(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:339
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"${secured}\") <4>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:345
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-authorization-of-web-endpoints-reference.adoc:347
msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
msgstr "xref:security-overview-concept.adoc[Quarkus Security 概要]"
