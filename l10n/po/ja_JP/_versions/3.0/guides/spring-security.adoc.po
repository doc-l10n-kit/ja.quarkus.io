msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.0/guides/spring-security.adoc:6
#, no-wrap
msgid "Quarkus Extension for Spring Security API"
msgstr "Spring Security API の Quarkus エクステンション"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:12
msgid "While users are encouraged to use xref:security-overview-concept.adoc#standard-security-annotations[Java standard annotations for security authorizations], Quarkus provides a compatibility layer for Spring Security in the form of the `spring-security` extension."
msgstr "ユーザーには xref:security-overview-concept.adoc#standard-security-annotations[セキュリティ認可のためのJava 標準アノテーション] を使用することをお勧めしますが、Quarkus は `spring-security` エクステンション形式で Spring Security の互換性レイヤーを提供します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:14
msgid "This guide explains how a Quarkus application can leverage the well known Spring Security annotations to define authorizations on RESTful services using roles."
msgstr "このガイドでは、Quarkus アプリケーションがよく知られている Spring Security アノテーションを利用して、ロールを使用する RESTful サービスの承認を定義する方法について説明します。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:15
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:19
msgid "Some familiarity with the Spring Web extension"
msgstr "Spring Web エクステンションにある程度精通している"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:20
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:24
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションの指示に従って、段階的にアプリケーションを作成していくことをお勧めします。ただし、完成した例にすぐにアクセスすることもできます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:26
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitリポジトリをクローンする： `git clone {quickstarts-clone-url}` 、または{quickstarts-archive-url}[archive] をダウンロードする。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:28
msgid "The solution is located in the `spring-security-quickstart` {quickstarts-tree-url}/spring-security-quickstart[directory]."
msgstr "ソリューションは、`spring-security-quickstart` {quickstarts-tree-url}/spring-security-quickstart[directory] にあります。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:29
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:32
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:38
msgid "This command generates a project which imports the `spring-web`, `spring-security` and `security-properties-file` extensions."
msgstr "このコマンドは、`spring-web`、`spring-security`、および `security-properties-file` エクステンションをインポートするプロジェクトを生成します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:41
msgid "If you already have your Quarkus project configured, you can add the `spring-web`, `spring-security` and `security-properties-file` extensions to your project by running the following command in your project base directory:"
msgstr "すでに Quarkus プロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `spring-web`、`spring-security` および `security-properties-file` エクステンションを追加することができます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:46
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_versions/3.0/guides/spring-security.adoc:48
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:66
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-web</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-security</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elytron-security-properties-file</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.0/guides/spring-security.adoc:69
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:75
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-spring-web\")\n"
"implementation(\"io.quarkus:quarkus-spring-security\")\n"
"implementation(\"io.quarkus:quarkus-elytron-security-properties-file\")\n"
"implementation(\"io.quarkus:quarkus-resteasy-reactive-jackson\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:78
msgid "For more information about `security-properties-file`, you can check out the guide of the xref:security-properties.adoc[quarkus-elytron-security-properties-file] extension."
msgstr "`security-properties-file` の詳細については、xref:security-properties.adoc[quarkus-elytron-security-properties-file] エクステンションのガイドを確認してください。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:79
#, no-wrap
msgid "GreetingController"
msgstr "GreetingController"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:83
msgid "The Quarkus Maven plugin automatically generated a controller with the Spring Web annotations to define our REST endpoint (instead of the JAX-RS ones used by default).  First create a `src/main/java/org/acme/spring/web/GreetingController.java`, a controller with the Spring Web annotations to define our REST endpoint, as follows:"
msgstr "Quarkus Maven プラグインは、REST エンドポイントを定義するために Spring Web アノテーションを使用してコントローラーを自動的に生成しました (デフォルトで使用される JAX-RS エンドポイントの代わりに)。まず、以下のように、REST エンドポイントを定義する Spring Web アノテーションを持つコントローラーである `src/main/java/org/acme/spring/web/GreetingController.java` を作成します。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:87
#: upstream/_versions/3.0/guides/spring-security.adoc:110
#: upstream/_versions/3.0/guides/spring-security.adoc:150
#: upstream/_versions/3.0/guides/spring-security.adoc:189
#, no-wrap
msgid "package org.acme.spring.security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:91
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:95
#: upstream/_versions/3.0/guides/spring-security.adoc:159
#, no-wrap
msgid ""
"@RestController\n"
"@RequestMapping(\"/greeting\")\n"
"public class GreetingController {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:101
#, no-wrap
msgid ""
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:103
#: upstream/_versions/3.0/guides/spring-security.adoc:184
#, no-wrap
msgid "GreetingControllerTest"
msgstr "GreetingControllerTest"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:106
msgid "Note that a test for the controller has been created as well:"
msgstr "コントローラーのテストも作成されていることに注意してください。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:113
#: upstream/_versions/3.0/guides/spring-security.adoc:192
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:116
#: upstream/_versions/3.0/guides/spring-security.adoc:195
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:119
#: upstream/_versions/3.0/guides/spring-security.adoc:198
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingControllerTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:128
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:130
#: upstream/_versions/3.0/guides/spring-security.adoc:217
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:132
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:135
msgid "Run the application with:"
msgstr "アプリケーションを実行します:"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:139
msgid "Open your browser to http://localhost:8080/greeting."
msgstr "ブラウザで http://localhost:8080/greeting を開きます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:141
msgid "The result should be: `{\"message\": \"hello\"}`."
msgstr "結果は `{\"message\": \"hello\"}` のようになります。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:142
#, no-wrap
msgid "Modify the controller to secure the `hello` method"
msgstr "コントローラーを変更して、`hello` メソッドを保護します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:146
msgid "In order to restrict access to the `hello` method to users with certain roles, the `@Secured` annotation will be utilized.  The updated controller will be:"
msgstr "`hello` メソッドへのアクセスを特定のロールを持つユーザーに制限するために、`@Secured` アノテーションが使用されます。更新されたコントローラーは次のようになります。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:155
#, no-wrap
msgid ""
"import org.springframework.security.access.annotation.Secured;\n"
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:166
#, no-wrap
msgid ""
"    @Secured(\"admin\")\n"
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:171
msgid "The easiest way to set up users and roles for our example is to use the `security-properties-file` extension. This extension essentially allows users and roles to be defined in the main Quarkus configuration file - `application.properties`.  For more information about this extension check xref:security-properties.adoc[the associated guide].  An example configuration would be the following:"
msgstr "この例でユーザーとロールを設定する最も簡単な方法は、`security-properties-file` エクステンションを使用することです。このエクステンションにより、基本的に、ユーザーとロールをメインの Quarkus 設定ファイル (`application.properties`) で定義できます。このエクステンションの詳細については、xref:security-properties.adoc[the associated guide] を確認してください。設定例は以下のとおりです。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:180
#, no-wrap
msgid ""
"quarkus.security.users.embedded.enabled=true\n"
"quarkus.security.users.embedded.plain-text=true\n"
"quarkus.security.users.embedded.users.scott=jb0ss\n"
"quarkus.security.users.embedded.roles.scott=admin,user\n"
"quarkus.security.users.embedded.users.stuart=test\n"
"quarkus.security.users.embedded.roles.stuart=user\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:183
msgid "Note that the test also needs to be updated. It could look like:"
msgstr "テストも更新する必要があることに注意してください。以下のようになります。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:206
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpointForbidden() {\n"
"        given().auth().preemptive().basic(\"stuart\", \"test\")\n"
"                .when().get(\"/greeting\")\n"
"                .then()\n"
"                .statusCode(403);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:215
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given().auth().preemptive().basic(\"scott\", \"jb0ss\")\n"
"                .when().get(\"/greeting\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:219
#, no-wrap
msgid "Test the changes"
msgstr "変更をテストする"

#. type: Labeled list
#: upstream/_versions/3.0/guides/spring-security.adoc:221
#, no-wrap
msgid "Access allowed"
msgstr "アクセスが許可されました"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:224
msgid "Open your browser again to http://localhost:8080/greeting and introduce `scott` and `jb0ss` in the dialog displayed."
msgstr "ブラウザーを http://localhost:8080/greeting で再度開いて、表示されたダイアログに `scott` と `jb0ss` を導入します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:226
msgid "The word `hello` should be displayed."
msgstr "`hello` という単語が表示されます。"

#. type: Labeled list
#: upstream/_versions/3.0/guides/spring-security.adoc:227
#, no-wrap
msgid "Access forbidden"
msgstr "アクセス禁止"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:230
msgid "Open your browser again to http://localhost:8080/greeting and let empty the dialog displayed."
msgstr "ブラウザーを http://localhost:8080/greeting で再度開いて、表示されたダイアログを空にします。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:232
msgid "The result should be:"
msgstr "結果は次のようになります。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:238
#, no-wrap
msgid ""
"Access to localhost was denied\n"
"You don't have authorization to view this page.\n"
"HTTP ERROR 403\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:240
#, no-wrap
msgid "Run the application as a native executable"
msgstr "アプリケーションをネイティブ実行可能ファイルとして実行する"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:243
msgid "You can generate the native executable with:"
msgstr "以下を使用して、ネイティブ実行可能ファイルを生成することができます。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:246
#, no-wrap
msgid "Supported Spring Security functionalities"
msgstr "サポートされている Spring Security 機能"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:250
msgid "Quarkus currently only supports a subset of the functionalities that Spring Security provides with more features being planned. More specifically, Quarkus supports the security related features of role-based authorization semantics (think of `@Secured` instead of `@RolesAllowed`)."
msgstr "Quarkus は現在、Spring Security が提供する機能のサブセットのみをサポートしていますが、今後はさらに多くの機能のサポートが計画されています。より具体的には、Quarkus は、ロールベースの承認セマンティクスのセキュリティー関連機能をサポートします (`@RolesAllowed` ではなく `@Secured` を考えてください)。"

#. type: Title ===
#: upstream/_versions/3.0/guides/spring-security.adoc:251
#, no-wrap
msgid "Annotations"
msgstr "アノテーション"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:254
msgid "The table below summarizes the supported annotations:"
msgstr "下の表は、サポートされているアノテーションをまとめたものです。"

#. type: Block title
#: upstream/_versions/3.0/guides/spring-security.adoc:255
#, no-wrap
msgid "Supported Spring Security annotations"
msgstr "サポートされているSpring Securityアノテーション"

#. type: Table
#: upstream/_versions/3.0/guides/spring-security.adoc:257
#, no-wrap
msgid "Nam"
msgstr "Nam"

#. type: Table
#: upstream/_versions/3.0/guides/spring-security.adoc:259
#: upstream/_versions/3.0/guides/spring-security.adoc:425
#, no-wrap
msgid "Comments"
msgstr "Comments"

#. type: Table
#: upstream/_versions/3.0/guides/spring-security.adoc:260
#, no-wrap
msgid "@Secured"
msgstr "@Secured"

#. type: Title ====
#: upstream/_versions/3.0/guides/spring-security.adoc:263
#: upstream/_versions/3.0/guides/spring-security.adoc:267
#, no-wrap
msgid "@PreAuthorize"
msgstr "@PreAuthorize"

#. type: Table
#: upstream/_versions/3.0/guides/spring-security.adoc:265
#, no-wrap
msgid "See next section for more details"
msgstr "詳細については、次のセクションを参照してください"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:271
msgid "Quarkus provides support for some of the most used features of Spring Security's `@PreAuthorize` annotation.  The expressions that are supported are the following:"
msgstr "Quarkus は、Spring Security の `@PreAuthorize` アノテーションで最もよく使用される機能のいくつかをサポートします。サポートされている式は次のとおりです。"

#. type: Labeled list
#: upstream/_versions/3.0/guides/spring-security.adoc:272
#, no-wrap
msgid "hasRole"
msgstr "hasRole"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:275
msgid "To test if the current user has a specific role, the `hasRole` expression can be used inside `@PreAuthorize`."
msgstr "現在のユーザーが特定のロールを持っているかどうかをテストするには、`hasRole` 式を `@PreAuthorize` 内で使用します。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:277
msgid "Some examples are: `@PreAuthorize(\"hasRole('admin')\")`, `@PreAuthorize(\"hasRole(@roles.USER)\")` where the `roles` is a bean that could be defined like so:"
msgstr "一部の例として、`@PreAuthorize(\"hasRole('admin')\")`、`@PreAuthorize(\"hasRole(@roles.USER)\")` があります。この `roles` は、以下のように定義できる Bean になります。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:281
#, no-wrap
msgid "import org.springframework.stereotype.Component;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:284
#, no-wrap
msgid ""
"@Component\n"
"public class Roles {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:288
#, no-wrap
msgid ""
"    public final String ADMIN = \"admin\";\n"
"    public final String USER = \"user\";\n"
"}\n"
msgstr ""

#. type: Labeled list
#: upstream/_versions/3.0/guides/spring-security.adoc:290
#, no-wrap
msgid "hasAnyRole"
msgstr "hasAnyRole"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:293
msgid "In the same fashion as `hasRole`, users can use `hasAnyRole` to check if the logged-in user has any of the specified roles."
msgstr "`hasRole` と同じように、ユーザーは `hasAnyRole` を使用して、ログインしているユーザーが指定されたロールのいずれかを持っているかどうかを確認できます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:295
msgid "Some examples are: `@PreAuthorize(\"hasAnyRole('admin')\")`, `@PreAuthorize(\"hasAnyRole(@roles.USER, 'view')\")`"
msgstr "一部の例として、`@PreAuthorize(\"hasAnyRole('admin')\")`、`@PreAuthorize(\"hasAnyRole(@roles.USER, 'view')\")` があります。"

#. type: Labeled list
#: upstream/_versions/3.0/guides/spring-security.adoc:296
#, no-wrap
msgid "permitAll"
msgstr "permitAll"

#. type: Labeled list
#: upstream/_versions/3.0/guides/spring-security.adoc:299
#, no-wrap
msgid "denyAll"
msgstr "denyAll"

#. type: Labeled list
#: upstream/_versions/3.0/guides/spring-security.adoc:302
#, no-wrap
msgid "isAnonymous"
msgstr "isAnonymous"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:303
msgid "When annotating a bean method with `@PreAuthorize(\"isAnonymous()\")` the method will only be accessible if the current user is anonymous - i.e. a non logged-in user."
msgstr "Bean メソッドに `@PreAuthorize(\"isAnonymous()\")` のアノテーションを付ける場合、メソッドにアクセスできるのは、現在のユーザーが匿名の場合、つまりログインしていないユーザーの場合のみです。"

#. type: Labeled list
#: upstream/_versions/3.0/guides/spring-security.adoc:304
#, no-wrap
msgid "isAuthenticated"
msgstr "isAuthenticated"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:306
msgid "When annotating a bean method with `@PreAuthorize(\"isAuthenticated()\")` the method will only be accessible if the current user is a logged-in user. Essentially the method is only unavailable for anonymous users."
msgstr "Bean メソッドに `@PreAuthorize(\"isAuthenticated()\")` でアノテーションを付ける場合、現在のユーザーがログインしているユーザーである場合にのみ、メソッドにアクセスできます。基本的に、このメソッドは匿名ユーザーのみが利用できません。"

#. type: Labeled list
#: upstream/_versions/3.0/guides/spring-security.adoc:307
#, no-wrap
msgid "#paramName == authentication.principal.username"
msgstr "#paramName == authentication.principal.username"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:308
msgid "This syntax allows users to check if a parameter (or a field of the parameter) of the secured method is equal to the logged-in username."
msgstr "この構文により、ユーザーは、保護されたメソッドのパラメーター (またはパラメーターのフィールド) がログインしたユーザー名と等しいかどうかを確認できます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:310
msgid "Examples of this use case are:"
msgstr "このユースケースの例は次のとおりです。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:314
#, no-wrap
msgid "public class Person {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:316
#, no-wrap
msgid "    private final String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:320
#, no-wrap
msgid ""
"    public Person(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:325
#, no-wrap
msgid ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:328
#: upstream/_versions/3.0/guides/spring-security.adoc:356
#, no-wrap
msgid ""
"@Component\n"
"public class MyComponent {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:331
#, no-wrap
msgid ""
"    @PreAuthorize(\"#username == authentication.principal.username\") <1>\n"
"    public void doSomething(String username, String other){\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:333
#: upstream/_versions/3.0/guides/spring-security.adoc:397
#: upstream/_versions/3.0/guides/spring-security.adoc:402
#: upstream/_versions/3.0/guides/spring-security.adoc:407
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:336
#, no-wrap
msgid ""
"    @PreAuthorize(\"#person.name == authentication.principal.username\") <2>\n"
"    public void doSomethingElse(Person person){\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:339
#: upstream/_versions/3.0/guides/spring-security.adoc:362
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:341
msgid "`doSomething` can be executed if the current logged-in user is the same as the `username` method parameter"
msgstr "現在ログインしているユーザーが `username` メソッドパラメーターと同じである場合、`doSomething` を実行できます"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:342
msgid "`doSomethingElse` can be executed if the current logged-in user is the same as the `name` field of `person` method parameter"
msgstr "現在ログインしているユーザーが `person` メソッドパラメーターの `name` フィールドと同じである場合、`doSomethingElse` を実行できます"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:344
msgid "the use of `authentication.` is optional, so using `principal.username` has the same result."
msgstr "`authentication.` の使用はオプションであるため、`principal.username` を使用しても同じ結果になります。"

#. type: Labeled list
#: upstream/_versions/3.0/guides/spring-security.adoc:345
#, no-wrap
msgid "#paramName != authentication.principal.username"
msgstr "#paramName != authentication.principal.username"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:346
msgid "This is similar to the previous expression with the difference being that the method parameter must be different from the logged-in username."
msgstr "これは前の式と似ていますが、メソッドパラメーターがログインしているユーザー名とは異なる必要があるという違いがあります。"

#. type: Labeled list
#: upstream/_versions/3.0/guides/spring-security.adoc:347
#, no-wrap
msgid "@beanName.method()"
msgstr "@beanName.method()"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:348
msgid "This syntax allows developers to specify that the execution of method of a specific bean will determine if the current user can access the secured method."
msgstr "この構文により、開発者は、特定の Bean のメソッドの実行によって、現在のユーザーが保護されたメソッドにアクセスできるかどうかを決定するように指定できます。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:351
msgid "The syntax is best explained with an example.  Let's assume that a `MyComponent` bean has been created like so:"
msgstr "構文の説明には、例を使用するとわかりやすいでしょう。`MyComponent` Bean が以下のように作成されたと仮定しましょう。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:359
#, no-wrap
msgid ""
"    @PreAuthorize(\"@personChecker.check(#person, authentication.principal.username)\")\n"
"    public void doSomething(Person person){\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:366
msgid "The `doSomething` method has been annotated with `@PreAuthorize` using an expression that indicates that method `check` of a bean named `personChecker` needs to be invoked to determine whether the current user is authorized to invoke the `doSomething` method."
msgstr "`doSomething` メソッドは、現在のユーザーが `doSomething` メソッドを呼び出すことを許可されているかどうかを判断するために、`personChecker`という名前の Bean のメソッド `check` を呼び出す必要があることを示す式を使用して、`@PreAuthorize` のアノテーションが付けられています。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:368
msgid "An example of the `PersonChecker` could be:"
msgstr "`PersonChecker` の例は次のとおりです。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:373
#, no-wrap
msgid ""
"@Component\n"
"public class PersonChecker {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:379
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean check(Person person, String username) {\n"
"        return person.getName().equals(username);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:382
msgid "Note that for the `check` method the parameter types must match what is specified in `@PreAuthorize` and that the return type must be a `boolean`."
msgstr "`check` メソッドの場合、パラメータータイプは `@PreAuthorize` で指定されたものと一致する必要があり、戻り型は `boolean` である必要があることに注意してください。"

#. type: Title =====
#: upstream/_versions/3.0/guides/spring-security.adoc:383
#, no-wrap
msgid "Combining expressions"
msgstr "式を組み合わせる"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:387
msgid "The `@PreAuthorize` annotations allows for the combination of expressions using logical `AND` / `OR`. Currently, there is a limitation where only a single logical operation can be used (meaning mixing `AND` and `OR` isn't allowed)."
msgstr "`@PreAuthorize` アノテーションは、論理 `AND` / `OR` を使用した式の組み合わせを可能にします。現在、単一の論理演算しか使用できないという制限があります (つまり、`AND` と `OR` を混在させることはできません)。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:389
msgid "Some examples of allowed expressions are:"
msgstr "許可される式の例は次のとおりです。"

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:395
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasAnyRole('user', 'admin') AND #user == principal.username\")\n"
"    public void allowedForUser(String user) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:400
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasRole('user') OR hasRole('admin')\")\n"
"    public void allowedForUserOrAdmin() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/spring-security.adoc:405
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasAnyRole('view1', 'view2') OR isAnonymous() OR hasRole('test')\")\n"
"    public void allowedForAdminOrAnonymous() {\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:410
msgid "Also to be noted that currently parentheses are not supported and expressions are evaluated from left to right when needed."
msgstr "また、現在、括弧はサポートされておらず、式は必要に応じて左から右に評価されることに注意してください。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:411
#, no-wrap
msgid "Important Technical Note"
msgstr "重要な技術的な注意点"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:417
msgid "Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.  Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types.  What that means for end users, is that adding arbitrary Spring libraries will not have any effect. Moreover, Spring infrastructure classes (like `org.springframework.beans.factory.config.BeanPostProcessor` for example) will not be executed."
msgstr "Quarkus での Spring サポートは、Spring Application Context を開始せず、Spring インフラストラクチャークラスも実行しないことに注意してください。Spring クラスとアノテーションは、メタデータの読み取りにのみ使用されるか、ユーザーコードメソッドの戻り値の型またはパラメーター型として使用されます。エンドユーザーにとってそれが意味することは、任意の Spring ライブラリーを追加しても効果がないということです。さらに、Spring インフラストラクチャークラス (たとえば、`org.springframework.beans.factory.config.BeanPostProcessor` など) は実行されません。"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:418
#, no-wrap
msgid "Conversion Table"
msgstr "変換テーブル"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:421
msgid "The following table shows how Spring Security annotations can be converted to JAX-RS annotations."
msgstr "次の表は、Spring SecurityアノテーションをJAX-RSアノテーションに変換する方法を示しています。"

#. type: Table
#: upstream/_versions/3.0/guides/spring-security.adoc:423
#, no-wrap
msgid "Spring"
msgstr "Spring"

#. type: Table
#: upstream/_versions/3.0/guides/spring-security.adoc:423
#, no-wrap
msgid "JAX-RS"
msgstr "JAX-RS"

#. type: Table
#: upstream/_versions/3.0/guides/spring-security.adoc:426
#, no-wrap
msgid "@Secured(\"admin\")"
msgstr "@Secured(\"admin\")"

#. type: Table
#: upstream/_versions/3.0/guides/spring-security.adoc:427
#, no-wrap
msgid "@RolesAllowed(\"admin\")"
msgstr "@RolesAllowed(\"admin\")"

#. type: Title ==
#: upstream/_versions/3.0/guides/spring-security.adoc:431
#, no-wrap
msgid "More Spring guides"
msgstr "その他のSpringガイド"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:434
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkusには、より多くのSpring互換機能があります。詳細については、以下のガイドを参照してください。"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:436
msgid "xref:spring-di.adoc[Quarkus - Extension for Spring DI]"
msgstr "xref:spring-di.adoc[Quarkus - Extension for Spring DI]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:437
msgid "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"
msgstr "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:438
msgid "xref:spring-data-jpa.adoc[Quarkus - Extension for Spring Data JPA]"
msgstr "xref:spring-data-jpa.adoc[Quarkus - Extension for Spring Data JPA]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:439
msgid "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"
msgstr "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:440
msgid "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:441
msgid "xref:spring-boot-properties.adoc[Quarkus - Extension for Spring Boot properties]"
msgstr "xref:spring-boot-properties.adoc[Quarkus - Extension for Spring Boot properties]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:442
msgid "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"
msgstr "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"

#. type: Plain text
#: upstream/_versions/3.0/guides/spring-security.adoc:442
msgid "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
msgstr "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
