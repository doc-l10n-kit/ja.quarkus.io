msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Title =
#: upstream/_versions/main/guides/security-jwt.adoc:7
msgid "Using JWT RBAC"
msgstr "JWT RBAC の使用"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:14
msgid ""
"This guide explains how your Quarkus application can utilize https://github.com/smallrye/smallrye-jwt/[SmallRye JWT]\n"
"to verify https://tools.ietf.org/html/rfc7519[JSON Web Token]s, represent them as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`\n"
"and provide secured access to the Quarkus HTTP endpoints using Bearer Token Authorization and https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control]."
msgstr "このガイドでは、Quarkusアプリケーションが https://github.com/smallrye/smallrye-jwt/[SmallRye JWT] を利用して、 link:https://tools.ietf.org/html/rfc7519[JSON Web Token] を検証し、MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken` として表現し、Bearer Token Authorizationと link:https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control] を使用してQuarkus HTTPエンドポイントへのセキュアなアクセスを提供する方法について説明します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:18
#, fuzzy
msgid ""
"Quarkus OpenID Connect `quarkus-oidc` extension also supports Bearer Token Authorization and uses `smallrye-jwt` to represent the bearer tokens as `JsonWebToken`.\n"
"For more information, read the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] guide.\n"
"OpenID Connect extension has to be used if the Quarkus application needs to authenticate the users using OIDC Authorization Code Flow.\n"
"For more information, see xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr "Quarkus OpenID Connect `quarkus-oidc` エクステンションはベアラートークン認可にも対応しており、 `smallrye-jwt` を使用して、ベアラートークンを `JsonWebToken` として表します。詳細については、 xref:security-oidc-bearer-token-authentication.adoc[OIDCベアラートークン] 認証ガイドを参照してください。QuarkusアプリケーションでOIDC認可コードフローを使用してユーザーを認証する必要がある場合は、OpenID Connectエクステンションを使用する必要があります。詳細については、 xref:security-oidc-code-flow-authentication.adoc[Webアプリケーションを保護するためのOIDCコードフロー] メカニズムを参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/security-jwt.adoc:23
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_versions/main/guides/security-jwt.adoc:27
msgid "Quickstart"
msgstr "クイックスタート"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:29
msgid "Solution"
msgstr "ソリューション"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:31
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can skip right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、すぐに完成した例に飛んでも構いません。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:34
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:36
msgid "The solution is located in the `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory]."
msgstr "ソリューションは `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[ディレクトリ] にあります。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:38
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:40
msgid "First, create a new project with the following command:"
msgstr "まず、以下のコマンドで新規プロジェクトを作成します:"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:46
msgid "This command generates the Maven project and imports the `smallrye-jwt` extension, which includes the {mp-jwt} support."
msgstr "このコマンドは、RESTエンドポイントを持つMavenプロジェクトを生成し、{mp-jwt} サポートを含む `smallrye-jwt` エクステンションをインポートします。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:48
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-jwt` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `smallrye-jwt` エクステンションを追加することができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:54
msgid "This will add the following to your build file:"
msgstr "これにより、`pom.xml` に以下が追加されます:"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:1008
msgid "pom.xml"
msgstr "pom.xml"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:1017
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:76
msgid "Examine the Jakarta REST resource"
msgstr "Jakarta REST リソースの調査"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:78
msgid "Create a REST endpoint in `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` with the following content:"
msgstr "RESTエンドポイントを `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` に以下の内容で作成します。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:80
msgid "REST Endpoint V1"
msgstr "REST エンドポイント V1"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:135
msgid ""
"Here we inject the JsonWebToken interface, an extension of the java.security.\n"
"Principal interface that provides access to the claims associated with the current authenticated token."
msgstr "ここでは、java.security.PrincipalのエクステンションであるJsonWebTokenインターフェイスを注入しています。これは、現在の認証済みトークンに関連するクレームへのアクセスを提供する、java.security.Principalインターフェースの拡張です。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:137
msgid "@PermitAll is a JSR 250 common security annotation that indicates that the given endpoint is accessible by any caller, authenticated or not."
msgstr "@PermitAll は、JSR 250 の一般的なセキュリティーアノテーションであり、認証されているかどうかに関係なく、特定のエンドポイントにすべての呼び出し元がアクセスできることを示します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:138
msgid "Here we inject the Jakarta REST SecurityContext to inspect the security state of the call and use a `getResponseString()` function to populate a response string."
msgstr "ここでは、Jakarta REST SecurityContext を注入して呼び出しのセキュリティ状態を検査し、 `getResponseString()` 関数を使用して応答文字列を入力しています。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:139
msgid "Here we check if the call is insecure by checking the request user/caller `Principal` against null."
msgstr "ここでは、リクエストのユーザー/呼び出し元の `Principal` を null と照合して、呼び出しが安全でないかどうかを確認します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:140
msgid "Here we check that the Principal and JsonWebToken have the same name since JsonWebToken does represent the current Principal."
msgstr "ここでは、JsonWebToken が現在の Principal を表しているため、Principal と JsonWebToken が同じ名前であることを確認します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:141
msgid "Here we get the Principal name."
msgstr "ここで、Principal の名前を取得します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:142
msgid "The reply we build up makes use of the caller name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`, and whether a non-null `JsonWebToken` was injected."
msgstr "構築した応答では、呼び出し元の名前、リクエスト `SecurityContext` の `isSecure()` と `getAuthenticationScheme()` の状態、null 以外の `JsonWebToken` が挿入されたかどうかを利用します。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:144
msgid "Run the application"
msgstr "アプリケーションの実行"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:146
msgid "Now we are ready to run our application. Use:"
msgstr "これで、アプリケーションを実行する準備が整いました。以下を使用してください。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:150
msgid "and you should see output similar to:"
msgstr "以下のような出力が表示されるはずです。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:152
msgid "quarkus:dev Output"
msgstr "quarkus:dev Output"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:167
msgid "Now that the REST endpoint is running, we can access it using a command line tool like curl:"
msgstr "REST エンドポイントが実行されているので、curl のようなコマンドラインツールを使ってアクセスすることができます。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:169
msgid "curl command for /secured/permit-all"
msgstr " /secured/permit-all に対するcurl コマンド"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:176
msgid ""
"We have not provided any JWT in our request, so we would not expect that there is any security state seen by the endpoint,\n"
"and the response is consistent with that:"
msgstr "このリクエストではJWTを設定していませんので、エンドポイントから見たセキュリティーステートがあるとは期待できず、レスポンスもそれに沿ったものとなっています。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:179
msgid "username is anonymous"
msgstr "ユーザー名は anonymous (匿名) です。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:180
msgid "isHttps is false as https is not used"
msgstr "isHttps は https を使用しないので false です。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:181
msgid "authScheme is null"
msgstr "authScheme は null です。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:182
msgid "hasJWT is false"
msgstr "hasJWTは false です。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:184
msgid "Use Ctrl-C to stop the Quarkus server."
msgstr "Ctrl-Cを使用してQuarkusサーバーを停止します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:186
msgid "So now let's actually secure something. Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "では実際に何かを保護してみましょう。下記の新しいエンドポイントメソッド `helloRolesAllowed` を見てみましょう。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:188
msgid "REST Endpoint V2"
msgstr "REST エンドポイント V2"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:251
msgid "Here we inject `JsonWebToken`"
msgstr "ここでは、`JsonWebToken` を挿入します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:252
msgid "This new endpoint will be located at /secured/roles-allowed"
msgstr "この新しいエンドポイントは /secured/roles-allowed に存在します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:253
msgid ""
"@RolesAllowed is a JSR 250 common security annotation that indicates that the given endpoint is accessible by a caller if\n"
"they have either a \"User\" or \"Admin\" role assigned."
msgstr "@RolesAllowed は、\"User\" または \"Admin\" ロールが割り当てられている場合は呼び出し元が特定のエンドポイントにアクセスできることを示す JSR 250 の一般的なセキュリティーアノテーションです。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:255
msgid "Here we build the reply the same way as in the `hello` method but also add a value of the JWT `birthdate` claim by directly calling the injected `JsonWebToken`."
msgstr "ここでは、`hello` メソッドと同じ方法で応答を作成しますが、挿入された `JsonWebToken` を直接呼び出すことで JWT `birthdate` クレームの値を追加します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:257
msgid "After you make this addition to your `TokenSecuredResource`, rerun the `./mvnw compile quarkus:dev` command, and then try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint."
msgstr "`TokenSecuredResource` にこの追加を行った後 、 `./mvnw compile quarkus:dev` コマンドを再実行し、次のように `curl -v http://127.0.0.1:8080/secured/roles-allowed ; echo` を使用して、新しいエンドポイントへのアクセスを試行してみてください。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:259
msgid "Your output should be as follows:"
msgstr "出力は以下のようになるはずです:"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:261
msgid "curl command for /secured/roles-allowed"
msgstr "/secured/roles-allowed の curl コマンド"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:283
msgid ""
"Excellent, we have not provided any JWT in the request, so we should not be able to access the endpoint, and we were not. Instead, we received an HTTP 401 Unauthorized error.\n"
"We need to obtain and pass in a valid JWT to access that endpoint. There are two steps to this, 1) configuring our {extension-name} extension with information on how to validate a JWT, and 2) generating a matching JWT with the appropriate claims."
msgstr "素晴らしい、リクエストでJWTを提供していないので、エンドポイントにアクセス出来ないはずであり、アクセス出来ませんでした。その代わり、HTTP 401 Unauthorizedエラーを受け取りました。エンドポイントにアクセスするには、有効なJWTを取得し、渡す必要があります。1）JWTを検証する方法に関する情報を持つ{extension-name}エクステンションを設定する、2）適切なクレームを持つ一致するJWTを生成する、の2つのステップがあります。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:286
msgid "Configuring the {extension-name} Extension Security Information"
msgstr "{extension-name} エクステンションセキュリティー情報の設定"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:288
msgid "Create a `security-jwt-quickstart/src/main/resources/application.properties` with the following content:"
msgstr "次の内容で `security-jwt-quickstart/src/main/resources/application.properties` を作成します。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:290
msgid "application.properties for TokenSecuredResource"
msgstr "TokenSecuredResource の application.properties"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:298
msgid "We are setting public key location to point to a classpath publicKey.pem location. We will add this key in part B, xref:add-public-key[Adding a Public Key]."
msgstr "公開鍵の場所は、クラスパスのpublicKey.pemの場所を指すように設定しています。この鍵は、パートB xref:add-public-key[公開鍵の追加] で追加します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:299
msgid "We are setting the issuer to the URL string `https://example.com/issuer`."
msgstr "発行者を URL 文字列 `https://example.com/issuer` に設定しています。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:300
msgid "We are including the public key as a resource in the native executable."
msgstr "ネイティブ実行可能ファイルのリソースとして公開鍵を含めています。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:303
msgid "Adding a Public Key"
msgstr "公開鍵の追加"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:305
msgid ""
"The https://tools.ietf.org/html/rfc7519[JWT specification] defines various levels of security of JWTs that one can use.\n"
"The {mp-jwt} specification requires that JWTs that are signed with the RSA-256 signature algorithm. This in\n"
"turn requires an RSA public key pair.\n"
"On the REST endpoint server side, you need to configure the location of the RSA public\n"
"key to use to verify the JWT sent along with requests.\n"
"The `mp.jwt.verify.publickey.location=publicKey.pem` setting configured\n"
"previously expects that the public key is available on the classpath as `publicKey.pem`.\n"
"To accomplish this, copy the following content to a `security-jwt-quickstart/src/main/resources/publicKey.pem` file."
msgstr "link:https://tools.ietf.org/html/rfc7519[JWT仕様] では、使用できるJWTのセキュリティレベルを様々に定義しています。 {mp-jwt} 仕様は、RSA-256署名アルゴリズムで署名されたJWTを要求しています。これには、RSA公開鍵ペアが必要です。RESTエンドポイントサーバー側では、リクエストとともに送信されるJWTを検証するために使用するRSA公開鍵の場所を設定する必要があります。先に設定した `mp.jwt.verify.publickey.location=publicKey.pem` の設定では、公開鍵がクラスパスで `publicKey.pem` として利用可能であることを想定しています。これを実現するために、次の内容を `security-jwt-quickstart/src/main/resources/publicKey.pem` ファイルにコピーします。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:314
msgid "RSA Public Key PEM Content"
msgstr "RSA 公開鍵 PEM コンテンツ"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:328
msgid "Generating a JWT"
msgstr "JWT の生成"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:330
msgid ""
"Often one obtains a JWT from an identity manager like https://www.keycloak.org/[Keycloak], but for this quickstart we will generate our own using the JWT generation API provided by `smallrye-jwt`.\n"
"For more information, see xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr "多くの場合、 link:https://www.keycloak.org/[Keycloak] のようなIDマネージャからJWTを取得しますが、このクイックスタートでは、 `smallrye-jwt` が提供するJWT生成APIを使用して独自に生成することにします。詳細は、xref:security-jwt-build.adoc[SmallRye JWTでJWTトークンを生成] を参照してください。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:333
msgid "Take the code from the following listing and place into `security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java`:"
msgstr "次のリストからコードを取得し、`security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java` に配置します。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:335
msgid "GenerateToken main Driver Class"
msgstr "GenerateToken メインドライバークラス"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:363
msgid ""
"The `iss` claim is the issuer of the JWT. This needs to match the server side `mp.jwt.verify.issuer`.\n"
"in order for the token to be accepted as valid."
msgstr "`iss` クレームは JWT の発行者です。トークンが有効であると認められるためには、これがサーバー側の `mp.jwt.verify.issuer` と一致する必要があります。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:365
msgid ""
"The `upn` claim is defined by the {mp-jwt} spec as preferred claim to use for the\n"
"`Principal` seen via the container security APIs."
msgstr "`upn` クレームは、{mp-jwt} 仕様で、コンテナーセキュリティー API を介して表示される `Principal` に使用する優先クレームとして定義されています。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:367
msgid "The `group` claim provides the groups and top-level roles associated with the JWT bearer."
msgstr "`group` クレームは、JWT ベアラーに関連付けられたグループとトップレベルのロールを提供します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:368
msgid "The `birthday` claim. It can be considered to be a sensitive claim, so you may want to consider encrypting the claims, see xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr "`birthday` クレームです。機密性の高いクレームと見なすことができるため、クレームの暗号化を検討したくなるかもしれません。 xref:security-jwt-build.adoc[SmallRye JWT を使用した JWT トークンの生成] を参照してください。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:370
msgid "Note for this code to work we need the content of the RSA private key that corresponds to the public key we have in the TokenSecuredResource application. Take the following PEM content and place it into `security-jwt-quickstart/src/test/resources/privateKey.pem`:"
msgstr "このコードが機能するには、TokenSecuredResource アプリケーションにある公開鍵に対応する RSA 秘密鍵のコンテンツが必要であることに注意してください。次の PEM コンテンツを取得し、`security-jwt-quickstart/src/test/resources/privateKey.pem` に配置します。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:372
msgid "RSA Private Key PEM Content"
msgstr "RSA 秘密鍵 PEM コンテンツ"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:405
msgid "We will use a `smallrye.jwt.sign.key.location` property to point to this private signing key."
msgstr "`smallrye.jwt.sign.key.location` プロパティーを使用して、この秘密署名鍵を指します。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:408
msgid "Generating Keys with OpenSSL"
msgstr "OpenSSL を使用した鍵の生成"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:410
msgid "It is also possible to generate a public and private key pair using the OpenSSL command line tool."
msgstr "OpenSSL コマンドラインツールを使用して、公開鍵と秘密鍵のペアを生成することもできます。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:412
msgid "openssl commands for generating keys"
msgstr "鍵を生成するための openssl コマンド"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:419
msgid "An additional step is needed for generating the private key for converting it into the PKCS#8 format."
msgstr "秘密鍵を生成して PKCS#8 形式に変換するには、追加の手順が必要です。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:421
msgid "openssl command for converting private key"
msgstr "秘密鍵を変換するための openssl コマンド"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:427
msgid "You can use the generated pair of keys instead of the keys used in this quickstart."
msgstr "このクイックスタートで使用される鍵の代わりに、生成された鍵のペアを使用できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:430
msgid "Now we can generate a JWT to use with `TokenSecuredResource` endpoint. To do this, run the following command:"
msgstr "これで、`TokenSecuredResource` エンドポイントで使用する JWT を生成できます。これを行うには、次のコマンドを実行します。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:434
msgid "Sample JWT Generation Output"
msgstr "JWT 生成出力のサンプル"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:442
msgid ""
"The JWT string is the Base64 URL encoded string that has 3 parts separated by '.' characters.\n"
"First part - JWT headers, second part - JWT claims, third part - JWT signature."
msgstr "JWT 文字列は Base64 URL でエンコードされた文字列で、'.' で区切られた 3 つのパートで構成されています。最初のパートは JWT ヘッダー、2 つ目のパートは JWT クレーム、3 つ目のパートは JWT シグネチャーです。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:445
msgid "Finally, Secured Access to /secured/roles-allowed"
msgstr "/secured/roles-allowed へのセキュリティーで保護されたアクセス"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:446
msgid "Now let's use this to make a secured request to the /secured/roles-allowed endpoint. Make sure you have the Quarkus server still running in dev mode, and then run the following command, making sure to use your version of the generated JWT from the previous step:"
msgstr "これを使用して、/secured/roles-allowed エンドポイントにセキュリティーで保護されたリクエストを作成しましょう。Quarkus サーバーが引き続き開発モードで実行されていることを確認してから、次のコマンドを実行し、前の手順で生成された自分の JWT バージョンを使用していることを確認します。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:453
msgid "curl Command for /secured/roles-allowed With JWT"
msgstr "JWT を含む /secured/roles-allowed の curl コマンド"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:460
msgid "Success! We now have:"
msgstr "成功! これで、以下が得られます"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:462
msgid "a non-anonymous caller name of jdoe@quarkus.io"
msgstr "jdoe@quarkus.io という非匿名の発信者名"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:463
msgid "an authentication scheme of Bearer"
msgstr "ベアラーの認証スキーム"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:464
msgid "a non-null JsonWebToken"
msgstr "非 null の JsonWebToken"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:465
msgid "birthdate claim value"
msgstr "birthdate クレームの値"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:467
msgid "Using the JsonWebToken and Claim Injection"
msgstr "JsonWebToken とクレーム挿入の使用"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:469
msgid ""
"Now that we can generate a JWT to access our secured REST endpoints, let's see what more we can do with the `JsonWebToken`\n"
"interface and the JWT claims. The `org.eclipse.microprofile.jwt.JsonWebToken` interface extends the `java.security.Principal`\n"
"interface, and is in fact the type of the object that is returned by the `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` call we\n"
"used previously. This means that code that does not use CDI but does have access to the REST container `SecurityContext` can get\n"
"hold of the caller `JsonWebToken` interface by casting the `SecurityContext#getUserPrincipal()`."
msgstr "さて、安全なRESTエンドポイントにアクセスするためにJWTを生成できるようになったので、 `JsonWebToken` インターフェースとJWTクレームを使ってさらに何ができるかを見てみましょう。 `org.eclipse.microprofile.jwt.JsonWebToken` インターフェースは `java.security.Principal` インターフェースを拡張したもので、実際には前回使用した `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` 呼び出しによって返されるオブジェクトの型です。つまり、CDIを使用せず、RESTコンテナ `SecurityContext` にアクセスできるコードは、 `SecurityContext#getUserPrincipal()` をキャストすることで、呼び出し元の `JsonWebToken` インターフェースを取得することができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:475
msgid ""
"The `JsonWebToken` interface defines methods for accessing claims in the underlying JWT.\n"
"It provides accessors for common claims that are required by the {mp-jwt} specification as well as arbitrary claims that may exist in the JWT."
msgstr "`JsonWebToken` インタフェースは、基礎となる JWT のクレームにアクセスするためのメソッドを定義します。mp-jwt}仕様で要求される一般的なクレームと、JWTに存在しうる任意のクレームに対するアクセッサを提供します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:478
msgid ""
"All the JWT claims can also be injected.\n"
"Let's expand our `TokenSecuredResource` with another endpoint /secured/roles-allowed-admin which uses the injected `birthdate` claim (as opposed to getting it from `JsonWebToken`):"
msgstr "すべてのJWTクレームも注入することができます。 `TokenSecuredResource` を、注入された `birthdate` のクレームを使う別のエンドポイント /secured/roles-allowed-admin で拡張してみましょう ( `JsonWebToken` から取得するのとは対照的です):"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:556
msgid "Here we inject the JsonWebToken."
msgstr "ここでは、JsonWebToken を挿入します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:557
msgid "Here we inject the `birthday` claim as `String` - this is why the `@RequestScoped` scope is now required."
msgstr "ここでは、`birthday` クレームを `String` として挿入します。これが `@RequestScoped` スコープが必要になった理由です。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:558
msgid "Here we use the injected `birthday` claim to build the final reply."
msgstr "ここでは、挿入された `birthday` クレームを使用して、最終的な応答を作成します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:560
msgid "Now generate the token again and run:"
msgstr "次に、トークンを再度生成して実行します。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:573
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:575
msgid "As usual, the application can be packaged using:"
msgstr "いつものように、アプリケーションは以下の方法でパッケージ化されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:579
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`:"
msgstr "そして、`java -jar target/quarkus-app/quarkus-run.jar` を使って実行されます。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:581
msgid "Runner jar Example"
msgstr "ランナー jar の例"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:589
msgid "You can also generate the native executable with:"
msgstr "次のようにネイティブ実行可能ファイルを生成することもできます。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:593
msgid "Native Executable Example"
msgstr "ネイティブ実行可能ファイル例"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:618
msgid "Explore the Solution"
msgstr "ソリューションの探索"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:620
#, fuzzy
msgid ""
"The solution repository located in the `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory] contains all the versions we have worked through in this quickstart guide as well as some additional endpoints that illustrate subresources with injection of ``JsonWebToken``s and their claims into those using the CDI APIs.\n"
"We suggest that you check out the quickstart solutions and explore the `security-jwt-quickstart` directory to learn more about the {extension-name} extension features."
msgstr "`security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[ディレクトリに] あるソリューションリポジトリには、このクイックスタートガイドで扱ったすべてのバージョンと、 `JsonWebToken` のサブリソースを説明する追加のエンドポイント、およびCDI APIを使用したものへのクレームのインジェクションが含まれています。クイックスタートのソリューションをチェックアウトし、 `security-jwt-quickstart` ディレクトリを探索し、{extension-name} 拡張機能の詳細を学ぶことをお勧めします。"

#. type: Title ==
#: upstream/_versions/main/guides/security-jwt.adoc:623
msgid "Reference Guide"
msgstr "リファレンスガイド"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:626
msgid "Supported Injection Scopes"
msgstr "サポートされている注入スコープ"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:628
msgid "`@ApplicationScoped`, `@Singleton` and `@RequestScoped` outer bean injection scopes are all supported when an `org.eclipse.microprofile.jwt.JsonWebToken` is injected, with the `@RequestScoped` scoping for `JsonWebToken` enforced to ensure the current token is represented."
msgstr "`org.eclipse.microprofile.jwt.JsonWebToken` が注入される場合、`@ApplicationScoped`、`@Singleton`、および `@RequestScoped` の外部 Bean 注入スコープがすべてサポートされます。また、現在のトークンが示されていることを確認するために、`JsonWebToken` の `@RequestScoped` スコープが適用されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:630
msgid "However, `@RequestScoped` must be used when the individual token claims are injected as simple types such as `String`, for example:"
msgstr "ただし、個々のトークンクレームが `String` などの単純な型として挿入される場合は、`@RequestScoped` を使用する必要があります。以下はその例です。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:650
msgid "Note you can also use the injected `JsonWebToken` to access the individual claims in which case setting `@RequestScoped` is not necessary."
msgstr "注入された `JsonWebToken` を使用して個々のクレームにアクセスすることもできます。その場合、`@RequestScoped` を設定する必要はありません。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:652
msgid "Please see link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI Injection Requirements] for more details."
msgstr "詳細については、 link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI 注入要件] を参照してください。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:655
msgid "Supported Public Key Formats"
msgstr "サポートされている公開鍵形式"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:657
msgid ""
"Public Keys may be formatted in any of the following formats, specified in order of\n"
"precedence:"
msgstr "公開鍵には、優先順位に従って指定された次のいずれかの形式が適用さされます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:660
msgid "Public Key Cryptography Standards #8 (PKCS#8) PEM"
msgstr "Public Key Cryptography Standards #8 (PKCS#8) PEM"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:661
msgid "JSON Web Key (JWK)"
msgstr "JSON Web Key (JWK)"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:662
msgid "JSON Web Key Set (JWKS)"
msgstr "JSON Web Key Set (JWKS)"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:663
msgid "JSON Web Key (JWK) Base64 URL encoded"
msgstr "JSON Web Key (JWK) Base64 URL エンコード"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:664
msgid "JSON Web Key Set (JWKS) Base64 URL encoded"
msgstr "JSON Web Key Set (JWKS) Base64 URL エンコード"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:666
msgid "Dealing with the verification keys"
msgstr "検証鍵の処理"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:668
msgid "If you need to verify the token signature using the asymmetric RSA or Elliptic Curve (EC) key then use the `mp.jwt.verify.publickey.location` property to refer to the local or remote verification key."
msgstr "非対称 RSA または楕円曲線 (EC) 鍵を使用してトークンの署名を検証する必要がある場合は、`mp.jwt.verify.publickey.location` プロパティーを使用してローカルまたはリモートの検証鍵を参照します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:670
msgid "Use `mp.jwt.verify.publickey.algorithm` to customize the verification algorithm (default is `RS256`), for example, set it to `ES256` when working with the EC keys."
msgstr "`mp.jwt.verify.publickey.algorithm` を使用して検証アルゴリズムをカスタマイズします (デフォルトは `RS256`)。たとえば、EC 鍵を操作する場合は `ES256` に設定します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:672
msgid "If you need to verify the token signature using the symmetric secret key then either a `JSON Web Key` (JWK) or `JSON Web Key Set` (JWK Set) format must be used to represent this secret key, for example:"
msgstr "対称秘密鍵を使用してトークン署名を検証する必要がある場合は、JSON Web 鍵 (JWK) または JSON Web 鍵セット (JWK セット) 形式のいずれかを使用して、この秘密鍵を表す必要があります。以下はその例です。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:687
msgid ""
"This secret key JWK will also need to be referred to with `smallrye.jwt.verify.key.location`.\n"
"`smallrye.jwt.verify.algorithm` should be set to `HS256`/`HS384`/`HS512`."
msgstr "この秘密鍵 JWK も、`smallrye.jwt.verify.key.location` で参照する必要があります。`smallrye.jwt.verify.algorithm` は `HS256`/`HS384`/`HS512` に設定する必要があります。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:691
msgid "Parse and Verify JsonWebToken with JWTParser"
msgstr "JWTParser を使用した JsonWebToken の解析と検証"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:693
msgid "If the JWT token can not be injected, for example, if it is embedded in the service request payload or the service endpoint acquires it out of band, then one can use `JWTParser`:"
msgstr "JWT トークンを挿入できない場合、たとえば、サービスリクエストペイロードに埋め込まれていたり、サービスエンドポイントが帯域外でトークンを取得する場合、`JWTParser` を使用できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:708
msgid "You can also use it to customize the way the token is verified or decrypted. For example, one can supply a local `SecretKey`:"
msgstr "これを使用して、トークンの検証または復号化の方法をカスタマイズすることもできます。たとえば、ローカルの `SecretKey` を指定できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:745
msgid "Please also see the xref:add-smallrye-jwt[How to Add SmallRye JWT directly] section about using `JWTParser` without the `HTTP` support provided by `quarkus-smallrye-jwt`."
msgstr "また、 `quarkus-smallrye-jwt` が提供する `HTTP` サポート無しで `JWTParser` を使用する方法については、SmallRye xref:add-smallrye-jwt[JWT を直接追加する方法] を参照してください。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:747
msgid "Token Decryption"
msgstr "トークン復号化"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:749
msgid ""
"If your application needs to accept the tokens with the encrypted claims or the encrypted inner-signed claims, all you have to do is set\n"
"`smallrye.jwt.decrypt.key.location` pointing to the decryption key."
msgstr "アプリケーションが暗号化されたクレームや暗号化・内部署名付きクレームを持つトークンを受け入れる必要がある場合は、必要な作業は、復号化キーを指す `smallrye.jwt.decrypt.key.location` を設定することだけです。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:752
msgid ""
"If this is the only key property that is set, the incoming token is expected to contain the encrypted claims only.\n"
"If either `mp.jwt.verify.publickey` or `mp.jwt.verify.publickey.location` verification properties are also set then the incoming token is expected to contain the encrypted inner-signed token."
msgstr "この鍵プロパティのみが設定されている場合、受信トークンには暗号化クレームのみが含まれることが期待されます。 `mp.jwt.verify.publickey` または `mp.jwt.verify.publickey.location` のいずれかの検証プロパティも設定されている場合、受信トークンには暗号化・内部署名付きトークンが含まれることが期待されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:755
msgid "See xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT] and learn how to generate the encrypted or inner-signed and then encrypted tokens fast."
msgstr "xref:security-jwt-build.adoc[SmallRye JWT を使用した JWT トークンの生成] を参照し、暗号化または内部署名されてから暗号化されたトークンをすぐに生成する方法を確認してください。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:757
msgid "Custom Factories"
msgstr "カスタムファクトリー"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:759
msgid ""
"`io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` is used by default to parse and verify JWT tokens and convert them to `JsonWebToken` principals.\n"
"It uses `MP JWT` and `smallrye-jwt` properties listed in the `Configuration` section to verify and customize JWT tokens."
msgstr "`io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` は、デフォルトで JWT トークンを解析および検証し、それらを `JsonWebToken` プリンシパルに変換するために使用されます。設定セクションにリストされている `MP JWT` および `smallrye-jwt` プロパティーを使用して、JWT トークンを検証およびカスタマイズします。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:762
msgid "If you need to provide your own factory, for example, to avoid verifying the tokens again which have already been verified by the firewall, then you can either use a `ServiceLoader` mechanism by providing a `META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` resource or simply have an `Alternative` CDI bean implementation like this one:"
msgstr "たとえば、ファイアウォールによってすでに検証されているトークンの再検証を回避するために独自のファクトリーを提供する必要がある場合は、`META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` リソースを提供すして `ServiceLoader` メカニズムを使用するか、単純に次のような `Alternative` CDI Bean 実装を持つことができます。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:797
#, fuzzy
msgid "Blocking calls"
msgstr "着信拒否"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:799
#, fuzzy
msgid "`quarkus-smallrye-jwt` extension uses link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] library which is currently not reactive."
msgstr "`quarkus-smallrye-jwt` エクステンションは SmallRye link:https://github.com/smallrye/smallrye-jwt[JWT] ライブラリを使用しますが、これは現在リアクティブではありません。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:801
#, fuzzy
msgid "What it means from the perspective of `quarkus-smallrye-jwt` which operates as part of the reactive Quarkus security architecture, is that an IO thread entering the link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] verification or decryption code might block in one of the following cases:"
msgstr "これは、リアクティブなQuarkusセキュリティアーキテクチャの一部として動作する `quarkus-smallrye-jwt` 、 link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] 検証または復号化コードに入るIOスレッドが、以下のいずれかのケースでブロックされる可能性があることを意味します："

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:803
#, fuzzy
msgid "Default key resolver refreshes `JsonWebKey` set containing the keys which involves a remote call to the OIDC endpoint"
msgstr "デフォルトのキーリゾルバは、OIDCエンドポイントへのリモートコールを伴うキーを含む `JsonWebKey` セットをリフレッシュする。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:804
#, fuzzy
msgid "Custom key resolver such as `AWS Application Load Balancer` (`ALB`) key resolver, resolves the keys against the AWS ALB key endpoint using the current token's key identifier header value"
msgstr "`AWS Application Load Balancer` ( `ALB` ) のようなカスタム鍵リゾルバは、現在のトークンの鍵識別子のヘッダ値を使用して、AWS ALB 鍵エンドポイントに対して鍵をリゾルバする。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:806
#, fuzzy
msgid "In such cases, if the connections are slow, for example, it may take more than 3 seconds to get a response from the key endpoint, the current event loop thread will most likely block."
msgstr "このような場合、接続が遅い場合、例えば、キーエンドポイントからの応答を得るのに3秒以上かかるような場合、現在のイベントループスレッドは、ほとんどの場合ブロックされる。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:808
#, fuzzy
msgid "To prevent it, set `quarkus.smallrye-jwt.blocking-authentication=true`."
msgstr "これを防ぐには、 `quarkus.smallrye-jwt.blocking-authentication=true` を設定する。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:810
msgid "Token Propagation"
msgstr "トークンの伝播"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:812
msgid "Please see the xref:security-openid-connect-client.adoc#token-propagation[Token Propagation] section about the Bearer access token propagation to the downstream services."
msgstr "下流サービスへのベアラアクセストークンの伝搬については、 xref:security-openid-connect-client.adoc#token-propagation[トークンの伝搬] の項を参照してください。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:815
msgid "Testing"
msgstr "テスト"

#. type: Title ====
#: upstream/_versions/main/guides/security-jwt.adoc:818
msgid "Wiremock"
msgstr "Wiremock"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:820
#, fuzzy
msgid "If you configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP based JsonWebKey (JWK) set then you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token Integration testing] `Wiremock` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "もし、 `mp.jwt.verify.publickey.location` が HTTPS または HTTP ベースの JsonWebKey (JWK) セットを指すように設定されている場合は、OpenID xref:security-oidc-bearer-token-authentication.adoc#integration-testing[Connect Bearer Token Integration testing] `Wiremock` のセクションで説明したのと同じアプローチが使えますが、代わりに MP JWT 設定プロパティを使うように `application.properties` を変更するだけです："

#. type: Title ====
#: upstream/_versions/main/guides/security-jwt.adoc:830
msgid "Keycloak"
msgstr "Keycloak"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:832
#, fuzzy
msgid "If you work with Keycloak and configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP based JsonWebKey (JWK) set then you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token Integration testing] Keycloak section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "Keycloakと連携し、 `mp.jwt.verify.publickey.location` 、HTTPSまたはHTTPベースのJsonWebKey (JWK)セットを指すように設定する場合は、OpenID Connect xref:security-oidc-bearer-token-authentication.adoc#integration-testing[Bearer Token Integration testing] Keycloakセクションで説明したのと同じアプローチを使用できますが、代わりにMP JWT設定プロパティを使用するように `application.properties` ："

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:841
msgid "Note that the tokens issued by Keycloak have an `iss` (issuer) claim set to the realm endpoint address."
msgstr "Keycloakが発行したトークンは、レルムエンドポイントアドレスが `iss` （発行者）クレームに設定されていることに注目してください。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:843
msgid "If your Quarkus application is running in a docker container, it may share a network interface with a Keycloak docker container launched by DevServices for Keycloak, with the Quarkus application and Keycloak communicating with each other via an internal shared docker network."
msgstr "QuarkusアプリケーションがDockerコンテナで実行されている場合、DevServices for Keycloakによって起動されたKeycloak dockerコンテナとネットワークインターフェースを共有し、QuarkusアプリケーションとKeycloakは内部の共有Dockerネットワークを通じて互いに通信することができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:845
msgid "In such cases, use the following configuration instead:"
msgstr "そのような場合は、代わりに以下のような設定にしてください。"

#. type: Title ====
#: upstream/_versions/main/guides/security-jwt.adoc:858
msgid "Local Public Key"
msgstr "ローカル公開鍵"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:860
#, fuzzy
msgid "You can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token Integration testing] `Local Public Key` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "OpenID Connect xref:security-oidc-bearer-token-authentication.adoc#integration-testing[Bearer Token Integration testing] `Local Public Key` のセクションで説明したのと同じアプローチを使用できますが、代わりに MP JWT 設定プロパティを使用するように `application.properties` を変更するだけです："

#. type: Title ====
#: upstream/_versions/main/guides/security-jwt.adoc:873
msgid "TestSecurity annotation"
msgstr "TestSecurity アノテーション"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:875
msgid "Add the following dependency:"
msgstr "次の依存関係を追加します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:893
msgid "and write a test code like this one:"
msgstr "次のようなテストコードを作成します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:930
msgid "where `ProtectedResource` class may look like this:"
msgstr "ここで、`ProtectedResource` クラスは次のようになります。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:956
msgid ""
"Note that `@TestSecurity` annotation must always be used and its `user` property is returned as `JsonWebToken.getName()` and `roles` property - as `JsonWebToken.getGroups()`.\n"
"`@JwtSecurity` annotation is optional and can be used to set the additional token claims."
msgstr "`@TestSecurity` アノテーションは常に使用する必要があり、その `user` プロパティーは `JsonWebToken.getName()` として返され、`roles` プロパティーは `JsonWebToken.getGroups()` として返されることに注意してください。`@JwtSecurity` アノテーションはオプションであり、追加のトークンクレームを設定するために使用できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:961
msgid "`@TestSecurity` and `@JwtSecurity` can be combined in a meta-annotation, as follows:"
msgstr "`@TestSecurity` と `@JwtSecurity` は、次のようにメタアノテーションで組み合わせることができます："

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:978
msgid "This is particularly useful if the same set of security settings needs to be used in multiple test methods."
msgstr "これは、同じセキュリティ設定のセットを複数のテストメソッドで使用する必要がある場合に特に便利です。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:981
msgid "How to check the errors in the logs"
msgstr "ログでエラーを確認する方法"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:983
msgid "Please enable `io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` level logging to see more details about the token verification or decryption errors:"
msgstr "トークンの検証または復号化エラーの詳細を確認するには、`io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` レベルのログを有効にしてください。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:991
msgid "Proactive Authentication"
msgstr "プロアクティブ認証"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:993
#, fuzzy
msgid "If you'd like to skip the token verification when the public endpoint methods are invoked, disable the xref:security-proactive-authentication.adoc[proactive authentication]."
msgstr "パブリックエンドポイントメソッド呼び出し時のトークン検証を省略したい場合は、プロアクティブ xref:security-proactive-authentication.adoc[認証を] 無効にします。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:995
msgid "Note that you can't access the injected `JsonWebToken` in the public methods if the token verification has not been done."
msgstr "トークンの検証が実行されていない場合、パブリックメソッドで挿入された `JsonWebToken` にアクセスできないことに注意してください。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:998
msgid "How to Add SmallRye JWT directly"
msgstr "SmallRye JWT を直接追加する方法"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1000
msgid "To xref:jwt-parser[parse and verify JsonWebToken with JWTParser], use `smallrye-jwt` instead of `quarkus-smallrye-jwt` directly for the following situations:"
msgstr "xref:jwt-parser[JWTParserでJsonWebTokenを解析・検証] するには、以下のような状況では、 `quarkus-smallrye-jwt` の代わりに `smallrye-jwt` を直接使用します:"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1002
msgid "You work with Quarkus extensions that do not support `HTTP`, such as `Quarkus GRPC`."
msgstr "`HTTP` をサポートしていないQuarkusエクステンション、例えば `Quarkus GRPC` などを使用している場合。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1003
#, fuzzy
msgid "You provide an extension-specific `HTTP`, the support of which conflicts with the support of those offered by `quarkus-smallrye-jwt` and `Vert.x HTTP`, such as `Quarkus AWS Lambda`."
msgstr "あなたはエクステンション固有の `HTTP` を提供するが、そのサポートは、 `quarkus-smallrye-jwt` や `Vert.x HTTP` が提供するサポート（例えば `Quarkus AWS Lambda` など）と競合する。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1005
msgid "Start with adding the `smallrye-jwt` dependency:"
msgstr "まず、 `smallrye-jwt` の依存関係を追加することから始めます:"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1022
msgid "and update `application.properties` to get all the CDI producers provided by `smallrye-jwt` included as follows:"
msgstr "さらに、`application.properties` を更新して、`smallrye-jwt` によって提供されるすべての CDI プロデューサーを次のように含めます。"

#. type: Title ==
#: upstream/_versions/main/guides/security-jwt.adoc:1031
msgid "Configuration Reference"
msgstr "設定リファレンス"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:1033
msgid "Quarkus configuration"
msgstr "Quarkus の設定"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:1037
msgid "MicroProfile JWT configuration"
msgstr "MicroProfile JWT の設定"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1060
msgid "Property Name"
msgstr "プロパティ名"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1060
msgid "Default"
msgstr "デフォルト"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1060
msgid "Description"
msgstr "説明"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1042
msgid "mp.jwt.verify.publickey"
msgstr "mp.jwt.verify.publickey"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1093
msgid "none"
msgstr "none"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1042
msgid "The `mp.jwt.verify.publickey` config property allows the Public Key text itself to be supplied as a string.  The Public Key will be parsed from the supplied string in the order defined in the xref:supported-public-key-formats[Supported Public Key Formats] section."
msgstr "`mp.jwt.verify.publickey` 設定プロパティでは、公開鍵のテキストそのものを文字列として提供することができます。公開鍵は、 xref:supported-public-key-formats[サポートされる公開鍵の形式] セクションで定義された順序で、提供された文字列から解析されます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1043
msgid "mp.jwt.verify.publickey.location"
msgstr "mp.jwt.verify.publickey.location"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1043
msgid "Config property allows for an external or internal location of Public Key to be specified.  The value may be a relative path or a URL. If the value points to an HTTPS based JWK set then, for it to work in native mode, the `quarkus.ssl.native` property must also be set to `true`, see xref:native-and-ssl.adoc[Using SSL With Native Executables] for more details."
msgstr "Config プロパティーを使用すると、公開鍵の外部または内部の場所を指定できます。値は相対パスまたは URL の場合があります。値が HTTPS ベースの JWK セットを指している場合、ネイティブモードで機能するには、`quarkus.ssl.native` プロパティーも `true` に設定する必要があります。詳細については xref:native-and-ssl.adoc[ネイティブ実行可能ファイルで SSL を使用する場合] を参照してください。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1044
#, fuzzy
msgid "mp.jwt.verify.publickey.algorithm"
msgstr "mp.jwt.verify.publickey.algorithm"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1044
msgid "`RS256`"
msgstr "`RS256`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1044
msgid "Signature algorithm. Set it to `ES256` to support the Elliptic Curve signature algorithm."
msgstr "署名アルゴリズム。 `ES256` に設定して、楕円曲線署名アルゴリズムをサポートします。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1045
msgid "mp.jwt.decrypt.key.location"
msgstr "mp.jwt.decrypt.key.location"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1045
msgid "Config property allows for an external or internal location of Private Decryption Key to be specified."
msgstr "Config プロパティーを使用すると、秘密復号化鍵の外部または内部の場所を指定できます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1046
msgid "mp.jwt.verify.issuer"
msgstr "mp.jwt.verify.issuer"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1046
msgid "Config property specifies the value of the `iss` (issuer) claim of the JWT that the server will accept as valid."
msgstr "Config プロパティーは、サーバーが有効として受け入れる JWT の `iss` (発行者) クレームの値を指定します。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1047
#, fuzzy
msgid "mp.jwt.verify.audiences"
msgstr "mp.jwt.verify.audiences"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1047
msgid "Comma separated list of the audiences that a token `aud` claim may contain."
msgstr "トークン `aud` クレームに含まれる可能性のあるオーディエンスのコンマ区切りリスト。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1048
msgid "mp.jwt.verify.clock.skew"
msgstr "mp.jwt.verify.clock.skew"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1048
msgid "`60`"
msgstr "`60`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1048
msgid "Clock skew in seconds used during the token expiration and age verification. An expired token is accepted if the current time is within the number of seconds specified by this property after the token expiration time. The default value is 60 seconds."
msgstr "トークンの有効期限と年齢確認時に使用されるクロックスキュー（秒）。トークンの有効期限切れ後、現在時刻がこのプロパティで指定された秒数以内であれば、期限切れのトークンは受理されます。デフォルト値は60秒です。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1049
#, fuzzy
msgid "mp.jwt.verify.token.age"
msgstr "mp.jwt.verify.token.age"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1049
msgid "`none`"
msgstr "`none`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1049
msgid "Number of seconds that must not elapse since the token `iat` (issued at) time."
msgstr "トークン発行時刻 `iat` から経過してはならない秒数です。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1050
msgid "mp.jwt.token.header"
msgstr "mp.jwt.token.header"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1067
msgid "`Authorization`"
msgstr "`Authorization`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1050
msgid "Set this property if another header such as `Cookie` is used to pass the token."
msgstr "`Cookie` などの別のヘッダーを使用してトークンを渡す場合は、このプロパティーを設定します。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1051
#, fuzzy
msgid "mp.jwt.token.cookie"
msgstr "mp.jwt.token.cookie"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1051
msgid "Name of the cookie containing a token. This property will be effective only if `mp.jwt.token.header` is set to `Cookie`."
msgstr "トークンを含む Cookie の名前。このプロパティーは、`mp.jwt.token.header` が `Cookie` に設定されている場合にのみ有効になります。"

#. type: Title ===
#: upstream/_versions/main/guides/security-jwt.adoc:1054
msgid "Additional SmallRye JWT configuration"
msgstr "追加の SmallRye JWT 設定"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1056
msgid "SmallRye JWT provides more properties which can be used to customize the token processing:"
msgstr "SmallRye JWTには、トークン処理をカスタマイズするために使用できる、より多くのプロパティーが用意されています。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1061
msgid "smallrye.jwt.verify.key.location"
msgstr "smallrye.jwt.verify.key.location"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1061
msgid "NONE"
msgstr "NONE"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1061
msgid "Location of the verification key which can point to both public and secret keys. Secret keys can only be in the JWK format. Note that 'mp.jwt.verify.publickey.location' will be ignored if this property is set."
msgstr "公開鍵と秘密鍵の両方を指すことができる検証鍵の場所。秘密鍵は JWK 形式でのみ使用できます。このプロパティーが設定されている場合、'mp.jwt.verify.publickey.location' は無視されることに注意してください。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1062
#, fuzzy
msgid "smallrye.jwt.verify.algorithm"
msgstr "smallrye.jwt.verify.アルゴリズム"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1062
msgid "Signature algorithm. This property should only be used for setting a required symmetric algorithm such as `HS256`. It is deprecated for setting asymmetric algorithms such as `ES256` - use 'mp.jwt.verify.publickey.algorithm' instead."
msgstr "署名アルゴリズム。このプロパティーは、`HS256` などの必要な対称アルゴリズムを設定するためにのみ使用する必要があります。`ES256` などの非対称アルゴリズムの設定に使用することは推奨されません。代わりに 'mp.jwt.verify.publickey.algorithm' を使用してください。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1063
msgid "smallrye.jwt.verify.key-format"
msgstr "smallrye.jwt.verify.key-format"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1063
msgid "`ANY`"
msgstr "`ANY`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1063
msgid "Set this property to a specific key format such as `PEM_KEY`, `PEM_CERTIFICATE`, `JWK` or `JWK_BASE64URL` to optimize the way the verification key is loaded."
msgstr "このプロパティーを `PEM_KEY`、`PEM_CERTIFICATE`、`JWK`、`JWK_BASE64URL` などの特定のキー鍵形式に設定して、検証鍵のロード方法を最適化します。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1064
#, fuzzy
msgid "smallrye.jwt.verify.key-provider"
msgstr "smallrye.jwt.verify.key-provider"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1064
#, fuzzy
msgid "`DEFAULT`"
msgstr "`DEFAULT`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1064
#, fuzzy
msgid "By default, PEM, JWK or JWK key sets can be read from the local file system or fetched from URIs as required by MicroProfile JWT specification. Set this property to `AWS_ALB` to support an AWS Application Load Balancer verification key resolution."
msgstr "デフォルトでは、PEM、JWK、または JWK キーセットは、ローカルファイルシステムから読み取るか、MicroProfile JWT 仕様で要求される URI から取得できます。AWS Application Load Balancer の検証キー解決をサポートするには、このプロパティを `AWS_ALB` に設定します。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1065
msgid "smallrye.jwt.verify.relax-key-validation"
msgstr "smallrye.jwt.verify.relax-key-validation"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1091
msgid "false"
msgstr "false"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1065
msgid "Relax the validation of the verification keys, setting this property to `true` will allow public RSA keys with the length less than 2048 bit."
msgstr "検証鍵の検証を緩和します。このプロパティーを `true` に設定すると、2048 ビット未満の長さの公開 RSA 鍵が許可されます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1066
msgid "smallrye.jwt.verify.certificate-thumbprint"
msgstr "smallrye.jwt.verify.certificate-thumbprint"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1066
msgid "If this property is enabled then a signed token must contain either 'x5t' or 'x5t#S256' X509Certificate thumbprint headers. Verification keys can only be in JWK or PEM Certificate key formats in this case. JWK keys must have a 'x5c' (Base64-encoded X509Certificate) property set."
msgstr "このプロパティーが有効になっている場合、署名されたトークンには 'x5t' または 'x5t#S256' X509Certificatex5t 拇印ヘッダーが含まれている必要があります。この場合、検証鍵は JWK または PEM 証明書鍵形式でのみ使用できます。JWK 鍵には、'x5c' (Base64 でエンコードされた X509Certificate) プロパティーが設定されている必要があります。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1067
msgid "smallrye.jwt.token.header"
msgstr "smallrye.jwt.token.header"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1067
msgid "Set this property if another header such as `Cookie` is used to pass the token. This property is deprecated - use 'mp.jwt.token.header'."
msgstr "`Cookie` などの別のヘッダーを使用してトークンを渡す場合は、このプロパティーを設定します。このプロパティーは推奨されていません。'mp.jwt.token.header' を使用してください。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1068
#, fuzzy
msgid "smallrye.jwt.key-cache-size"
msgstr "smallrye.jwt.key-cache-size"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1068
msgid "`100`"
msgstr "`100`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1068
#, fuzzy
msgid "Key cache size. Use this property, as well as `smallrye.jwt.key-cache-time-to-live`, to control the key cache when a key provider such as `AWS_ALB` is configured with `smallrye.jwt.verify.key-provider=AWS_ALB` for resolving the keys dynamically."
msgstr "鍵キャッシュのサイズ。このプロパティは、 `smallrye.jwt.key-cache-time-to-live` と同様に、 `AWS_ALB` のような鍵プロバイダが、鍵を動的に解決するために `smallrye.jwt.verify.key-provider=AWS_ALB` で設定されている場合に、鍵キャッシュを制御するために使用する。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1069
#, fuzzy
msgid "smallrye.jwt.key-cache-time-to-live"
msgstr "smallrye.jwt.key-cache-time-to-live"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1069
msgid "`10`"
msgstr "`10`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1069
#, fuzzy
msgid "Key cache entry time-to-live in minutes. Use this property, as well as `smallrye.jwt.key-cache-size`, to control the key cache when a key provider such as `AWS_ALB` is configured with `smallrye.jwt.verify.key-provider=AWS_ALB` for resolving the keys dynamically."
msgstr "キー・キャッシュ・エントリーの有効期限を分単位で示す。このプロパティは、 `smallrye.jwt.key-cache-size` と同様に、 `AWS_ALB` のような鍵プロバイダが、鍵を動的に解決するために `smallrye.jwt.verify.key-provider=AWS_ALB` で設定されている場合に、鍵キャッシュを制御するために使用する。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1070
#, fuzzy
msgid "smallrye.jwt.token.cookie"
msgstr "smallrye.jwt.token.cookie"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1070
#, fuzzy
msgid "Name of the cookie containing a token. This property will be effective only if `smallrye.jwt.token.header` is set to `Cookie`. This property is deprecated - use `mp.jwt.token.cookie`."
msgstr "トークンを含むクッキーの名前。このプロパティは、 `smallrye.jwt.token.header` が `Cookie` に設定されている場合にのみ有効です。 このプロパティは非推奨です - `mp.jwt.token.cookie` を使用してください。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1071
msgid "smallrye.jwt.always-check-authorization"
msgstr "smallrye.jwt.always-check-authorization"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1071
msgid "Set this property to `true` for `Authorization` header be checked even if the `smallrye.jwt.token.header` is set to `Cookie` but no cookie with a `smallrye.jwt.token.cookie` name exists."
msgstr "`smallrye.jwt.token.header` が `Cookie` に設定されていても、名前が `smallrye.jwt.token.cookie` の Cookie が存在しない場合、`Authorization` ヘッダーがチェックされるようにこのプロパティーを `true` に設定します。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1072
#, fuzzy
msgid "smallrye.jwt.token.schemes"
msgstr "smallrye.jwt.token.schemes"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1072
msgid "`Bearer`"
msgstr "`Bearer`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1072
msgid "Comma-separated list containing an alternative single or multiple schemes, for example, `DPoP`."
msgstr "`DPoP` などの単一または複数の代替スキームを含むコンマ区切りのリスト。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1073
#, fuzzy
msgid "smallrye.jwt.token.kid"
msgstr "smallrye.jwt.token.kid"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1073
msgid "Key identifier. If it is set then the verification JWK key as well every JWT token must have a matching `kid` header."
msgstr "鍵の識別子。設定されている場合、検証 JWK 鍵とすべての JWT トークンには、一致する `kid` ヘッダーが必要です。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1074
#, fuzzy
msgid "smallrye.jwt.time-to-live"
msgstr "smallrye.jwt.time-to-live"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1074
msgid "The maximum number of seconds that a JWT may be issued for use. Effectively, the difference between the expiration date of the JWT and the issued at date must not exceed this value. Setting this property to a non-positive value relaxes the requirement for the token to have a valid 'iat' (issued at) claim."
msgstr "JWT を使用するために発行できる最大秒数。事実上、JWT の有効期限と発行日との差はこの値を超えてはなりません。このプロパティーを正でない値に設定すると、トークンが有効な 'iat' (で発行された) クレームを持つための要件が緩和されます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1075
#, fuzzy
msgid "smallrye.jwt.require.named-principal"
msgstr "smallrye.jwt.require.named-principal"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1075
msgid "`true`"
msgstr "`true`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1075
msgid "If an application relies on `java.security.Principal` returning a name then a token must have a `upn` or `preferred_username` or `sub` claim set. Setting this property will result in SmallRye JWT throwing an exception if none of these claims is available for the application code to reliably deal with a non-null `Principal` name."
msgstr "アプリケーションが名前を返す `java.security.Principal` に依存している場合、トークンには `upn` または `preferred_username` または `sub` クレームが設定されている必要があります。このプロパティーを設定すると、アプリケーションコードが null 以外の `Principal` 名を確実に処理するためにこれらのクレームのいずれも使用できない場合に、SmallRye JWT は例外を出力します。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1076
msgid "smallrye.jwt.path.sub"
msgstr "smallrye.jwt.path.sub"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1076
msgid "Path to the claim containing the subject name. It starts from the top level JSON object and can contain multiple segments where each segment represents a JSON object name only, example: `realms/subject`. This property can be used if a token has no 'sub' claim but has the subject set in a different claim. Use double quotes with the namespace qualified claims."
msgstr "件名を含むクレームへのパス。これはトップレベルの JSON オブジェクトから始まり、複数のセグメントを含めることができます。各セグメントは JSON オブジェクト名のみを表します (例: `realms/subject`)。このプロパティーは、トークンに sub クレームがないが、サブジェクトが別のクレームに設定されている場合に使用できます。namespace で修飾されたクレームには二重引用符を使用します。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1077
msgid "smallrye.jwt.claims.sub"
msgstr "smallrye.jwt.claims.sub"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1077
msgid "This property can be used to set a default sub claim value when the current token has no standard or custom `sub` claim available. Effectively this property can be used to customize `java.security.Principal` name if no `upn` or `preferred_username` or `sub` claim is set."
msgstr "現在のトークンに使用可能な標準またはカスタムの `sub` クレームがない場合に、このプロパティーを使用して、デフォルトのサブクレーム値を設定できます。事実上、このプロパティーを使用して、`upn`、`preferred_username`、`sub`クレームが設定されていない場合に `java.security.Principal` 名をカスタマイズできます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1078
#, fuzzy
msgid "smallrye.jwt.path.groups"
msgstr "smallrye.jwt.path.グループ"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1078
msgid "Path to the claim containing the groups. It starts from the top level JSON object and can contain multiple segments where each segment represents a JSON object name only, example: `realm/groups`. This property can be used if a token has no 'groups' claim but has the groups set in a different claim. Use double quotes with the namespace qualified claims."
msgstr "グループを含むクレームへのパス。これはトップレベルの JSON オブジェクトから始まり、複数のセグメントを含めることができます。各セグメントは JSON オブジェクト名のみを表します (例: `realm/groups`)。このプロパティーは、トークンに 'groups' クレームがないが、グループが別のクレームに設定されている場合に使用できます。namespace で修飾されたクレームには二重引用符を使用します。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1079
msgid "smallrye.jwt.groups-separator"
msgstr "smallrye.jwt.groups-separator"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1079
#, fuzzy
msgid "space"
msgstr "スペース"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1079
msgid "Separator for splitting a string which may contain multiple group values. It will only be used if the `smallrye.jwt.path.groups` property points to a custom claim whose value is a string. The default value is a single space because a standard OAuth2 `scope` claim may contain a space separated sequence."
msgstr "複数のグループ値を含む可能性のある文字列を分割するためのセパレーター。これは、`smallrye.jwt.path.groups` プロパティーが値が文字列のカスタムクレームを指している場合にのみ使用されます。標準の OAuth2 `scope` クレームにはスペースで区切られたシーケンスが含まれている可能性があるため、デフォルト値はスペース 1 個です。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1080
#, fuzzy
msgid "smallrye.jwt.claims.groups"
msgstr "smallrye.jwt.claims.グループ"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1080
msgid "This property can be used to set a default groups claim value when the current token has no standard or custom groups claim available."
msgstr "このプロパティーを使用して、現在のトークンに使用可能な標準またはカスタムのグループクレームがない場合に、デフォルトのグループクレーム値を設定できます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1081
#, fuzzy
msgid "smallrye.jwt.jwks.refresh-interval"
msgstr "smallrye.jwt.jwks.refresh-interval"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1081
msgid "60"
msgstr "60"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1081
msgid "JWK cache refresh interval in minutes. It will be ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL based JWK set and no HTTP `Cache-Control` response header with a positive `max-age` parameter value is returned from a JWK HTTPS endpoint."
msgstr "JWK キャッシュの更新間隔 (分単位)。`mp.jwt.verify.publickey.location` が HTTP または HTTPS URL ベースの JWK セットを指し、正の `max-age` パラメーター値を持つ HTTP `Cache-Control` レスポンスヘッダーが JWK HTTPS エンドポイントから返されない限り無視されます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1082
#, fuzzy
msgid "smallrye.jwt.jwks.forced-refresh-interval"
msgstr "smallrye.jwt.jwks.forced-refresh-interval"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1082
msgid "30"
msgstr "30"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1082
msgid "Forced JWK cache refresh interval in minutes which is used to restrict the frequency of the forced refresh attempts which may happen when the token verification fails due to the cache having no JWK key with a `kid` property matching the current token's `kid` header. It will be ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL based JWK set."
msgstr "強制 JWK キャッシュ更新間隔 (分単位)。現在のトークンの `kid` ヘッダーと一致する `kid` プロパティーを持つ JWK キーがキャッシュにないためにトークンの検証が失敗した場合に発生する可能性がある強制更新の試行頻度を制限するために使用されます。`mp.jwt.verify.publickey.location` が HTTP または HTTPS URL ベースの JWK セットを指していない限り、無視されます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1083
#, fuzzy
msgid "smallrye.jwt.expiration.grace"
msgstr "smallrye.jwt.expiration.grace（スモールライ"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1083
msgid "0"
msgstr "0"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1083
msgid "Expiration grace in seconds. By default an expired token will still be accepted if the current time is no more than 1 min after the token expiry time. This property is deprecated. Use `mp.jwt.verify.clock.skew` instead."
msgstr "有効期限を秒単位で指定します。デフォルトでは、現在時刻がトークンの有効期限から1分以内であれば、期限切れのトークンはまだ受け入れられます。このプロパティは非推奨です。代わりに `mp.jwt.verify.clock.skew` を使用してください。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1084
#, fuzzy
msgid "smallrye.jwt.verify.aud"
msgstr "smallrye.jwt.verify.aud"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1084
msgid "Comma separated list of the audiences that a token `aud` claim may contain. This property is deprecated - use `mp.jwt.verify.audiences`."
msgstr "トークン `aud` クレームに含まれる可能性のあるオーディエンスのコンマ区切りリスト。このプロパティーは推奨されません。`mp.jwt.verify.audiences` を使用してください。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1085
#, fuzzy
msgid "smallrye.jwt.required.claims"
msgstr "smallrye.jwt.required.クレーム"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1085
msgid "Comma separated list of the claims that a token must contain."
msgstr "トークンに含める必要のあるクレームのコンマ区切りリスト。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1086
msgid "smallrye.jwt.decrypt.key.location"
msgstr "smallrye.jwt.decrypt.key.location"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1086
#, fuzzy
msgid "Config property allows for an external or internal location of Private Decryption Key to be specified. This property is deprecated - use `mp.jwt.decrypt.key.location`."
msgstr "設定プロパティでは、秘密復号鍵の外部または内部の場所を指定できます。このプロパティは非推奨です。 `mp.jwt.decrypt.key.location` を使用してください。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1087
#, fuzzy
msgid "smallrye.jwt.decrypt.algorithm"
msgstr "smallrye.jwt.decrypt.アルゴリズム"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1087
msgid "`RSA_OAEP`"
msgstr "`RSA_OAEP`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1087
msgid "Decryption algorithm."
msgstr "復号化アルゴリズム。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1088
msgid "smallrye.jwt.decrypt.key"
msgstr "smallrye.jwt.decrypt.key"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1088
msgid "Decryption key supplied as a string."
msgstr "文字列として提供される復号化キー。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1089
#, fuzzy
msgid "smallrye.jwt.token.decryption.kid"
msgstr "smallrye.jwt.token.decryption.kid"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1089
msgid "Decryption Key identifier. If it is set then the decryption JWK key as well every JWT token must have a matching `kid` header."
msgstr "復号化キー識別子。設定されている場合、復号化 JWK キーとすべての JWT トークンには、一致する `kid` ヘッダーが必要です。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1090
#, fuzzy
msgid "smallrye.jwt.client.tls.certificate.path"
msgstr "smallrye.jwt.client.tls.certificate.path。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1090
msgid "Path to TLS trusted certificate which may need to be configured if the keys have to be fetched over `HTTPS`."
msgstr "キーを `HTTPS` 経由でフェッチする必要がある場合は、TLS の信頼できる証明書へのパスを設定する必要があります。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1091
#, fuzzy
msgid "smallrye.jwt.client.tls.trust-all"
msgstr "smallrye.jwt.client.tls.trust-all"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1091
msgid "Trust all the hostnames. If the keys have to be fetched over `HTTPS` and this property is set to `true` then all the hostnames are trusted by default."
msgstr "すべてのホスト名を信頼します。キーを `HTTPS` 経由でフェッチする必要があり、このプロパティーが `true` に設定されている場合、デフォルトですべてのホスト名が信頼されます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1092
#, fuzzy
msgid "smallrye.jwt.client.tls.hosts"
msgstr "smallrye.jwt.client.tls.hosts"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1092
msgid "Set of trusted hostnames. If the keys have to be fetched over `HTTPS` and `smallrye.jwt.client.tls.trust-all` is set to `false` then this property can be used to configure the trusted hostnames."
msgstr "信頼できるホスト名のセット。キーを `HTTPS` 経由でフェッチする必要があり、`smallrye.jwt.client.tls.trust-all` が `false` に設定されている場合、このプロパティーを使用して信頼できるホスト名を設定できます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1093
msgid "smallrye.jwt.http.proxy.host"
msgstr "smallrye.jwt.http.proxy.host"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1093
msgid "HTTP proxy host."
msgstr "HTTP プロキシーホスト。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1094
msgid "smallrye.jwt.http.proxy.port"
msgstr "smallrye.jwt.http.proxy.port"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1094
msgid "80"
msgstr "80"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1094
msgid "HTTP proxy port."
msgstr "HTTP プロキシーポート。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1095
#, fuzzy
msgid "smallrye.jwt.keystore.type"
msgstr "smallrye.jwt.keystore.type。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1095
msgid "`JKS`"
msgstr "`JKS`"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1095
msgid "This property can be used to customize a keystore type if either `mp.jwt.verify.publickey.location` or mp.jwt.decrypt.key.location` points to a `KeyStore` file. If it is not set then the file name will be checked to determine the keystore type before defaulting to `JKS`."
msgstr "`mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` が `KeyStore` ファイルを指している場合、このプロパティーを使用してキーストアタイプをカスタマイズできます。設定されていない場合は、ファイル名がチェックされ、`JKS` がデフォルトで設定される前にキーストアタイプが決定されます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1096
msgid "smallrye.jwt.keystore.provider"
msgstr "smallrye.jwt.keystore.provider"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1096
msgid "This property can be used to customize a `KeyStore` provider if `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "`mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` が `KeyStore` ファイルを指している場合、このプロパティーを使用して `KeyStore` プロバイダーをカスタマイズできます。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1097
#, fuzzy
msgid "smallrye.jwt.keystore.password"
msgstr "smallrye.jwt.keystore.password。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1097
msgid "Keystore password. If `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` then this property has be set."
msgstr "キーストアのパスワード。`mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` の場合、このプロパティーが設定されています。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1098
#, fuzzy
msgid "smallrye.jwt.keystore.verify.key.alias"
msgstr "smallrye.jwt.keystore.verify.key.alias"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1098
msgid "This property has to be set to identify a public verification key which will be extracted from `KeyStore` from a matching certificate if `mp.jwt.verify.publickey.location` points to a `KeyStore` file."
msgstr "このプロパティーは、`mp.jwt.verify.publickey.location`が`KeyStore`ファイルを指している場合に、`KeyStore` から抽出される公開検証鍵を一致する証明書から識別するために設定する必要があります。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1099
#, fuzzy
msgid "smallrye.jwt.keystore.decrypt.key.alias"
msgstr "smallrye.jwt.keystore.decrypt.key.alias"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1099
msgid "This property has to be set to identify a private decryption key if `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "This property has to be set to identify a private decryption key if `mp.jwt.decrypt.key.location` points to a `KeyStore` file."

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1100
#, fuzzy
msgid "smallrye.jwt.keystore.decrypt.key.password"
msgstr "smallrye.jwt.keystore.decrypt.key.password。"

#. type: Table
#: upstream/_versions/main/guides/security-jwt.adoc:1100
msgid "This property may be set if a private decryption key's password in `KeyStore` is different to `smallrye.jwt.keystore.password` when `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "This property may be set if a private decryption key's password in `KeyStore` is different to `smallrye.jwt.keystore.password` when `mp.jwt.decrypt.key.location` points to a `KeyStore` file."

#. type: Title ==
#: upstream/_versions/main/guides/security-jwt.adoc:1103
msgid "References"
msgstr "リファレンス"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1105
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1106
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1107
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1108
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1109
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1110
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1111
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1112
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1113
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[認証メカニズムの組み合わせ]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-jwt.adoc:1114
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"
