msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "TLS registry reference"
msgstr "TLSレジストリ参照"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS registry is a Quarkus extension centralizing the TLS configuration for the application.\n"
"It allows to define the TLS configuration in a single place and to reference it from multiple places in the application."
msgstr "TLSレジストリは、アプリケーションのTLS設定を一元化するQuarkusの拡張機能です。これにより、TLSの設定を1か所で定義し、アプリケーションの複数の場所から参照することができます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS extension should be automatically added to your project as soon as you use a compatible extension.\n"
"For example, if your application uses Quarkus REST, gRPC or reactive routes, the TLS registry is automatically added to your project."
msgstr "互換性のある拡張機能を使用すると、TLS拡張機能が自動的にプロジェクトに追加されます。たとえば、アプリケーションでQuarkus REST、gRPC、リアクティブルートを使用している場合、TLSレジストリが自動的にプロジェクトに追加されます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using TLS registry"
msgstr "TLSレジストリの使用"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a TLS connection, and more specifically the key stores and trust stores, you use the `quarkus.tls.*` properties."
msgstr "TLS接続、特に鍵ストアとトラストストアを設定するには、 `quarkus.tls.*` プロパティを使用します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Configuration directly under `quarkus.tls` is the default configuration that will be used by all the TLS connections in the application.\n"
"However, you can also have specific configurations for specific connections by using the `quarkus.tls.<name>.*` properties."
msgstr "`quarkus.tls` 直下の設定は、アプリケーションのすべての TLS 接続で使用されるデフォルトの設定です。しかし、 `quarkus.tls.<name>.*` のプロパティを使うことで、特定の接続に対して特定の設定をすることもできます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the HTTP server to use https://"
msgstr "https://、HTTPサーバーを設定します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the HTTP server to use HTTPS, you can use the following configuration:"
msgstr "HTTPサーバーがHTTPSを使用するように構成するには、以下の構成を使用できます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "So you a `p12` (PKCS12) key store, use the following configuration:"
msgstr "そのため、 `p12` （PKCS12）キーストアを使用するには、以下の設定を使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Instead of the default configuration, you can use a named configuration:"
msgstr "デフォルト設定の代わりに、名前付き設定を使用することができます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure a client to use https://"
msgstr "https:// を使用するようにクライアントを設定します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "As an example to illustrate client configuration, we will use a gRPC client:"
msgstr "クライアントの設定を説明する例として、gRPCクライアントを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configuring mTLS"
msgstr "mTLSの設定"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To configure mTLS, you need to configure both the server and the client.\n"
"Both will receive a key store and a trust store:"
msgstr "mTLSを設定するには、サーバーとクライアントの両方を設定する必要があります。どちらも鍵ストアとトラストストアを受け取ります："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "the server key store contains the server certificate and private key"
msgstr "サーバー鍵ストアには、サーバー証明書と秘密鍵が格納されています。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "the client key store contains the client certificate and private key"
msgstr "クライアント鍵ストアには、クライアント証明書と秘密鍵が格納されています。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "the server trust store contains the client certificate (to authenticate the client)"
msgstr "サーバーのトラストストアには、クライアント証明書（クライアントを認証するため）が含まれます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "the client trust store contains the server certificate (to authenticate the server)"
msgstr "クライアントのトラストストアには、サーバー証明書（サーバーを認証するため）が含まれます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Referencing a TLS configuration"
msgstr "TLS設定の参照"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Once you have configured a _named_ configuration using `quarkus.tls.<name>`, you need to reference it.\n"
"This is done using the `tls-configuration-name` property:"
msgstr "`quarkus.tls.<name>` を使用して _名前付き_ 構成を構成したら、それを参照する必要があります。これには `tls-configuration-name` プロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configuring TLS"
msgstr "TLSの設定"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Configuring TLS is mainly about key stores and trust stores.\n"
"The configuration depends on the format (`pem`, `p12`, `jks`...).\n"
"There are other important properties too.\n"
"This section details the various properties you can use to configure TLS."
msgstr "TLSの設定は主にキーストアとトラストストアについてです。設定はフォーマット（ `pem` , `p12` , `jks` ...）によって異なります。他にも重要なプロパティがあります。このセクションでは、TLSを構成するために使用できるさまざまなプロパティについて詳しく説明します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Key stores"
msgstr "主要店舗"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Key stores are used to store the private key and the certificate.\n"
"They are mainly used on the server-side, but can also be used on the client-side when mTLS is used."
msgstr "キーストアは秘密鍵と証明書を保管するために使用されます。主にサーバー側で使用されますが、mTLSを使用する場合はクライアント側でも使用できます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PEM key stores"
msgstr "PEMキーストア"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"PEM key stores are composed of a list of pair of two files: the certificate and the private key.\n"
"The certificate file is a `.crt` or `.pem` file, and the private key file is often a `.key` file."
msgstr "PEMキーストアは、証明書と秘密鍵の2つのファイルのペアのリストで構成されます。証明書ファイルは `.crt` または `.pem` ファイルで、秘密鍵ファイルは多くの場合 `.key` ファイルです。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a PEM key store, use the following properties:"
msgstr "PEMキーストアを構成するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"In general, you will only need one pair of certificate and private key.\n"
"The certificate may contain multiple certificates (a chain), but there should be one private key."
msgstr "一般的に、証明書と秘密鍵のペアは1つだけ必要です。証明書には複数の証明書（チェーン）が含まれていてもかまいませんが、秘密鍵は1つでなければなりません。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When multiple pairs are configured, the selection is done using SNI (Server Name Indication).\n"
"The client will send the server name it wants to connect to, and the server will select the appropriate pair of certificate and private key.\n"
"Make sure xref:./tls-registry-reference.adoc#sni[SNI] is enabled on both the client and server to use this feature."
msgstr "複数のペアが設定されている場合、その選択はSNI（Server Name Indication）を使って行われます。クライアントが接続先のサーバ名を送信すると、サーバは適切な証明書と秘密鍵のペアを選択します。この機能を使用するには、クライアントとサーバーの両方で xref:./tls-registry-reference.adoc#sni[SNIが] 有効になっていることを確認してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When configuring multiple key/cert pairs, the order is following the lexicographical order of the name (`a` and `b` in the previous snippet). So, the first pair is the one with the lowest lexicographical order. You can define the order by using the `quarkus.tls.key-store.pem.order` property, for example: `quarkus.tls.key-store.pem.order=b,c,a`. This is important when using SNI, as the first pair is the default one."
msgstr "複数の鍵/Certペアを設定する場合、順序は名前の辞書的順序に従います（前のスニペットでは `a` と `b` ）。つまり、最初のペアは辞書順が最も低いペアになります。順序は、 `quarkus.tls.key-store.pem.order` プロパティを使用して定義することができます（例： `quarkus.tls.key-store.pem.order=b,c,a` ）。SNIを使用する場合、最初のペアがデフォルトとなるため、これは重要です。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PKCS12 key stores"
msgstr "PKCS12 キーストア"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"PKCS12 key stores are a single file containing the certificate and the private key.\n"
"To configure a PKCS12 key store, use the following properties:"
msgstr "PKCS12 キーストアは、証明書と秘密鍵を含む単一のファイルです。PKCS12 キーストアを構成するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`.p12` files are password-protected, so you need to provide the password to open the key store.\n"
"Also, they can include more than one certificate and private key.\n"
"In this case, you can:"
msgstr "`.p12` ファイルはパスワードで保護されているため、鍵ストアを開くにはパスワードを入力する必要があります。また、複数の証明書と秘密鍵を含めることもできます。この場合は"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "either provide the alias of the certificate and private key you want to use"
msgstr "使用したい証明書と秘密鍵のエイリアスを指定します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "or use SNI to select the appropriate certificate and private key (all keys must use the same password)"
msgstr "またはSNIを使用して、適切な証明書と秘密鍵を選択します（すべての鍵で同じパスワードを使用する必要があります）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the alias, use the following properties:"
msgstr "エイリアスを設定するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "JKS key stores"
msgstr "JKSキーストア"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"JKS key stores are a single file containing the certificate and the private key.\n"
"Note that the JKS format should be avoided as it is less secure than PKCS12.\n"
"To configure a JKS key store, use the following properties:"
msgstr "JKS鍵ストアは、証明書と秘密鍵を含む単一のファイルです。JKS 形式は PKCS12 よりも安全性が低いため、避けるべきであることに注意してください。JKS キーストアを構成するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`.jks` files are password-protected, so you need to provide the password to open the key store.\n"
"Also, they can include more than one certificate and private key.\n"
"In this case, you can:"
msgstr "`.jks` ファイルはパスワードで保護されているため、鍵ストアを開くにはパスワードを入力する必要があります。また、複数の証明書と秘密鍵を含めることもできます。この場合は"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "SNI"
msgstr "スニ"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Server Name Indication (SNI) is a TLS extension that allows a client to specify the hostname it is attempting to connect to during the TLS handshake.\n"
"It enables a server to present different TLS certificates for multiple domains on a single IP address, facilitating secure communication for virtual hosting scenarios."
msgstr "Server Name Indication (SNI) はTLS拡張機能で、TLSハンドシェイク中にクライアントが接続先のホスト名を指定できるようにするものです。これにより、サーバーは1つのIPアドレスで複数のドメインの異なるTLS証明書を提示できるようになり、バーチャルホスティングシナリオの安全な通信が容易になります。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To enable SNI, use the following property:"
msgstr "SNIを有効にするには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "With this setting enabled, the client indicate the server name during the TLS handshake, allowing the server to select the right certificate:"
msgstr "この設定を有効にすると、クライアントはTLSハンドシェイク中にサーバー名を示し、サーバーが適切な証明書を選択できるようになります："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When configuring the keystore with PEM files, multiple CRT/Key must be given."
msgstr "PEMファイルでキーストアを構成する場合は、複数のCRT/Keyを指定する必要があります。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When configuring the keystore with a JKS or a P12 file, it selects one alias based on the SNI hostname. In this case, all the keystore password and alias password must be the same. Do not set the `alias` property in this case."
msgstr "JKSまたはP12ファイルを使用してキーストアを構成する場合、SNIホスト名に基づいて1つのエイリアスが選択されます。この場合、キーストアのパスワードとエイリアスのパスワードはすべて同じでなければなりません。この場合、 `alias` プロパティは設定しないでください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Credential providers"
msgstr "資格プロバイダー"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Instead of passing the key store password and alias password in the configuration, you can use a credential provider."
msgstr "キー・ストアのパスワードとエイリアスのパスワードをコンフィギュレーションで渡す代わりに、クレデンシャル・プロバイダを使うことができます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"A credential provider offers a way to retrieve the key store password and alias password.\n"
"Note that the credential provider is only used if the password / alias password are not set in the configuration."
msgstr "クレデンシャル・プロバイダは、キーストアパスワードとエイリアスパスワードを取得する方法を提供します。クレデンシャル・プロバイダは、パスワードやエイリアスパスワードが設定されていない場合にのみ使用されることに注意してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a credential provider, use the following properties:"
msgstr "クレデンシャル・プロバイダを構成するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The credential provider can only be used with PKCS12 and JKS key stores."
msgstr "クレデンシャル・プロバイダは、PKCS12 および JKS キーストアでのみ使用できます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Trust stores"
msgstr "信託店舗"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Trust stores are used to store the certificates of the trusted parties.\n"
"They are generally used on the client-side, and on the server-side when mTLS is used."
msgstr "トラストストアは、信頼できる当事者の証明書を保存するために使用されます。一般的にはクライアント側で使用され、mTLSを使用する場合はサーバー側で使用されます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PEM trust stores"
msgstr "PEMトラスト・ストア"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"PEM trust stores are composed of a list of `.crt` or `.pem` files.\n"
"Each of them contains a certificate."
msgstr "PEM トラストストアは、 `.crt` または `.pem` ファイルのリストで構成されます。それぞれのファイルには証明書が含まれています。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a PEM trust store, use the following properties:"
msgstr "PEMトラストストアを構成するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PKCS12 trust stores"
msgstr "PKCS12トラストストア"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"PKCS12 trust stores are a single file containing the certificates.\n"
"When multiple certificates are included, you can use the alias to select the appropriate certificate."
msgstr "PKCS12 トラストストアは、証明書を含む単一のファイルです。複数の証明書が含まれている場合は、エイリアスを使用して適切な証明書を選択できます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a PKCS12 trust store, use the following properties:"
msgstr "PKCS12 トラストストアを構成するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`.p12` files are password-protected, so you need to provide the password to open the trust store.\n"
"However, unlike for key stores, the alias does not require a password (because it's the public certificate and not a private key)."
msgstr "`.p12` ファイルはパスワードで保護されているため、トラストストアを開くにはパスワードを入力する必要があります。ただし、鍵ストアとは異なり、エイリアスにはパスワードは必要ありません（秘密鍵ではなく公開証明書だからです）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "JKS trust stores"
msgstr "JKSトラストストア"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"JKS trust stores are a single file containing the certificates.\n"
"When multiple certificates are included, you can use the alias to select the appropriate certificate.\n"
"Note that the JKS format should be avoided as it is less secure than PKCS12."
msgstr "JKSトラストストアは、証明書を含む単一のファイルです。複数の証明書が含まれている場合は、エイリアスを使用して適切な証明書を選択できます。JKS フォーマットは PKCS12 よりも安全性が低いため、避けるべきであることに注意してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a JKS trust store, use the following properties:"
msgstr "JKSトラストストアを設定するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`.jks` files are password-protected, so you need to provide the password to open the trust store.\n"
"However, unlike for key stores, the alias does not require a password (because it's the public certificate and not a private key)."
msgstr "`.jks` ファイルはパスワードで保護されているため、トラストストアを開くにはパスワードを入力する必要があります。ただし、鍵ストアとは異なり、エイリアスにはパスワードは必要ありません（秘密鍵ではなく公開証明書だからです）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Instead of passing the trust store password in the configuration, you can use a credential provider."
msgstr "設定でトラストストアのパスワードを渡す代わりに、クレデンシャル・プロバイダを使うことができます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"A credential provider offers a way to retrieve passwords and other credentials.\n"
"Note that the credential provider is only used if the password is not set in the configuration."
msgstr "クレデンシャル・プロバイダーは、パスワードやその他のクレデンシャルを取得する方法を提供します。クレデンシャルプロバイダはパスワードが設定されていない場合にのみ使われることに注意してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The credential provider can only be used with PKCS12 and JKS trust stores."
msgstr "クレデンシャル・プロバイダは、PKCS12 および JKS トラスト・ストアでのみ使用できます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Other properties"
msgstr "その他の物件"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "While key stores and trust stores are the most important properties, there are other properties you can use to configure TLS."
msgstr "キーストアとトラストストアは最も重要なプロパティですが、TLSを設定するために使用できるプロパティは他にもあります。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "while the following examples use the _default_ configuration, you can use the _named_ configuration by prefixing the properties with the name of the configuration."
msgstr "以下の例では _デフ ォ ル ト_ 設定を用い ますが、 プ ロ パテ ィ の前に設定名を付け る こ と に よ っ て、 _名前付 き_ 設定を用い る こ と も で き ます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Cipher suites"
msgstr "暗号スイート"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The cipher suites are the list of ciphers that can be used during the TLS handshake.\n"
"You can configure the ordered list of enabled cipher suites.\n"
"If not configured, a reasonable default is selected from the built-in ciphers.\n"
"However, when configured, it takes precedence over the default suite defined by the SSL engine in use."
msgstr "暗号スイートは、TLSハンドシェイク中に使用できる暗号のリストです。有効な暗号スイートの順序リストを構成できます。設定されていない場合、組み込みの暗号から妥当なデフォルトが選択されます。しかし、設定されると、使用中の SSL エンジンによって定義されたデフォルトのスイートよりも優先されます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the cipher suites, use the following property:"
msgstr "暗号スイートを設定するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "TLS protocol versions"
msgstr "TLSプロトコルのバージョン"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS protocol versions are the list of protocols that can be used during the TLS handshake.\n"
"You can configure the ordered list of enabled TLS protocols.\n"
"If not configured , it defaults to `TLSv1.3`, `TLSv1.2`."
msgstr "TLSプロトコルのバージョンは、TLSハンドシェイク中に使用できるプロトコルのリストです。有効なTLSプロトコルの順序リストを設定できます。設定されていない場合、デフォルトは `TLSv1.3` 、 `TLSv1.2` です。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Are supported: `TLSv1`, `TLSv1.1`, `TLSv1.2`, `TLSv1.3`."
msgstr "サポートされています： `TLSv1` `TLSv1.1` , `TLSv1.2` , `TLSv1.3` ."

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To only enable `TLSv1.3`, configure the following property:"
msgstr "`TLSv1.3` のみを有効にするには、以下のプロパティを設定します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Handshake timeout"
msgstr "ハンドシェークタイムアウト"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When a TLS connection is established, the handshake phase is the first step.\n"
"During this phase, the client and server exchange information to establish the connection, typically the cipher suite, the TLS protocol version, the certification validation and so on."
msgstr "TLS接続が確立されると、最初にハンドシェイクフェーズが行われます。このフェーズの間、クライアントとサーバーは接続を確立するための情報を交換します。通常、暗号スイート、TLSプロトコルのバージョン、認証検証などがあります。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the timeout for the handshake phase, use the following property:"
msgstr "ハンドシェーク・フェーズのタイムアウトを設定するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "ALPN"
msgstr "ALPN"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Application-Layer Protocol Negotiation (ALPN) is a TLS extension that allows the client and server during the TLS handshake to negotiate which protocol they will use for communication.\n"
"ALPN enables more efficient communication by allowing the client to indicate its preferred application protocol to the server before the TLS connection is established."
msgstr "Application-Layer Protocol Negotiation (ALPN)はTLSの拡張で、TLSハンドシェイク中にクライアントとサーバーが通信に使用するプロトコルをネゴシエートできるようにするものです。ALPNは、TLS接続が確立する前に、クライアントがサーバーに優先するアプリケーションプロトコルを示すことで、より効率的な通信を可能にします。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "This helps in scenarios such as HTTP/2 where multiple protocols may be available, allowing for faster protocol selection."
msgstr "これは、HTTP/2のような複数のプロトコルが利用可能なシナリオで役立ち、より高速なプロトコル選択を可能にします。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"ALPN is enabled by default.\n"
"To disable it, use the following property:"
msgstr "ALPNはデフォルトで有効になっています。無効にするには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Certificate Revocation List (CRL)"
msgstr "証明書失効リスト（CRL）"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"A Certificate Revocation List (CRL) is a list of certificates that have been revoked by the issuing Certificate Authority (CA) before their scheduled expiration date.\n"
"When a certificate is compromised, no longer needed, or deemed invalid for any reason, the CA adds it to the CRL to inform relying parties not to trust the certificate anymore."
msgstr "証明書失効リスト(CRL)とは、発行した認証局(CA)が予定された有効期限前に失効させた証明書のリストです。証明書が危殆化したり、不要になったり、何らかの理由で無効とみなされたりすると、CA はその証明書を CRL に追加し、依拠当事者にその証明書を信用しないように通知します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"You can configure the CRL with the list of certificate files you do not trust anymore.\n"
"Two formats are allowed: DER and PKCS#7 (also known as P7B)."
msgstr "CRL には、信頼できなくなった証明書ファイルのリストを設定できます。使用できる形式は 2 つあります：DER と PKCS#7（P7Bとしても知られています）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When using the DER format, you must pass DER-encoded CRLs."
msgstr "DER形式を使用する場合は、DERエンコードされたCRLを渡す必要があります。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When using the PKCS#7 format, you must pass PKCS#7 `SignedData` object, with the only significant field being `crls`."
msgstr "PKCS#7 フォーマットを使用する場合、PKCS#7 `SignedData` オブジェクトを渡す必要があります。重要なフィールドは `crls` だけです。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the CRL, use the following property:"
msgstr "CRLを設定するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Trusting all certificates and hostname verification"
msgstr "すべての証明書の信頼とホスト名の検証"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "These two properties should not be used in production."
msgstr "この2つのプロパティは本番では使用しないでください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"You can configure your TLS connection to trust all certificates and to disable the hostname verification.\n"
"These are two different steps:"
msgstr "すべての証明書を信頼するようにTLS接続を設定し、ホスト名検証を無効にすることができます。これらは2つの異なる手順です："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "trusting all certificates ignores the certificate validation, so all certificates are trusted. It is useful for testing with self-signed certificates, but should not be used in production."
msgstr "は証明書の検証を無視するので、すべての証明書が信頼されます。自己署名証明書のテストには便利ですが、本番環境では使用しないでください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "hostname verification is the process of verifying the server's identity. It is useful to prevent man-in-the-middle attacks. It often defaults to `HTTPS` or `LDAPS`."
msgstr "ホスト名検証は、サーバーの身元を検証するプロセスです。中間者攻撃を防ぐのに便利です。多くの場合、デフォルトは `HTTPS` または `LDAPS` です。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To trust all certificates, use the following property:"
msgstr "すべての証明書を信頼するには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To disable the hostname verification, use the following property:"
msgstr "ホスト名検証を無効にするには、以下のプロパティを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "The following table lists the supported properties:"
msgstr "次の表は、サポートされるプロパティの一覧です:"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The registry API"
msgstr "レジストリ API"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "While extensions will automatically use the TLS registry, you can also use the registry API to access the TLS configuration programmatically."
msgstr "拡張モジュールは自動的に TLS レジストリを使用しますが、 レジストリ API を使って TLS 設定にプログラムでアクセスすることもできます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To access the TLS configuration, inject the `TlsConfigurationRegistry` bean and gets the TLS configuration by name (or the default one):"
msgstr "TLS構成にアクセスするには、 `TlsConfigurationRegistry` Beanを注入し、名前（またはデフォルトのもの）でTLS構成を取得します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `TlsConfiguration` object contains the key stores, trust stores, cipher suites, protocols, and other properties.\n"
"It also provides a way to create an `SSLContext` from the configuration."
msgstr "`TlsConfiguration` オブジェクトには鍵ストア、トラストストア、暗号スイート、プロトコル、その他のプロパティが含まれます。また、設定から `SSLContext` 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "As Vert.x is omnipresent in Quarkus, you can also use the `TlsConfiguration` object to configure the Vert.x client or server such as `KeyCertOptions`, `TrustOptions`, and so on."
msgstr "Vert.xはQuarkusに遍在しているため、 `KeyCertOptions` 、 `TrustOptions` などのように、 `TlsConfiguration` オブジェクトを使用してVert.xクライアントまたはサーバーを設定することもできます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Registering a certificate from an extension"
msgstr "エクステンションからの証明書登録"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"This section is only for extension developers.\n"
"An extension can register a certificate in the TLS registry.\n"
"This is useful when an extension needs to provide a certificate to the application or provides a different format."
msgstr "このセクションは拡張機能開発者向けです。拡張モジュールは TLS レジストリに証明書を登録できます。これは、拡張モジュールが証明書をアプリケーションに提供する必要がある場合や、 異なるフォーマットを提供する場合に便利です。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To achieve this, the extension _processor_ must produce a `TlsCertificateBuildItem`.\n"
"A `TlsCertificateBuildItem` is composed of a name and a `CertificateSupplier`."
msgstr "これを実現するために、 _エクステンション・プロセッサーは_ `TlsCertificateBuildItem` を生成しなければなりません。 `TlsCertificateBuildItem` は名前と `CertificateSupplier` で構成されます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The certificate supplier is a runtime object that is generally retrieved using a recorder method.\n"
"Here is an example of a certificate supplier:"
msgstr "証明書サプライヤーはランタイム・オブジェクトであり、通常、レコーダー・メソッドを使用して取得されます。以下は、証明書サプライヤの例です："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Startup checks"
msgstr "スタートアップ・チェック"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When the application starts, the TLS registry performs some checks to ensure the configuration is correct:"
msgstr "アプリケーションが起動すると、TLSレジストリは設定が正しいことを確認するためにいくつかのチェックを行います："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "the key stores and trust stores are accessible"
msgstr "鍵ストアとトラストストアにアクセス可能"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "the aliases are available and accessible in the key stores and trust stores"
msgstr "エイリアスは、キーストアとトラストストアで利用可能でアクセス可能です。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "the certificates are valid"
msgstr "証明書は有効です"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "the cipher suites and protocols are valid"
msgstr "暗号スイートとプロトコルが有効であること"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "the CRLs are valid"
msgstr "CRLが有効であること"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "If any of these checks fail, the application will fail to start."
msgstr "これらのチェックのいずれかが失敗すると、アプリケーションの起動に失敗します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Reloading certificates"
msgstr "リローディング証明書"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `TlsConfiguration` obtained from the `TLSConfigurationRegistry` includes a mechanism for reloading certificates.\n"
"The `reload` method refreshes the key stores and trust stores, typically by reloading them from the file system."
msgstr "`TLSConfigurationRegistry` から得られる `TlsConfiguration` には、証明書をリロードするメカニズムが含まれています。 `reload` メソッドは鍵ストアとトラストストアをリフレッシュし、通常はファイルシステムからリロードします。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The reload operation is not automatic and must be triggered manually.\n"
"Additionally, the `TlsConfiguration` implementation must support reloading (which is the case for the configured certificate)."
msgstr "リロード操作は自動的ではなく、手動でトリガーする必要があります。さらに、 `TlsConfiguration` の実装がリロードをサポートしている必要があります（設定された証明書の場合）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `reload` method returns a `boolean` indicating whether the reload was successful.\n"
"A value of `true` means the reload operation was successful, not necessarily that there were updates to the certificates."
msgstr "`reload` メソッドは、リロードが成功したかどうかを示す `boolean` を返します。値が `true` の場合、リロード操作が成功したことを意味し、証明書の更新があったとは限りません。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"After a `TlsConfiguration` has been reloaded, servers and clients using this configuration may need to perform specific actions to apply the new certificates.\n"
"The recommended approach is to fire a CDI event (`CertificateReloadedEvent`) that servers and clients can listen to and make the necessary changes:"
msgstr "`TlsConfiguration` がリロードされた後、この構成を使用するサーバーとクライアントは、新しい証明書を適用するために特定のアクションを実行する必要があるかもしれません。推奨される方法は、CDIイベント( `CertificateReloadedEvent` )を発生させ、サーバーとクライアントがそれをリッスンして必要な変更を行うことです："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "These APIs provide a way to implement custom certificate reloading."
msgstr "これらのAPIは、カスタム証明書のリロードを実装する方法を提供します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Periodic reloading"
msgstr "定期的な再装填"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS registry does include a built-in mechanism for periodically checking the file system for changes and reloading the certificates.\n"
"You can configure periodic reloading of certificates using properties.\n"
"The `reload-period` property specifies the interval at which certificates are reloaded, and it will emit a `CertificateReloadedEvent`."
msgstr "TLSレジストリには、ファイル・システムに変更がないか定期的にチェックし、証明書をリロードする仕組みが組み込まれています。プロパティを使用して、証明書の定期的なリロードを構成できます。 `reload-period` プロパティは、証明書がリロードされる間隔を指定し、 `CertificateReloadedEvent` ."

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "For each named configuration, you can set a specific reload period:"
msgstr "名前付きコンフィグレーションごとに、特定のリロード期間を設定できます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Remember that the impacted server and client may need to listen to the `CertificateReloadedEvent` to apply the new certificates.\n"
"This is automatically done for the Quarkus HTTP server (including the management interface if enabled)."
msgstr "影響を受けるサーバーとクライアントは、新しい証明書を適用するために `CertificateReloadedEvent` をリッスンする必要があります。これは、Quarkus HTTPサーバー（有効な場合は管理インターフェイスを含む）に対して自動的に実行されます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using Kubernetes secrets or cert-manager"
msgstr "Kubernetesのsecretsまたはcert-managerの使用"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When running in Kubernetes, you can use Kubernetes secrets to store the key stores and trust stores."
msgstr "Kubernetesで実行する場合、Kubernetes secretsを使用してキーストアとトラストストアを保存できます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using Kubernetes secrets"
msgstr "Kubernetesの秘密の使用"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To use Kubernetes secrets, you need to create a secret with the key stores and trust stores.\n"
"Let's take the following secret as an example:"
msgstr "Kubernetesのシークレットを使用するには、キーストアとトラストストアでシークレットを作成する必要があります。以下のシークレットを例にしてみましょう："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The easiest way to uses these certificates is to mount the secret as a volume in the pod:"
msgstr "これらの証明書を使用する最も簡単な方法は、秘密をポッド内のボリュームとしてマウントすることです："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Then, you can configure the TLS registry to use the certificates:"
msgstr "そして、その証明書を使うようにTLSレジストリを設定します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "You can combine this with the periodic reloading to automatically reload the certificates when they change."
msgstr "これを定期的なリロードと組み合わせて、証明書が変更されたときに自動的にリロードすることができます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using cert-manager"
msgstr "cert-managerの使用"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When running in Kubernetes, you can use cert-manager to automatically generate and renew certificates.\n"
"Cert-manager will produce a secret with the key stores and trust stores.\n"
"So, configuring the TLS registry is the same as when using Kubernetes secrets.\n"
"The generated secret uses the following files:"
msgstr "Kubernetesで実行する場合、cert-managerを使用して証明書を自動的に生成し、更新することができます。Cert-managerはキーストアとトラストストアでシークレットを生成します。そのため、TLSレジストリの設定はKubernetesのシークレットを使用する場合と同じです。生成されたシークレットは以下のファイルを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`tls.crt` for the certificate"
msgstr "`tls.crt` 証明書"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`tls.key` for the private key"
msgstr "`tls.key` 秘密鍵"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`ca.crt` for the CA certificate (if needed)"
msgstr "`ca.crt` CA 証明書（必要な場合）"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To handle the renewal, you can use the periodic reloading mechanism:"
msgstr "更新を処理するには、定期的な再読み込みメカニズムを使用できます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Utilizing OpenShift serving certificates"
msgstr "OpenShift サービング証明書の利用"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When running your application in OpenShift, you can leverage the https://docs.openshift.com/container-platform/4.16/security/certificates/service-serving-certificate.html[OpenShift serving certificates] to automatically generate and renew TLS certificates.\n"
"The Quarkus TLS registry can use these certificates and Certificate Authority (CA) files to handle HTTPS traffic securely and to validate certificates."
msgstr "OpenShiftでアプリケーションを実行する場合、 link:https://docs.openshift.com/container-platform/4.16/security/certificates/service-serving-certificate.html[OpenShiftのサービング証明] 書を活用して、TLS証明書を自動的に生成および更新できます。Quarkus TLSレジストリは、これらの証明書と認証局（CA）ファイルを使用して、HTTPSトラフィックを安全に処理し、証明書を検証できます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Acquiring a certificate"
msgstr "証明書の取得"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To have OpenShift generate a certificate, you need to annotate an existing _Service_ object.\n"
"The generated certificate will be stored in a secret, which you can then mount in your pod."
msgstr "OpenShift に証明書を生成させるには、既存の _Service_ オブジェクトにアノテーションを付ける必要があります。生成された証明書はシークレットに保存され、ポッドにマウントすることができます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Consider the following _Service_ example:"
msgstr "次の _サービスの_ 例を考えてみましょう："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The annotation `service.beta.openshift.io/serving-cert-secret-name` instructs OpenShift to generate a certificate and store it in a secret named `my-tls-secret`. If your service is already running, you can add this annotation with the following command:"
msgstr "`service.beta.openshift.io/serving-cert-secret-name` というアノテーションは、OpenShift に証明書を生成して `my-tls-secret` という名前のシークレットに保存するように指示します。サービスがすでに実行されている場合は、次のコマンドでこのアノテーションを追加できます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Next, mount the secret in your pod by updating your _Deployment_ configuration to include a volume and mount the secret:"
msgstr "次に、 _Deployment_ 構成を更新してボリュームを含めるようにし、シークレットをポッドにマウントします："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Define a volume to mount the secret. Use the same name as the secret declared above."
msgstr "シークレットをマウントするボリュームを定義します。上で宣言したシークレットと同じ名前を使用してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Set up the key store with the paths to the certificate and private key. This can be configured using environment variables or configuration files. Here, we use environment variables. OpenShift serving certificates always create the `tls.crt` and `tls.key` files."
msgstr "証明書と秘密鍵へのパスを使用して、鍵ストアを設定します。これは、環境変数または設定ファイルを使用して設定できます。ここでは環境変数を使用します。OpenShift サービング証明書は常に `tls.crt` と `tls.key` ファイルを作成します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Mount the secret in the container. Ensure the path matches the one used in the configuration (here `/etc/tls`)."
msgstr "コンテナにシークレットをマウントします。パスがコンフィギュレーションで使用されているものと一致していることを確認します（ここでは `/etc/tls` ）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the port to serve HTTPS."
msgstr "HTTPS を提供するポートを設定します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"By setting the `quarkus.tls.key-store.pem.acme.cert` and `quarkus.tls.key-store.pem.acme.key` variables (or their environment variable variant as done above), the TLS registry will use the certificate and private key from the secret. This configures the default key store for the Quarkus HTTP server, allowing it to use the certificate.\n"
"For using this certificate in a named configuration, refer to <<referencing-a-tls-configuration>>."
msgstr "`quarkus.tls.key-store.pem.acme.cert` 、 `quarkus.tls.key-store.pem.acme.key` 変数（または上記の環境変数の変種）を設定すると、TLS レジストリは secret の証明書と秘密鍵を使用します。これにより、Quarkus HTTPサーバーのデフォルトのキーストアが構成され、証明書を使用できるようになります。この証明書を名前付き構成で使用するには、 <<referencing-a-tls-configuration>> を参照してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Deploy your application, and it will utilize the certificate generated by OpenShift, making the service available over HTTPS."
msgstr "アプリケーションをデプロイすると、OpenShift が生成した証明書が利用され、HTTPS でサービスが利用できるようになります。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Trusting the Certificate Authority (CA)"
msgstr "認証局（CA）の信頼性"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Now that your service uses a certificate issued by OpenShift, you might need to configure your client applications to trust this certificate.\n"
"To accomplish this, create a _ConfigMap_ that holds the CA certificate and mount it in the application's pod."
msgstr "OpenShift が発行した証明書をサービスが使用するようになったので、クライアントアプリケーションがこの証明書を信頼するように設定する必要があるかもしれません。これを実現するには、CA 証明書を保持する _ConfigMap_ を作成し、アプリケーションのポッドにマウントします。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "In this example, we'll use a Quarkus REST client, but the same principle applies to any client."
msgstr "この例ではQuarkus RESTクライアントを使用しますが、どのクライアントにも同じ原則が当てはまります。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"First, create a _ConfigMap_ for the CA certificate.\n"
"Start by defining an _empty_ ConfigMap, which will be populated with the CA certificate:"
msgstr "まず、CA 証明書用の _ConfigMap_ を作成します。まず、 _空の_ ConfigMapを定義して、そこにCA証明書を入れます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `service.beta.openshift.io/inject-cabundle` annotation is used to inject the CA certificate into the ConfigMap.\n"
"Note that the ConfigMap initially has no data — it is empty.\n"
"During its processing, OpenShift injects the CA certificate into the ConfigMap in the `service-ca.crt` file."
msgstr "`service.beta.openshift.io/inject-cabundle` アノテーションは、CA 証明書を ConfigMap に注入するために使用されます。ConfigMap には最初はデータがなく、空であることに注意してください。処理中に、OpenShift は `service-ca.crt` ファイルの ConfigMap に CA 証明書を注入します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Next, mount the ConfigMap by adding a volume and mount it in your _Deployment_ configuration:"
msgstr "次に、ボリュームを追加して ConfigMap をマウントし、 _Deployment_ 構成にマウントします："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Mount the ConfigMap in the container. Ensure the path matches the one used in the configuration (here `/deployments/tls`)."
msgstr "ConfigMap をコンテナにマウントします。パスがコンフィギュレーションで使用されているものと一致していることを確認します（ここでは `/deployments/tls` ）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Define a volume to mount the ConfigMap and reference the ConfigMap that receives the CA certificate."
msgstr "ConfigMap をマウントするボリュームを定義し、CA 証明書を受け取る ConfigMap を参照します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Finally, configure the REST client to use this CA certificate. Consider the following REST client interface:"
msgstr "最後に、この CA 証明書を使用するように REST クライアントを構成します。以下の REST クライアント・インターフェースを考えてみましょう："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the base URI and the configuration key. The name must be in the format `<service-name>.<namespace>.svc`, otherwise the certificate will not be trusted. Ensure to also configure the `configKey`."
msgstr "ベース URI と構成鍵を構成します。名前は `<service-name>.<namespace>.svc` の形式でなければなりません。そうでない場合、証明書は信頼されません。 `configKey` も構成してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Next, configure the REST client to trust the CA certificate:"
msgstr "次に、REST クライアントが CA 証明書を信頼するように設定します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the `hero` REST client with the TLS configuration named `my-service-tls`."
msgstr "`my-service-tls` というTLSコンフィギュレーションで `hero` RESTクライアントを構成します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Set up the `my-service-tls` TLS configuration, specifically the trust store with the CA certificate. Ensure the path matches the one used in the Kubernetes _Deployment_ configuration. The file is always named `service-ca.crt`."
msgstr "`my-service-tls` TLS設定、特にCA証明書を含むトラストストアを設定します。パスがKubernetes _Deployment_ 構成で使用されているものと一致していることを確認します。ファイル名は常に `service-ca.crt` 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Now, the REST client is configured to trust the certificate generated by OpenShift."
msgstr "これで、REST クライアントは OpenShift が生成した証明書を信頼するように設定されました。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Certificate renewal"
msgstr "証明書の更新"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"OpenShift automatically renews the certificates it generates.\n"
"When the certificate is renewed, the secret is updated with the new certificate and private key."
msgstr "OpenShift は生成した証明書を自動的に更新します。証明書が更新されると、秘密鍵は新しい証明書と秘密鍵で更新されます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To ensure your application uses the new certificate, you can leverage the Quarkus TLS registry's periodic reloading feature.\n"
"By setting the `reload-period` property, the TLS registry will periodically check the key stores and trust stores for changes and reload them if needed:"
msgstr "アプリケーションで新しい証明書が使用されるようにするには、Quarkus TLSレジストリの定期的なリロード機能を活用します。 `reload-period` プロパティを設定すると、TLSレジストリは定期的にキーストアとトラストストアの変更をチェックし、必要に応じてリロードします："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"You can also implement a custom mechanism to reload the certificates when the secret is updated.\n"
"See <<reloading-certificates>> for more information."
msgstr "シークレットが更新されたときに証明書をリロードするカスタムメカニズムを実装することもできます。詳しくは <<reloading-certificates>> を参照してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Quarkus CLI commands and development CA (Certificate Authority)"
msgstr "QuarkusのCLIコマンドと開発CA（認証局）"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS registry provides CLI commands to generate a development CA and trusted certificates.\n"
"This avoids having to use self-signed certificates locally."
msgstr "TLSレジストリは、開発CAと信頼された証明書を生成するCLIコマンドを提供します。これにより、自己署名証明書をローカルで使用する必要がなくなります。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"In most cases, you generate the Quarkus Development CA once, and then generate certificates signed by this CA.\n"
"The Quarkus Development CA is a Certificate Authority that can be used to sign certificates locally.\n"
"It is only valid for development purposes and only trusted on the local machine.\n"
"The generated CA is located in `$HOME/.quarkus/quarkus-dev-root-ca.pem`, and installed in the system trust store."
msgstr "ほとんどの場合、Quarkus Development CAを一度生成してから、このCAによって署名された証明書を生成します。Quarkus Development CAは、ローカルで証明書に署名するために使用できる認証局です。開発目的でのみ有効で、ローカルマシンでのみ信頼されます。生成されたCAは、 `$HOME/.quarkus/quarkus-dev-root-ca.pem` 、システムトラストストアにインストールされます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "CA, signed vs. self-signed certificates"
msgstr "CA、署名証明書と自己署名証明書"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When developing with TLS, you can use two types of certificates:"
msgstr "TLSを使った開発では、2種類の証明書を使うことができます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "a self-signed certificate: the certificate is signed by the same entity that uses it. It is not trusted by default. It's generally what we use when we don't have a CA, or don't want to dig too much into TLS. This is not a production setup, and may be used only for development."
msgstr "自己署名証明書：証明書は、それを使用する同じエンティティによって署名されます。デフォルトでは信頼されません。一般的に、CAがない場合や、TLSをあまり深く掘り下げたくない場合に使います。これは本番用セットアップではありません。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "a signed certificate: the certificate is signed by a Certificate Authority (CA). The CA is a trusted entity that signs the certificate. The certificate is trusted by default. This is what we use in production."
msgstr "署名付き証明書： 証明書は認証局（CA）によって署名されます。CA は証明書に署名する信頼できるエンティティです。証明書はデフォルトで信頼されています。本番環境ではこれを使用します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"We could use self-signed certificate when running application locally, but it's not always convenient.\n"
"Typically, browsers will not trust the certificate, and you will have to import it manually.\n"
"`curl`, `wget`, `httpie` and other tools will also not trust the certificate."
msgstr "ローカルでアプリケーションを実行する場合、自己署名証明書を使用することもできますが、必ずしも便利ではありません。通常、ブラウザは証明書を信用しないので、手動でインポートする必要があります。 `curl` また、 `wget` 、 `httpie` 、その他のツールも証明書を信用しません。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To avoid this, we can use a development CA to sign the certificates, and install it into the system trust store.\n"
"Thus, every certificate signed by this CA will be trusted by the system."
msgstr "これを避けるために、開発CAを使って証明書に署名し、それをシステムのトラストストアにインストールすることができます。こうして、このCAによって署名された証明書はすべてシステムによって信頼されるようになります。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Quarkus makes it easy to generate a development CA and certificates signed by this CA."
msgstr "Quarkusでは、開発CAと、このCAによって署名された証明書を簡単に生成できます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Generate a development CA"
msgstr "開発CAの生成"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The development CA is a Certificate Authority that can be used to sign certificates locally.\n"
"Note that the generated CA is only valid for development purposes, and only trusted on the local machine."
msgstr "開発CAは、ローカルで証明書に署名するために使用できる認証局です。生成されたCAは開発目的でのみ有効で、ローカルマシンでのみ信頼されることに注意してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To generate a development CA, use the following command:"
msgstr "開発CAを生成するには、以下のコマンドを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`--install` installs the CA in the system trust store.\n"
"Windows, Mac and Linux (Fedora and Ubuntu) are supported.\n"
"However, depending on your browser, you may need to import the generated CA manually.\n"
"Refer to the browser documentation for more information.\n"
"The generated CA is located in `$HOME/.quarkus/quarkus-dev-root-ca.pem`."
msgstr "`--install` は、システムのトラストストアに CA をインストールします。Windows、Mac、Linux（FedoraとUbuntu）がサポートされています。ただし、ブラウザによっては、生成されたCAを手動でインポートする必要があります。詳細については、ブラウザのドキュメントを参照してください。生成された CA は にあります。 `$HOME/.quarkus/quarkus-dev-root-ca.pem`"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When installing the certificate, your system may ask for your password to install the certificate in the system trust store, or ask for confirmation in a dialog (on Windows)."
msgstr "証明書をインストールする際、システムのトラストストアに証明書をインストールするためのパスワードの入力を求められたり、ダイアログで確認を求められたりすることがあります（Windowsの場合）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "On Windows, makes sure you run from an elevated terminal (run as administrator) to install the CA in the system trust store."
msgstr "Windows では、昇格ターミナル（管理者として実行）から実行して、CA をシステム信頼ストアにインストールするようにしてください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`--renew` renews the CA if it already exists.\n"
"When this option is used, you need to re-generate the certificates that were signed by the CA, as the private key is changed.\n"
"Note that if the CA expires, it will automatically be renewed (without passing `--renew`)."
msgstr "`--renew` は、CA が既に存在する場合、その CA を更新します。このオプションを使用すると、秘密鍵が変更されるため、CAによって署名された証明書を生成し直す必要があります。CAの有効期限が切れると、（ を渡さずに）自動的に更新されることに注意してください。 `--renew`"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`--truststore` also generates a PKCS12 trust store containing the CA certificate."
msgstr "`--truststore` また、CA証明書を含むPKCS12トラストストアも生成します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Generate a trusted (signed) certificate"
msgstr "信頼できる（署名された）証明書の生成"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Once you have installed the Quarkus Development CA, you can generate a trusted certificate.\n"
"It will be signed by the Quarkus Development CA, and so trusted by your system."
msgstr "Quarkus Development CAをインストールしたら、信頼できる証明書を生成できます。この証明書はQuarkus Development CAによって署名されるため、システムから信頼されます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "This generates a certificate signed by the Quarkus Development CA, and so if properly installed / imported, will be trusted by your system."
msgstr "これにより、Quarkus Development CAによって署名された証明書が生成されるため、適切にインストール/インポートされていれば、システムから信頼されます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The certificate is stored in `./.certs/`.\n"
"Two files are generated:"
msgstr "証明書は `./.certs/` に格納されます。つのファイルが生成されます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`$NAME-keystore.p12` - contains the private key and the certificate. It's password protected."
msgstr "`$NAME-keystore.p12` - には秘密鍵と証明書が含まれています。パスワードで保護されています。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`$NAME-truststore.p12` - contains the CA certificate, that you can used as trust store (for test, for instance)."
msgstr "`$NAME-truststore.p12` - にはCA証明書が含まれており、これをトラストストアとして使用することができます（テスト用など）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "More options are available:"
msgstr "その他のオプションもあります："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When generating the certificate, a `.env` file is also generated making the Quarkus dev mode aware of these certificates.\n"
"So, then, if you run your application in dev mode, it will use these certificates:"
msgstr "証明書を生成する際、Quarkusのdevモードがこれらの証明書を認識できるように、 `.env` ファイルも生成されます。そのため、開発モードでアプリケーションを実行すると、これらの証明書が使用されます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Now, you can open the Dev UI using HTTPS: `https://localhost:8443/q/dev`, or issue a request using `curl`:"
msgstr "これで、HTTPSを使ってDev UIを開くことができます： `https://localhost:8443/q/dev` または `curl` を使ってリクエストを発行します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "If the Quarkus Development CA is not installed, a self-signed certificate is generated."
msgstr "Quarkus Development CAがインストールされていない場合は、自己署名証明書が生成されます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Generating a self-signed certificate"
msgstr "自己署名証明書の生成"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Even if the Quarkus Development CA is installed, you can generate a self-signed certificate:"
msgstr "Quarkus Development CAがインストールされている場合でも、自己署名証明書を生成できます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "This generates a self-signed certificate, not signed by the Quarkus Development CA."
msgstr "これにより、Quarkus Development CAによって署名されていない、自己署名証明書が生成されます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Uninstalling the Quarkus Development CA"
msgstr "Quarkus開発CAのアンインストール"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Uninstalling the Quarkus Development CA from your system depends on your OS."
msgstr "システムからのQuarkus Development CAのアンインストールは、OSによって異なります。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Deleting the CA certificate on Windows"
msgstr "Windows での CA 証明書の削除"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To delete the CA certificate on Windows, use the following commands from a Powershell terminal with administrator rights:"
msgstr "Windows で CA 証明書を削除するには、管理者権限を持つ Powershell ターミナルから以下のコマンドを使用します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Replace `$Serial_Number` with the serial number of the CA certificate."
msgstr "`$Serial_Number` を CA 証明書のシリアル番号に置き換えてください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Deleting the CA certificate on Linux"
msgstr "Linux での CA 証明書の削除"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "On Fedora, you can use the following command:"
msgstr "Fedora では、以下のコマンドを使用できます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "On Ubuntu, you can use the following command:"
msgstr "Ubuntuでは、以下のコマンドを使用できます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Deleting the CA certificate on Mac"
msgstr "MacでのCA証明書の削除"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "On Mac, you can use the following command:"
msgstr "Macでは、以下のコマンドを使用できます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Automatic certificate management with Let's Encrypt"
msgstr "Let's Encryptによる証明書の自動管理"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "https://letsencrypt.org[Let's Encrypt] is a free, automated certificate authority provided by https://www.abetterinternet.org/[Internet Security Research Group]."
msgstr "link:https://letsencrypt.org[Let's Encryptは] 、 link:https://www.abetterinternet.org/[Internet Security Research Groupが] 提供する無料の自動認証局です。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Let's Encrypt uses https://datatracker.ietf.org/doc/html/rfc8555[Automated certificate management environment (ACME) protocol] to support an automatic certificate issuance and renewal. Please read https://letsencrypt.org/docs/[Let's Encrypt documentation] to learn more about Let's Encrypt and ACME."
msgstr "Let's Encrypt は、証明書の自動発行と更新をサポートするために、 link:https://datatracker.ietf.org/doc/html/rfc8555[Automated certificate management environment (ACME) プロトコルを] 使用しています。Let's Encrypt と ACME の詳細については、Let link:https://letsencrypt.org/docs/['s Encrypt のドキュメントを] お読みください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"TLS registry project provides a CLI ACME client to issue and renew Let's Encrypt certificates.\n"
"Your application uses TLS registry to resolve ACME protocol challenges."
msgstr "TLS registry プロジェクトは、Let's Encrypt 証明書を発行・更新するための CLI ACME クライアントを提供します。アプリケーションは TLS レジストリを使用して ACME プロトコルの課題を解決します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Follow the steps below to have your Quarkus application prepared and automatically updated with new and renewed Let's Encrypt certificates."
msgstr "以下の手順に従って、Quarkusアプリケーションを準備し、新しいLet's Encrypt証明書や更新されたLet's Encrypt証明書で自動的に更新します。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Prerequisites"
msgstr "前提条件"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Make sure that a fully resolvable DNS domain name is available and can be used to access your application.\n"
"This domain name is used for creating a Let's Encrypt account, and supporting Let's Encrypt ACME challenges to prove that you own this domain.\n"
"You can use https://ngrok.com/[Ngrok] to start experimenting with the Quarkus Let's Encrypt ACME feature, see <<lets-encrypt-ngrok>> section below for more information."
msgstr "完全に解決可能な DNS ドメイン名が利用可能で、アプリケーションへのアクセスに使用できることを確認します。このドメイン名は、Let's Encryptアカウントの作成や、Let's Encrypt ACMEチャレンジのサポートに使用され、このドメインを所有していることを証明します。 link:https://ngrok.com/[Ngrokを] 使用して、QuarkusのLet's Encrypt ACME機能の実験を開始できます。詳細については、以下の <<lets-encrypt-ngrok>> セクションを参照してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Your Quarkus HTTPS application must use a _build-time_ property to enable a Let's Encrypt ACME challenge route:"
msgstr "Quarkus HTTPSアプリケーションでは、 _ビルド時_ プロパティを使用して、Let's Encrypt ACMEチャレンジルートを有効にする必要があります："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS registry can manage the challenge process from either the main HTTP interface or from the management interface.\n"
"Using a management interface is **strongly** recommended to let Quarkus deal with ACME challenge configuration separately to the main application's deployment and security requirements:"
msgstr "TLSレジストリは、メインのHTTPインターフェースまたは管理インターフェースからチャレンジプロセスを管理できます。Quarkusに、メインアプリケーションの展開やセキュリティ要件とは別に、ACMEのチャレンジ設定を処理させるには、管理インターフェースを使用することを *強く* お勧めします："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The challenge itself is served from the primary HTTP interface (the one accessible from your DNS domain name)."
msgstr "チャレンジ自体は、プライマリHTTPインターフェース（DNSドメイン名からアクセスできるもの）から提供されます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Do not start your application yet."
msgstr "まだ申し込みを始めないでください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Application preparation"
msgstr "申請準備"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Before you request a Let's Encrypt certificate, you must run TLS registry Let's Encrypt CLI `prepare` command to prepare your application:"
msgstr "Let's Encrypt 証明書を要求する前に、TLS レジストリ Let's Encrypt CLI `prepare` コマンドを実行してアプリケーションを準備する必要があります："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Make sure you run a prepare command in the root directory of your application."
msgstr "アプリケーションのルート・ディレクトリでprepareコマンドを実行してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The `prepare` command does the following:"
msgstr "`prepare` ："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Creates a `.letsencrypt` folder in your application's root directory"
msgstr "アプリケーションのルート・ディレクトリに `.letsencrypt` フォルダーを作成します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Creates a self-signed domain certificate and private key for your application configured in the previous <<lets-encrypt-prerequisites>> step to be able to start and accept HTTPS requests."
msgstr "前のステップ（ <<lets-encrypt-prerequisites>> ）で設定したアプリケーションの自己署名ドメイン証明書と秘密鍵を作成し、HTTPSリクエストを開始および受信できるようにします。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Create a `.env` configuration file in your application's root directory configure the application to use the self-signed domain certificate and private key (until we get the Let's Encrypt certificate)."
msgstr "アプリケーションのルートディレクトリに `.env` 設定ファイルを作成し、自己署名ドメイン証明書と秘密鍵（Let's Encrypt 証明書を取得するまで）を使用するようにアプリケーションを設定します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The following snippet shows an example of the generated `.env` file:"
msgstr "次のスニペットは、生成された `.env` ファイルの例です："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The `.env` file does not contain the `quarkus.tls.lets-encrypt.enabled` and `quarkus.management.enabled` properties as they are build-time properties requiring a rebuild of the application."
msgstr "`.env` ファイルには、 `quarkus.tls.lets-encrypt.enabled` と `quarkus.management.enabled` プロパティは含まれていません。これらはアプリケーションの再構築を必要とするビルド時のプロパティだからです。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Start your application"
msgstr "申し込み開始"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "You can start your application:"
msgstr "お申し込みを開始することができます："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Access your application endpoint using `https://your-domain-name:8443/`, for example, `https://your-domain-name:8443/hello`, accept a self-signed certificate in the browser."
msgstr "を使用してアプリケーション・エンドポイントにアクセスします。 `https://your-domain-name:8443/` 例えば `https://your-domain-name:8443/hello` ブラウザで自己署名証明書を受け入れます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Next, keep the application running and request your first Let's Encrypt certificate."
msgstr "次に、アプリケーションを起動したまま、最初のLet's Encrypt証明書を要求します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Issue certificate"
msgstr "証明書の発行"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "From the application directory, run the `issue-certificate` command to acquire your first Let's Encrypt certificate:"
msgstr "アプリケーション・ディレクトリから、 `issue-certificate` コマンドを実行し、最初の Let's Encrypt 証明書を取得します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Set your domain name."
msgstr "ドメイン名を設定します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Provide your contact email address that Let's Encrypt can use to contact you in case of any issues with your Let's Encrypt account."
msgstr "Let's Encrypt アカウントに問題が発生した場合に、Let's Encrypt がお客様に連絡するために使用する連絡先メールアドレスを入力してください。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Set your application management URL which can be used to handle ACME challenges. Use `https://localhost:8443/` if you chose not to enable a management router in the <<lets-encrypt-prerequisites>> step."
msgstr "ACME チャレンジを処理するために使用できるアプリケーション管理 URL を設定します。を使用します。 `https://localhost:8443/` を使用します。 <<lets-encrypt-prerequisites>> ステップで管理ルーターを有効にしないことを選択した場合。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "During this command, the TLS registry CLI checks if the application is prepared to serve the challenge, creates and records Let's Encrypt account information, issues a Let's Encrypt certificate request, and interacts with the Quarkus application to resolve ACME challenges."
msgstr "このコマンドの間、TLSレジストリCLIは、アプリケーションがチャレンジを処理する準備ができているかどうかをチェックし、Let's Encryptアカウント情報を作成して記録し、Let's Encrypt証明書要求を発行し、ACMEチャレンジを解決するためにQuarkusアプリケーションと対話します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Once the Let's Encrypt certificate chain and private key have been successfully acquired, they are converted to PEM format and copied to your application's `.letsencrypt` folder.\n"
"The TLS registry is informed that a new certificate and private key are ready, and reloads them automatically."
msgstr "Let's Encrypt 証明書チェーンと秘密鍵が正常に取得されると、それらは PEM 形式に変換され、アプリケーションの `.letsencrypt` フォルダにコピーされます。TLS レジストリは新しい証明書と秘密鍵の準備ができたことを通知され、それらを自動的に再読み込みします。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Now, access your application's endpoint using `https://your-domain-name:8443/` again.\n"
"Confirm in the browser that your domain certificate is now signed by the Let's Encrypt certificate authority."
msgstr "もう一度 `https://your-domain-name:8443/` を使ってアプリケーションのエンドポイントにアクセスしてください。ドメイン証明書が Let's Encrypt 認証局によって署名されたことをブラウザで確認します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Note that currently, a Let's Encrypt account is created implicitly by the `issue-certificate` command to make it easy for users to get started with the ACME protocol.\n"
"Support for the Let's Encrypt account management will evolve further."
msgstr "現在、Let's Encrypt アカウントは `issue-certificate` コマンドによって暗黙的に作成され、ユーザが簡単に ACME プロトコルを開始できるようになっています。Let's Encrypt アカウント管理のサポートは、今後さらに進化していく予定です。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Renew certificate"
msgstr "証明書の更新"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Renewing certificates is similar to issuing the first certificate, but it requires an existing account created during the <<lets-encrypt-issue-certificate>> step."
msgstr "証明書の更新は、最初の証明書の発行と似ていますが、 <<lets-encrypt-issue-certificate>> ステップで作成した既存のアカウントが必要です。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Run the following command to renew your Let's Encrypt certificate:"
msgstr "以下のコマンドを実行して、Let's Encrypt証明書を更新します："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "During this command, TLS registry CLI reads a Let's Encrypt account information recorded during the <<lets-encrypt-issue-certificate>> step, issues a Let's Encrypt certificate request, and communicates with a Quarkus application to have ACME challenges resolved."
msgstr "このコマンドの間、TLSレジストリCLIは、 <<lets-encrypt-issue-certificate>> ステップで記録されたLet's Encryptアカウント情報を読み取り、Let's Encrypt証明書要求を発行し、ACMEの課題を解決するためにQuarkusアプリケーションと通信します。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Once the Let's Encrypt certificate chain and private key have been successfully renewed, they are converted to PEM format and copied to your application's `.letsencrypt` folder.\n"
"TLS registry is informed that a new certificate and private key are ready and it reloads them automatically."
msgstr "Let's Encrypt 証明書チェーンと秘密鍵が正常に更新されると、それらは PEM 形式に変換され、アプリケーションの `.letsencrypt` フォルダにコピーされます。TLS レジストリは新しい証明書と秘密鍵の準備ができたことを通知され、自動的にそれらを再読み込みします。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Use NGrok for testing"
msgstr "テストにはNGrokを使用"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "https://ngrok.com/[Ngrok] can be used to provide a secure HTTPS tunnel to your application running on localhost, and make it easy to test HTTPS based applications."
msgstr "link:https://ngrok.com/[Ngrok] を使用すると、localhost で実行中のアプリケーションに安全な HTTPS トンネルを提供し、HTTPS ベースのアプリケーションを簡単にテストできます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using Ngrok provides an easiest option to get started with the Quarkus Let's Encrypt ACME feature."
msgstr "Ngrokを使用すると、QuarkusのLet's Encrypt ACME機能を最も簡単に使い始めることができます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The first thing you have to do with Ngrok is to ask it to reserve a domain.\n"
"You can use https://github.com/quarkiverse/quarkus-ngrok[Quarkiverse NGrok] in devmode, or have it reserved directly in the NGrok dashboard."
msgstr "NGrokで最初に行うことは、ドメインを予約してもらうことです。 link:https://github.com/quarkiverse/quarkus-ngrok[QuarkiverseのNGrokを] devmodeで使用することも、NGrokのダッシュボードで直接予約することもできます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Unfortunately, you can't use your NGrok domain to test the Quarkus Let's Encrypt ACME feature immediately.\n"
"This is due to the fact that Ngrok is itself using Let's Encrypt and intercepts ACME challenges which are meant to be handled by the Quarkus application instead."
msgstr "残念ながら、NGrokドメインを使ってQuarkusのLet's Encrypt ACME機能をすぐにテストすることはできません。これは、NGrok自体がLet's Encryptを使用しており、Quarkusアプリケーションで処理されるはずのACMEチャレンジを傍受してしまうためです。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Therefore, you need to remove an NGrok Let's Encrypt certificate policy from your NGrok domain:"
msgstr "したがって、NGrok Let's Encrypt 証明書ポリシーを NGrok ドメインから削除する必要があります："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`YOUR-RESERVED-DOMAIN-ID` is your reserved domain's id which starts from `rd_`, you can find it in the https://dashboard.ngrok.com/cloud-edge/domains[NGrok dashboard domains section]."
msgstr "`YOUR-RESERVED-DOMAIN-ID` は、 から始まる予約ドメインのIDです。 `rd_` link:https://dashboard.ngrok.com/cloud-edge/domains[NGrokダッシュボードのドメインセクションで] 確認できます。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Now, NGrok will forward ACME challenges over HTTP only, therefore you need to start Ngrok like this:"
msgstr "現在、NGrokはACMEのチャレンジをHTTPのみで転送しますので、次のようにNGrokを起動する必要があります："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "where `8080` is the localhost HTTP port that your application is listening on."
msgstr "`8080` はアプリケーションがリッスンしているローカルホストの HTTP ポートです。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "You can now test the Quarkus Let's Encrypt ACME feature from your local machine."
msgstr "これで、ローカルマシンからQuarkusのLet's Encrypt ACME機能をテストできます。"
