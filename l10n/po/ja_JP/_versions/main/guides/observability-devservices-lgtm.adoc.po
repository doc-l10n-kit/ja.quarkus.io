msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Observability Dev Services with Grafana OTel LGTM"
msgstr "Grafana OTel LGTMによる観測可能性開発サービス"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "https://github.com/grafana/docker-otel-lgtm[OTel-LGTM] is `all-in-one` Docker image containing OpenTelemetry's https://github.com/open-telemetry/opentelemetry-proto/blob/main/docs/README.md[OTLP] as the protocol to transport metrics, tracing and logging data to an https://opentelemetry.io/docs/collector[OpenTelemetry Collector] which then stores signals data into https://prometheus.io/[Prometheus] (metrics), https://github.com/grafana/tempo[Tempo] (traces) and https://github.com/grafana/loki[Loki] (logs), only to have it visualized by https://github.com/grafana/grafana[Grafana]. It's used by Quarkus Observability to provide the Grafana OTel LGTM Dev Resource."
msgstr "link:https://github.com/grafana/docker-otel-lgtm[OTel-LGTMは] `all-in-one` Dockerイメージで、OpenTelemetryの link:https://github.com/open-telemetry/opentelemetry-proto/blob/main/docs/README.md[OTLPを] プロトコルとして含み、メトリクス、トレース、ロギングデータを link:https://opentelemetry.io/docs/collector[OpenTelemetry Collectorに] 転送し、シグナルデータを link:https://prometheus.io/[Prometheus] （メトリクス）、 link:https://github.com/grafana/tempo[Tempo] （トレース）、 link:https://github.com/grafana/loki[Loki] （ログ）に保存し、 link:https://github.com/grafana/grafana[Grafanaで] 可視化します。これは、Quarkus ObservabilityがGrafana OTel LGTM Dev Resourceを提供するために使用しています。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Configuring your project"
msgstr "プロジェクトの設定"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Add the Quarkus Grafana OTel LGTM sink (where data goes) extension to your build file:"
msgstr "Quarkus Grafana OTel LGTMシンク（データの行き先）拡張機能をビルドファイルに追加します："

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Metrics"
msgstr "メトリクス"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "If you're using https://micrometer.io/[MicroMeter's] Quarkiverse OTLP registry to push metrics to Grafana OTel LGTM, this is how you would define the export endpoint url; where `quarkus.otel-collector.url` is provided by the Observability Dev Services extension."
msgstr "link:https://micrometer.io/[MicroMeterの] Quarkiverse OTLPレジストリを使用してGrafana OTel LGTMにメトリクスをプッシュしている場合、このようにエクスポートエンドポイントのURLを定義します。 `quarkus.otel-collector.url` はObservability Dev Services拡張機能によって提供されます。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Please note that the `${quarkus.otel-collector.url}` value is generated by quarkus when it starts the Grafana OTel LGTM Dev Resource."
msgstr "`${quarkus.otel-collector.url}` の値は、quarkus が Grafana OTel LGTM Dev Resource を起動するときに生成されることに注意してください。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Along OTel collector enpoint url, LGTM Dev Resource also provides a Grafana endpoint url - under `quarkus.grafana.url` property."
msgstr "OTel コレクタのエンドポイントの URL と共に、LGTM Dev Resource は Grafana のエンドポイントの URL も提供します - `quarkus.grafana.url` プロパティの下です。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "In this case LGTM Dev Resource would be automatically started and used by Observability Dev Services."
msgstr "この場合、LGTM Dev Resourceは自動的に起動され、Observability Dev Servicesによって使用されます。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "If you don't want all the hassle with Dev Services (e.g. lookup and re-use of existing running containers, etc) you can simply disable Dev Services and enable just Dev Resource usage:"
msgstr "Dev Services の煩わしさ（既存の実行中のコンテナの検索や再利用など）が不要な場合は、Dev Services を無効にし、Dev Resource の使用のみを有効にするだけです："

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Tracing"
msgstr "トレース"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Just add the quarkus-opentelemetry extension to your build file:"
msgstr "ビルドファイルにquarkus-opentelemetry拡張子を追加するだけです："

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "On the `application.properties` file, you can define:"
msgstr "`application.properties` ："

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Access Grafana"
msgstr "Grafanaにアクセス"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Once you start your app in dev mode:"
msgstr "開発モードでアプリを起動したら"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "You will see a message like this:"
msgstr "このようなメッセージが表示されます："

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Remember that Grafana is accessible in an ephemeral port, so you need to check the logs to see which port is being used. In this example, it's port 61907."
msgstr "Grafanaはエフェメラルポートでアクセスできるため、どのポートが使用されているかをログで確認する必要があることを覚えておいてください。この例では、ポート 61907 です。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "If you miss the message you can always check the port with this Docker command:"
msgstr "メッセージを見逃した場合は、このDockerコマンドでいつでもポートを確認できます："

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Tests"
msgstr "テスト"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "And for the least 'auto-magical' usage in the tests, simply disable both (Dev Resources are already disabled by default):"
msgstr "また、テストでの \"自動魔法 \"の使用を最小限に抑えるには、単に両方を無効にしてください（Dev Resourcesはすでにデフォルトで無効になっています）："

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "And then explicitly list LGTM Dev Resource in the test as a `@WithTestResource` resource:"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Testing full Grafana OTel LGTM stack - example"
msgstr "完全なGrafana OTel LGTMスタックのテスト - 例"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Use existing Quarkus MicroMeter OTLP registry"
msgstr "既存のQuarkus MicroMeter OTLPレジストリの使用"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "On the test  `application.properties` file, you need to define:"
msgstr "テスト `application.properties` ："

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Simply inject the Meter registry into your code -- it will periodically push metrics to Grafana LGTM's OTLP HTTP endpoint."
msgstr "Meterレジストリをコードに注入するだけで、Grafana LGTMのOTLP HTTPエンドポイントに定期的にメトリクスをプッシュします。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Where you can then check Grafana's datasource API for existing metrics data."
msgstr "そこで、GrafanaのデータソースAPIで既存のメトリクスデータを確認することができます。"
