msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Title =
#: upstream/_versions/main/guides/resteasy-reactive.adoc:6
msgid "Writing REST Services with RESTEasy Reactive"
msgstr "RESTEasy Reactive を使用して REST サービスを作成する"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:21
msgid "This guide explains how to write REST Services with RESTEasy Reactive in Quarkus."
msgstr "このガイドでは、QuarkusでRESTEasy Reactiveを使用してRESTサービスを記述する方法を説明します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:25
msgid ""
"This is the reference guide for RESTEasy Reactive.\n"
"For a more lightweight introduction, please refer to the xref:rest-json.adoc[Writing JSON REST services guides]."
msgstr "本書は、RESTEasy Reactiveのリファレンスガイドです。よりライトな紹介は、 link:rest-json.html[Writing JSON REST servicesのガイド] を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/resteasy-reactive.adoc:29
msgid "What is RESTEasy Reactive?"
msgstr "RESTEasy Reactiveとは？"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:31
msgid ""
"RESTEasy Reactive is a new link:{jaxrsspec}[Jakarta REST (formerly known as JAX-RS)]\n"
"implementation written from the ground up to work on our\n"
"common https://vertx.io/[Vert.x] layer and is thus fully reactive, while also being very tightly integrated with\n"
"Quarkus and consequently moving a lot of work to build time."
msgstr "RESTEasy Reactiveは、共通の link:https://vertx.io/[Vert.x] レイヤーで動作するようにゼロから書かれた新しい link:{jaxrsspec}[Jakarta REST（旧称JAX-RS）] の 実装で、完全にリアクティブです。また、Quarkusと非常に緊密に統合されており、結果として多くの作業をビルド時に移行します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:36
msgid ""
"You should be able to use it in place of any Jakarta REST implementation, but on top of that it has\n"
"great performance for both blocking and non-blocking endpoints, and a lot of new features on top\n"
"of what Jakarta REST provides."
msgstr "Jakarta RESTの実装として使えるはずですが、その上、ブロッキングとノンブロッキングの両方のエンドポイントに対して素晴らしいパフォーマンスを発揮し、Jakarta RESTが提供する機能の上に多くの新機能を備えています。"

#. type: Title ==
#: upstream/_versions/main/guides/resteasy-reactive.adoc:40
msgid "Writing endpoints"
msgstr "エンドポイントの作成"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:42
msgid "Getting started"
msgstr "はじめに"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:44
msgid "Add the following import to your build file:"
msgstr "次のインポートをビルドファイルに追加します:"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:47
msgid "pom.xml"
msgstr "pom.xml"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:56
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:61
msgid "You can now write your first endpoint in the `org.acme.rest.Endpoint` class:"
msgstr "これで、 `org.acme.rest.Endpoint` クラスで最初のエンドポイントを書くことができます:"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:80
msgid "Terminology"
msgstr "用語解説"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:82
msgid "REST"
msgstr "REST"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:82
msgid "https://en.wikipedia.org/wiki/Representational_state_transfer[REpresentational State Transfer]"
msgstr "https://en.wikipedia.org/wiki/Representational_state_transfer[REpresentational State Transfer]"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:83
msgid "Endpoint"
msgstr "エンドポイント"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:83
msgid "Java method which is called to serve a REST call"
msgstr "REST 呼び出しを処理するために呼び出される Java メソッド"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:84
msgid "URL / URI (Uniform Resource Locator / Identifier)"
msgstr "URL / URI (Uniform Resource Locator / Identifier)"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:84
msgid "Used to identify the location of REST resources (https://tools.ietf.org/html/rfc7230#section-2.7[specification])"
msgstr "REST リソースの場所を特定するために使用 (https://tools.ietf.org/html/rfc7230#section-2.7[仕様])"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:85
msgid "Resource"
msgstr "リソース"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:85
msgid "Represents your domain object. This is what your API serves and modifies. Also called an `entity` in Jakarta REST."
msgstr "ドメインオブジェクトを表します。これは、APIが提供し、変更するものです。Jakarta RESTでは `entity` とも呼ばれます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:86
msgid "Representation"
msgstr "表現"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:86
msgid "How your resource is represented on the wire, can vary depending on content types"
msgstr "通信上でのリソースの表現方法は、Content typeによって異なります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:87
msgid "Content type"
msgstr "Content type"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:87
msgid "Designates a particular representation (also called a media type), for example `text/plain` or `application/json`"
msgstr "text/plain や application/json などの特定の表現 (メディアタイプとも呼ばれます) を指定します"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:88
msgid "HTTP"
msgstr "HTTP"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:88
msgid "Underlying wire protocol for routing REST calls (see https://tools.ietf.org/html/rfc7230[HTTP specifications])"
msgstr "REST 呼び出しをルーティングするための基本的なワイヤープロトコル (https://tools.ietf.org/html/rfc7230[HTTP 仕様] を参照)"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:89
msgid "HTTP request"
msgstr "HTTP リクエスト"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:89
msgid "the request part of the HTTP call, consisting of an HTTP method, a target URI, headers and an optional message body"
msgstr "HTTP メソッド、ターゲット URI、ヘッダー、およびオプションのメッセージ本文で設定される HTTP 呼び出しのリクエスト部分"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:90
msgid "HTTP response"
msgstr "HTTP レスポンス"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:90
msgid "the response part of the HTTP call, consisting of an HTTP response status, headers and an optional message body"
msgstr "HTTP レスポンスステータス、ヘッダー、およびオプションのメッセージ本文で設定される HTTP 呼び出しのレスポンス部分"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:92
msgid "Declaring endpoints: URI mapping"
msgstr "エンドポイントの宣言:URI マッピング"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:94
msgid ""
"Any class annotated with a link:{jaxrsapi}/jakarta/ws/rs/Path.html[`@Path`] annotation can have its methods exposed as REST endpoints,\n"
"provided they have an HTTP method annotation (see below)."
msgstr "link:{jaxrsapi}/jakarta/ws/rs/Path.html[@Path] アノテーションでアノテーションされたクラスは、HTTPメソッドアノテーション（下記参照）が付与されている限り、RESTエンドポイントとして公開されるメソッドを持つことができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:97
msgid ""
"That link:{jaxrsapi}/jakarta/ws/rs/Path.html[`@Path`] annotation defines the URI prefix under which those methods will be exposed. It can\n"
"be empty, or contain a prefix such as `rest` or `rest/V1`."
msgstr "その link:{jaxrsapi}/jakarta/ws/rs/Path.html[@Path] アノテーションは、これらのメソッドを公開するためのURIプレフィックスを定義します。これは、空であるか、または `rest` や `rest/V1` のような接頭辞を含むことができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:100
msgid ""
"Each exposed endpoint method can in turn have another link:{jaxrsapi}/jakarta/ws/rs/Path.html[`@Path`] annotation which adds to its containing\n"
"class annotation. For example, this defines a `rest/hello` endpoint:"
msgstr "公開された各エンドポイント メソッドは、そのメソッドを含むクラス アノテーションに追加する別の link:{jaxrsapi}/jakarta/ws/rs/Path.html[`@Path`] アノテーションを持つことができます。 たとえば、これは `rest/hello` エンドポイントを定義します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:121
msgid "See xref:uri-parameters[URI parameters] for more information about URI mapping."
msgstr "URIマッピングの詳細については、 xref:uri-parameters[URIパラメータ] を参照してください。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:123
msgid "You can set the root path for all rest endpoints using the `@ApplicationPath` annotation, as shown below."
msgstr "以下に示すように、`@ApplicationPath` アノテーションを使用して、すべての REST エンドポイントのルートパスを設定できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:138
msgid ""
"This will cause all rest endpoints to be resolve relative to `/api`, so the endpoint above with `@Path(\"rest\")` would\n"
"be accessible at `/api/rest/`. You can also set the `quarkus.resteasy-reactive.path` build time property to set the root path if you\n"
"don't want to use an annotation."
msgstr "これにより、すべての rest エンドポイントは `/api` に対する相対パスで解決されるようになり、上記の `@Path (\"rest\")` のエンドポイントには `/api/rest/` でアクセスすることができるようになります。また、アノテーションを使用したくない場合は、`quarkus.resteasy-reactive.path` ビルド時のプロパティーを設定して、ルートパスを設定することができます。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:142
msgid "Declaring endpoints: HTTP methods"
msgstr "エンドポイントの宣言: HTTP メソッド"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:144
msgid ""
"Each endpoint method must be annotated with one of the following annotations, which defines which HTTP\n"
"method will be mapped to the method:"
msgstr "各エンドポイントメソッドには、次のいずれかのアノテーションを付ける必要があります。これにより、どの HTTP メソッドがそのメソッドにマップされるかが定義されます。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:147
#, fuzzy
msgid "HTTP method annotations"
msgstr "HTTPメソッドのアノテーション"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:239
msgid "Annotation"
msgstr "アノテーション"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2245
msgid "Usage"
msgstr "使用方法"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:151
msgid "link:{jaxrsapi}/jakarta/ws/rs/GET.html[`@GET`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/GET.html[`@GET`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:152
msgid "Obtain a resource representation, should not modify state, link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.1[HTTP docs])"
msgstr "リソース表現を取得します。状態を変更しないでください。link:{httpspec}#section-4.2.2[冪等] (link:{httpspec}#section-4.3.1[HTTP docs])"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:154
msgid "link:{jaxrsapi}/jakarta/ws/rs/HEAD.html[`@HEAD`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/HEAD.html[`@HEAD`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:155
msgid "Obtain metadata about a resource, similar to `GET` with no body (link:{httpspec}#section-4.3.2[HTTP docs])"
msgstr "本文のない `GET` と同様に、リソースに関するメタデータを取得します (link:{httpspec}#section-4.3.2[HTTP docs])"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:157
msgid "link:{jaxrsapi}/jakarta/ws/rs/POST.html[`@POST`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/POST.html[`@POST`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:158
msgid "Create a resource and obtain a link to it (link:{httpspec}#section-4.3.3[HTTP docs])"
msgstr "リソースを作成し、そのリソースへのリンクを取得します (link:{httpspec}#section-4.3.3[HTTP docs])"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:160
msgid "link:{jaxrsapi}/jakarta/ws/rs/PUT.html[`@PUT`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/PUT.html[`@PUT`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:161
msgid "Replace a resource or create one, should be link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.4[HTTP docs])"
msgstr "リソースを置き換えるか作成します。link:{httpspec}#section-4.2.2[冪等] (link:{httpspec}#section-4.3.4[HTTP docs]) であるべきです。"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:163
msgid "link:{jaxrsapi}/jakarta/ws/rs/DELETE.html[`@DELETE`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/DELETE.html[`@DELETE`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:164
msgid "Delete an existing resource, link:{httpspec}#section-4.2.2[idempotent]  (link:{httpspec}#section-4.3.5[HTTP docs])"
msgstr "既存のリソースを削除します。link:{httpspec}#section-4.2.2[冪等]  (link:{httpspec}#section-4.3.5[HTTP docs])"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:166
msgid "link:{jaxrsapi}/jakarta/ws/rs/OPTIONS.html[`@OPTIONS`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/OPTIONS.html[`@OPTIONS`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:167
msgid "Obtain information about a resource, link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.7[HTTP docs])"
msgstr "リソースに関する情報を取得します。link:{httpspec}#section-4.2.2[冪等] (link:{httpspec}#section-4.3.7[HTTP docs]) です。"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:169
msgid "link:{jaxrsapi}/jakarta/ws/rs/PATCH.html[`@PATCH`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/PATCH.html[`@PATCH`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:170
msgid "Update a resource, or create one, not link:{httpspec}#section-4.2.2[idempotent] (https://tools.ietf.org/html/rfc5789#section-2[HTTP docs])"
msgstr "リソースを更新するか、作成します。link:{httpspec}#section-4.2.2[冪等] (https://tools.ietf.org/html/rfc5789#section-2[HTTP docs]) ではありません。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:174
msgid ""
"You can also declare other HTTP methods by declaring them as an annotation with the\n"
"link:{jaxrsapi}/jakarta/ws/rs/HttpMethod.html[`@HttpMethod`] annotation:"
msgstr "また、他のメソッドを link:{jaxrsapi}/jakarta/ws/rs/HttpMethod.html[@HttpMethod] アノテーションを使用して宣言することで宣言することも出来ます。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:202
msgid "Declaring endpoints: representation / content types"
msgstr "エンドポイントの宣言: 表現/コンテンツタイプ"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:204
msgid ""
"Each endpoint method may consume or produce specific resource representations, which are indicated by\n"
"the HTTP link:{httpspec}#section-3.1.1.5[`Content-Type`] header, which in turn contains\n"
"link:{httpspec}#section-3.1.1.1[MIME (Media Type)] values, such as the following:"
msgstr "各エンドポイントメソッドは、特定のリソース表現を消費したり生成したりすることがあり、それは HTTP link:{httpspec}#section-3.1.1.5[`Content-Type`] header で示され、その中に次のような link:{httpspec}#section-3.1.1.1[MIME (Media Type)] 値が含まれています。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:208
msgid "`text/plain` which is the default for any endpoint returning a `String`."
msgstr "`String` を返すエンドポイントのデフォルトである `text/plain`。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:209
msgid "`text/html` for HTML (such as with xref:qute.adoc[Qute templating])"
msgstr "HTML の `text/html` (such as with xref:qute.adoc[Qute templating])"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:210
msgid "`application/json` for a xref:json[JSON REST endpoint]"
msgstr "xref:json[JSON REST endpoint] の場合 `application/json`"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:211
msgid "`text/*` which is a sub-type wildcard for any text media type"
msgstr "任意のテキストメディアタイプのサブタイプワイルドカードである `text/*`"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:212
msgid "`\\*/*` which is a wildcard for any media type"
msgstr "任意のメディアタイプのワイルドカードである `\\*/*`"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:214
msgid ""
"You may annotate your endpoint class with the link:{jaxrsapi}/jakarta/ws/rs/Produces.html[`@Produces`]\n"
"or link:{jaxrsapi}/jakarta/ws/rs/Consumes.html[`@Consumes`] annotations, which\n"
"allow you to specify one or more media types that your endpoint may accept as HTTP request body\n"
"or produce as HTTP response body. Those class annotations apply to each method."
msgstr "エンドポイントクラスにlink:{jaxrsapi}/jakarta/ws/rs/Produces.html[@Produces] または link:{jaxrsapi}/jakarta/ws/rs/Consumes.html[@Consumes] アノテーションをつけることができます。 これらを使用し、エンドポイントが HTTP リクエストボディとして受け入れ、HTTP レスポンスボディとして生成するメディアタイプを 1 つまたは複数指定できます。これらのクラスアノテーションは、各メソッドに適用されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:219
msgid ""
"Any method may also be annotated with the link:{jaxrsapi}/jakarta/ws/rs/Produces.html[`@Produces`]\n"
"or link:{jaxrsapi}/jakarta/ws/rs/Consumes.html[`@Consumes`] annotations, in which\n"
"case they override any eventual class annotation."
msgstr "また、link:{jaxrsapi}/jakarta/ws/rs/Produces.html[@Produces] や link:{jaxrsapi}/jakarta/ws/rs/Consumes.html[@Consumes] アノテーションをメソッドにつけることもできます。そのアノテーションは最終的にクラスアノテーションをオーバーライドします。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:223
msgid ""
"The link:{jaxrsapi}/jakarta/ws/rs/core/MediaType.html[`MediaType`] class has many constants you\n"
"can use to point to specific pre-defined media types."
msgstr "link:{jaxrsapi}/jakarta/ws/rs/core/MediaType.html[MediaType] クラスには、あらかじめ定義された特定のメディアタイプを指し示すために使用できる多くの定数があります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:226
msgid "See the xref:negotiation[Negotiation] section for more information."
msgstr "詳しくは xref:negotiation[ネゴシエーション] の項をご覧ください。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:228
msgid "Accessing request parameters"
msgstr "リクエストパラメーターへのアクセス"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:232
msgid ""
"don't forget to configure your compiler to generate parameter name information with `-parameters` (javac)\n"
"or `<parameters>` or `<maven.compiler.parameters>` (https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html#parameters[Maven])."
msgstr "パラメーター名の情報を生成するために、`-parameters` (javac) または `<parameters>` または `<maven.compiler.parameters>` (https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html#parameters[Maven]) を使ってコンパイラーを設定することを忘れないでください。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:235
msgid "The following HTTP request elements may be obtained by your endpoint method:"
msgstr "次の HTTP リクエスト要素は、エンドポイントメソッドによって取得される可能性があります。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:237
#, fuzzy
msgid "HTTP request parameter annotations"
msgstr "HTTPリクエスト・パラメーター注釈"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:239
msgid "HTTP element"
msgstr "HTTP 要素"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:241
msgid "[[path-parameter]]Path parameter"
msgstr "[[path-parameter]]パスパラメーター"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:242
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`] (or nothing)"
msgstr "リンク:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`] (または何もない)"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:243
msgid ""
"URI template parameter (simplified version of the https://tools.ietf.org/html/rfc6570[URI Template specification]),\n"
"see xref:uri-parameters[URI parameters] for more information."
msgstr "URIテンプレートパラメータ（ link:https://tools.ietf.org/html/rfc6570[URIテンプレート仕様] の簡略版）、詳しくは xref:uri-parameters[URIパラメータ] を参照。"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:246
msgid "Query parameter"
msgstr "クエリーパラメーター"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:247
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestQuery.html[`@RestQuery`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestQuery.html[`@RestQuery`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:248
msgid "The value of a https://tools.ietf.org/html/rfc3986#section-3.4[URI query parameter]"
msgstr "https://tools.ietf.org/html/rfc3986#section-3.4[URI クエリーパラメーター] の値"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:250
msgid "Header"
msgstr "ヘッダ"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:251
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestHeader.html[`@RestHeader`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestHeader.html[`@RestHeader`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:252
msgid "The value of an https://tools.ietf.org/html/rfc7230#section-3.2[HTTP header]"
msgstr "https://tools.ietf.org/html/rfc7230#section-3.2[HTTP header] の値"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:254
msgid "Cookie"
msgstr "Cookie"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:255
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestCookie.html[`@RestCookie`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestCookie.html[`@RestCookie`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:256
msgid "The value of an https://tools.ietf.org/html/rfc6265#section-4.2[HTTP cookie]"
msgstr "https://tools.ietf.org/html/rfc6265#section-4.2[HTTP cookie] の値"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:258
msgid "Form parameter"
msgstr "フォームパラメーター"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:259
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:260
msgid "The value of an https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST[HTTP URL-encoded FORM]"
msgstr "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST[HTTP URL-encoded FORM] の値"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:262
msgid "Matrix parameter"
msgstr "マトリックスパラメーター"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:263
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestMatrix.html[`@RestMatrix`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestMatrix.html[`@RestMatrix`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:264
msgid "The value of an https://tools.ietf.org/html/rfc3986#section-3.3[URI path segment parameter]"
msgstr "https://tools.ietf.org/html/rfc3986#section-3.3[URI path segment parameter] の値"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:268
msgid ""
"For each of those annotations, you may specify the name of the element they refer to,\n"
"otherwise, they will use the name of the annotated method parameter."
msgstr "これらのアノテーションはそれぞれ、参照する要素の名前を指定することができ、指定していない場合は、アノテーションされたメソッドのパラメーターの名前が使用されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:271
msgid "If a client made the following HTTP call:"
msgstr "クライアントが次の HTTP 呼び出しを行った場合:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:283
msgid "Then you could obtain all the various parameters with this endpoint method:"
msgstr "次に、このエンドポイントメソッドを使用してさまざまなパラメーターをすべて取得できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:316
msgid ""
"The link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`]\n"
"annotation is optional: any parameter whose name matches an existing URI\n"
"template variable will be automatically assumed to have link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`]."
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`] アノテーションはオプションです。名前が既存のURIテンプレート変数と一致するパラメータは、自動的に link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`] を持つと想定されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:320
msgid ""
"You can also use any of the Jakarta REST annotations link:{jaxrsapi}/jakarta/ws/rs/PathParam.html[`@PathParam`],\n"
"link:{jaxrsapi}/jakarta/ws/rs/QueryParam.html[`@QueryParam`],\n"
"link:{jaxrsapi}/jakarta/ws/rs/HeaderParam.html[`@HeaderParam`],\n"
"link:{jaxrsapi}/jakarta/ws/rs/CookieParam.html[`@CookieParam`],\n"
"link:{jaxrsapi}/jakarta/ws/rs/FormParam.html[`@FormParam`] or\n"
"link:{jaxrsapi}/jakarta/ws/rs/MatrixParam.html[`@MatrixParam`] for this,\n"
"but they require you to specify the parameter name."
msgstr "また、これに対してJakarta RESTアノテーション link:{jaxrsapi}/jakarta/ws/rs/PathParam.html[@PathParam] または link:{jaxrsapi}/jakarta/ws/rs/QueryParam.html[@QueryParam] , link:{jaxrsapi}/jakarta/ws/rs/HeaderParam.html[@HeaderParam] , link:{jaxrsapi}/jakarta/ws/rs/CookieParam.html[@CookieParam] , link:{jaxrsapi}/jakarta/ws/rs/FormParam.html[@FormParam] ,link:{jaxrsapi}/jakarta/ws/rs/MatrixParam.html[@MatrixParam] のいずれかを使用することができます。ただし、パラメータ名を指定する必要があります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:328
msgid "See xref:parameter-mapping[Parameter mapping] for more advanced use-cases."
msgstr "より高度な使用例については、 xref:parameter-mapping[パラメータ・マッピング] を参照してください。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:332
msgid ""
"When an exception occurs in RESTEasy Reactive request parameter handling code, the exception is not printed by default to the log (for security reasons).\n"
"This can sometimes make it hard to understand why certain HTTP status codes are returned (as the Jakarta REST mandates the use of non-intuitive error codes in various cases).\n"
"In such cases, users are encouraged to set the logging level for the `org.jboss.resteasy.reactive.server.handlers.ParameterHandler` category to `DEBUG` like so:"
msgstr "RESTEasy Reactiveリクエストパラメータ処理コードで例外が発生した場合、例外はデフォルトでログに出力されません（セキュリティ上の理由から）。このため、特定のHTTPステータスコードが返される理由を理解するのが難しい場合があります（jakarta RESTでは、さまざまなケースで直感的でないエラーコードの使用が義務付けられているため）。このような場合、 `org.jboss.resteasy.reactive.server.handlers.ParameterHandler` カテゴリーのログレベルを `DEBUG` のように設定するとよいでしょう:"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:342
msgid "Grouping parameters in a custom class"
msgstr "カスタムクラスでパラメータをグループ化"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:345
msgid ""
"You can group your request parameters in a container class instead of declaring them as method parameters to you endpoint,\n"
"so we can rewrite the previous example like this:"
msgstr "リクエストパラメータをメソッドパラメータとしてエンドポイントに宣言する代わりに、コンテナクラスでまとめることができます。したがって、前の例を次のように書き換えることができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:393
msgid "`BeanParam` is required to comply with the Jakarta REST specification so that libraries like OpenAPI can introspect the parameters."
msgstr "`BeanParam` は、OpenAPIのようなライブラリがパラメータを確認できるように、Jakarta REST仕様に準拠する必要があります。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:395
msgid "Declaring URI parameters"
msgstr "URI パラメーターの宣言"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:399
msgid ""
"You can declare URI parameters and use regular expressions in your path, so for instance\n"
"the following endpoint will serve requests for `/hello/stef/23` and `/hello` but not\n"
"`/hello/stef/0x23`:"
msgstr "URI パラメーターを宣言し、パスで正規表現を使用できるため、たとえば、次のエンドポイントは `/hello/stef/23` と `/hello` のリクエストを処理しますが、`/hello/stef/0x23` は処理しません。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:427
msgid "Accessing the request body"
msgstr "リクエスト本文へのアクセス"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:429
msgid ""
"Any method parameter with no annotation will receive the method body.footnote:[Unless it is a\n"
"xref:path-parameter[URI template parameter] or a xref:context-objects[context object].], after it has been mapped from\n"
"its HTTP representation to the Java type of the parameter."
msgstr "アノテーションのないメソッドパラメータは、HTTP表現からパラメータのJavaタイプにマッピングされた後、メソッドボディを受け取ります。footnote:[xref:path-parameter[URIテンプレートパラメータ] または xref:context-objects[コンテキストオブジェクト]でないかぎり。]"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:433
msgid "The following parameter types will be supported out of the box:"
msgstr "次のパラメータータイプは、そのままでサポートされます。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:437
#, fuzzy
msgid "Request body parameter types"
msgstr "リクエスト・ボディのパラメータ・タイプ"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2245
msgid "Type"
msgstr "タイプ"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:441
msgid "link:{jdkapi}/java/io/File.html[`File`]"
msgstr "link:{jdkapi}/java/io/File.html[`File`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:442
msgid "The entire request body in a temporary file"
msgstr "一時ファイル内のリクエスト本文全体"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:444
msgid "`byte[]`"
msgstr "`byte[]`"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:445
msgid "The entire request body, not decoded"
msgstr "デコードされていないリクエスト本文全体"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:447
msgid "`char[]`"
msgstr "`char[]`"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:451
msgid "The entire request body, decoded"
msgstr "デコードされたリクエスト本文全体"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:450
msgid "link:{jdkapi}/java/lang/String.html[`String`]"
msgstr "link:{jdkapi}/java/lang/String.html[`String`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:453
msgid "link:{jdkapi}/java/io/InputStream.html[`InputStream`]"
msgstr "link:{jdkapi}/java/io/InputStream.html[`InputStream`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:457
msgid "The request body in a blocking stream"
msgstr "ブロッキングストリームのリクエスト本文"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:456
msgid "link:{jdkapi}/java/io/Reader.html[`Reader`]"
msgstr "link:{jdkapi}/java/io/Reader.html[`Reader`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:459
msgid "All Java primitives and their wrapper classes"
msgstr "すべての Java プリミティブとそのラッパークラス"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:460
msgid "Java primitive types"
msgstr "Java プリミティブ型"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:462
msgid "link:{jdkapi}/java/math/BigDecimal.html[`BigDecimal`], link:{jdkapi}/java/math/BigInteger.html[`BigInteger`]"
msgstr "link:{jdkapi}/java/math/BigDecimal.html[`BigDecimal`], link:{jdkapi}/java/math/BigInteger.html[`BigInteger`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:463
msgid "Large integers and decimals."
msgstr "大きな整数と小数。"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:465
msgid ""
"link:{jsonpapi}/jakarta/json/JsonArray.html[`JsonArray`], link:{jsonpapi}/jakarta/json/JsonObject.html[`JsonObject`],\n"
"link:{jsonpapi}/jakarta/json/JsonStructure.html[`JsonStructure`], link:{jsonpapi}/jakarta/json/JsonValue.html[`JsonValue`]"
msgstr ""
"link:{jsonpapi}/jakarta/json/JsonArray.html[`JsonArray`], link:{jsonpapi}/jakarta/json/JsonObject.html[`JsonObject`],\n"
"link:{jsonpapi}/jakarta/json/JsonStructure.html[`JsonStructure`], link:{jsonpapi}/jakarta/json/JsonValue.html[`JsonValue`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:467
msgid "JSON value types"
msgstr "JSON 値の型"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:469
#, fuzzy
msgid "link:{vertxapi}/io/vertx/core/buffer/Buffer.html[`Buffer`]"
msgstr "link:{vertxapi}/io/vertx/core/buffer/Buffer.html[Buffer]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:470
msgid "Vert.x Buffer"
msgstr "Vert.x Buffer"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:472
msgid "any other type"
msgstr "他の型"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:473
msgid "Will be xref:json[mapped from JSON to that type]"
msgstr "xref:json[JSONからその型にマッピング] されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:477
msgid "You can add support for more xref:readers-writers[body parameter types]."
msgstr "より多くの xref:readers-writers[ボディパラメータタイプ] へのサポートを追加することが可能です。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:480
msgid "Handling Multipart Form data"
msgstr "マルチパートフォームデータの処理"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:482
msgid ""
"To handle HTTP requests that have `multipart/form-data` as their content type, you can use the regular\n"
"link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`] annotation, but we have special types\n"
"that allow you to access the parts as files or as entities.\n"
"Let us look at an example of its use."
msgstr "コンテンツタイプとして `multipart/form-data` を持つ HTTP リクエストを処理するために、通常の link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`] というアノテーションを使うことが出来ますが、パーツをファイルとして、あるいはエンティティとしてアクセスできる特別な型があります。その使用例を見てみましょう。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:487
msgid ""
"Assuming an HTTP request containing a file upload, a JSON entity and a form value containing a string description, we could write\n"
"the following endpoint:"
msgstr "ファイルアップロード、JSONエンティティ、文字列の説明を含むフォーム値を含むHTTPリクエストを想定すると、次のようなエンドポイントを書くことができます："

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:516
msgid ""
"The `description` parameter will contain the data contained in the part of HTTP request called `description` (because\n"
"link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`] does not define a value, the field name is used),\n"
"while the `file` parameter will contain data about the uploaded file in the `image` part of HTTP request, and\n"
"the `person` parameter will read the `Person` entity using the `JSON` xref:json[body reader]."
msgstr "`description` パラメーターには、HTTP リクエストの `description` という部分に含まれるデータが格納されます（なぜなら link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[@RestForm] が値を定義していない場合は、フィールド名が使用される為です）。一方、 `file` パラメータは、HTTP リクエストの `image` 部分にアップロードされたファイルに関するデータを含み、 `person` パラメータは、 `JSON` xref:json[ボディリーダー] を使用して `Person` エンティティを読み込みます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:521
msgid ""
"The size of every part in a multipart request must conform to the value of `quarkus.http.limits.max-form-attribute-size`, for which the default is 2048 bytes.\n"
"Any request with a part of a size exceeding this configuration will result in HTTP status code 413."
msgstr "マルチパートリクエストの各パートのサイズは、 `quarkus.http.limits.max-form-attribute-size` の値に準拠する必要があり、そのデフォルトは 2048 バイトです。この設定を超えるサイズのパートを持つリクエストは、HTTPステータスコード413となります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:524
msgid ""
"link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/multipart/FileUpload.html[`FileUpload`]\n"
"provides access to various metadata of the uploaded file. If however all you need is a handle to the uploaded file, `java.nio.file.Path` or `java.io.File` could be used."
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/multipart/FileUpload.html[`FileUpload`] はアップロードされたファイルの様々なメタデータにアクセスすることができます。しかし、アップロードされたファイルへの処理が必要なだけなら、`java.nio.file.Path` や `java.io.File` を使用することができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:527
msgid "If you need access to all uploaded files for all parts regardless of their names, you can do it with `@RestForm(FileUpload.ALL) List<FileUpload>`."
msgstr "名前に関係なく、アップロードされたすべてのファイルのすべてのパーツにアクセスする必要がある場合は、 `@RestForm(FileUpload.ALL) List<FileUpload>` で実現出来ます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:529
msgid ""
"link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/PartType.html[`@PartType`] is used to aid\n"
"in deserialization of the corresponding part of the request into the desired Java type. It is only required if\n"
"you need to use a xref:readers-writers[special body parameter type] for that particular parameter."
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/PartType.html[@PartType] は、リクエストの対応する部分を希望するJava型にデシリアライズする際の補助として使用されます。これは、特定のパラメータに xref:readers-writers[特別なボディ・パラメータ型] を使用する必要がある場合にのみ必要です。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:533
msgid "Just like for any other request parameter type, you can also group them into a xref:parameter-grouping[container class]."
msgstr "他のリクエストパラメータ型と同様に、 xref:parameter-grouping[コンテナクラス] にまとめることも可能です。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:535
msgid ""
"When handling file uploads, it is very important to move the file to permanent storage (like a database, a dedicated file system or a cloud storage) in your code that handles the POJO.\n"
"Otherwise, the file will no longer be accessible when the request terminates.\n"
"Moreover, if `quarkus.http.body.delete-uploaded-files-on-end` is set to true, Quarkus will delete the uploaded file when the HTTP response is sent. If the setting is disabled,\n"
"the file will reside on the file system of the server (in the directory defined by the `quarkus.http.body.uploads-directory` configuration option), but as the uploaded files are saved\n"
"with a UUID file name and no additional metadata is saved, these files are essentially a random dump of files."
msgstr "ファイルのアップロードを処理する場合、POJO を処理するコード内でファイルを永続的なストレージ (データベース、専用ファイルシステム、クラウドストレージなど) に移動させることが非常に重要です。そうしないと、リクエストが終了したときに、ファイルにアクセスできなくなります。さらに、`quarkus.http.body.delete-uploaded-files-on-end` を true に設定すると、HTTP レスポンスの送信時に、アップロードされたファイルが削除されます。この設定を無効にすると、ファイルはサーバーのファイルシステム上 (`quarkus.http.body.uploads-directory` 設定オプションで定義したディレクトリー) に存在しますが、アップロードされたファイルは UUID ファイル名で保存されて追加のメタデータが保存されないため、これらのファイルは本質的にファイルのランダムダンプとなります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:544
msgid "When a Resource method needs to handle various types of multipart requests, then the `org.jboss.resteasy.reactive.server.multipart.MultipartFormDataInput` method type can be used as provides access to all the parts of the request."
msgstr "Resourceメソッドが様々なタイプのマルチパートリクエストを処理する必要がある場合、リクエストのすべてのパートにアクセスできるように、 `org.jboss.resteasy.reactive.server.multipart.MultipartFormDataInput` メソッドタイプを使用することができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:546
msgid "The following code shows a simple example where we iterate over the parts and return a list of aggregated data:"
msgstr "次のコードは、パートに対して反復処理を行い、集約されたデータのリストを返すという簡単な例です:"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:596
msgid "Handling malformed input"
msgstr "不正な入力の処理"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:598
msgid ""
"As part of reading the multipart body, RESTEasy Reactive invokes the proper MessageBodyReaderlink:{jaxrsapi}/jakarta/ws/rs/ext/MessageBodyReader.html[`MessageBodyReader`] for each part of the request.\n"
"If an `IOException` occurs for one of these parts (for example if Jackson was unable to deserialize a JSON part), then a `org.jboss.resteasy.reactive.server.multipart.MultipartPartReadingException` is thrown.\n"
"If this exception is not handled by the application as mentioned in xref:exception-mapping[Exception mapping], an HTTP 400 response is returned by default."
msgstr "マルチパート・ボディの読み取りの一部として、RESTEasy Reactiveは適切なMessageBodyReaderを呼び出します。 link:{jaxrsapi}/jakarta/ws/rs/ext/MessageBodyReader.html[MessageBodyReader] をリクエストの各パートに対して作成します。これらのパートの1つに対して `IOException` が発生した場合（たとえば、Jackson が JSON 部分をデシリアライズできなかった場合）、 `org.jboss.resteasy.reactive.server.multipart.MultipartPartReadingException` がスローされます。この例外が xref:exception-mapping[例外マッピング] で述べたようにアプリケーションで処理されない場合、デフォルトでHTTP 400レスポンスが返されます。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:602
msgid "Multipart output"
msgstr "マルチパート出力"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:604
msgid ""
"Similarly, RESTEasy Reactive can produce Multipart Form data to allow users download files from the server. For example, we could write a POJO\n"
"that will hold the information we want to expose as:"
msgstr "同様に、RESTEasy Reactive は、ユーザーがサーバーからファイルをダウンロードできるようにするための Multipart Form データを生成することができます。例えば、公開したい情報を保持する POJO を、次のように書くことができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:625
msgid "And then expose this POJO via a Resource like so:"
msgstr "そして、次のようなリソースを介してこの POJO を公開します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:646
msgid "Additionally, you can also manually append the parts of the form using the class `MultipartFormDataOutput` as:"
msgstr "さらに、クラス `MultipartFormDataOutput` を使用して、フォームのパーツを手動で追加することも可能です："

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:673
msgid "This last approach allows you adding extra headers to the output part."
msgstr "この最後の方法は、出力のパーツに追加のヘッダーを追加することができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:675
msgid "For the time being, returning Multipart data is limited to be blocking endpoints."
msgstr "当面、マルチパートデータを返すことはエンドポイントをブロックすることに限定されます。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:677
msgid "Returning a response body"
msgstr "レスポンス本文を返す"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:679
msgid ""
"In order to return an HTTP response, simply return the resource you want from your method. The method\n"
"return type and its optional content type will be used to decide how to serialise it to the HTTP\n"
"response (see the xref:negotiation[Negotiation] section for more advanced information)."
msgstr "HTTP レスポンスを返すには、メソッドから必要なリソースを返すだけです。メソッドの戻り値の型と、オプションのコンテントタイプを使用して、HTTPレスポンスへのシリアライズ方法を決定します（より高度な情報については、 xref:negotiation[ネゴシエーション] のセクションを参照してください）。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:683
msgid ""
"You can return any of the pre-defined types that you can read from the xref:resource-types[HTTP response],\n"
"and any other type will be mapped xref:json[from that type to JSON]."
msgstr "xref:resource-types[HTTPレスポンス] から読み取れる、あらかじめ定義された任意の型を返すことができ、それ以外の型は、 xref:json[その型からJSONに] マッピングされます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:686
msgid "In addition, the following return types are also supported:"
msgstr "さらに、次の戻り値の型もサポートされています。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:688
#, fuzzy
msgid "Additional response body parameter types"
msgstr "追加のレスポンス・ボディ・パラメータ・タイプ"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:692
msgid "link:{jdkapi}/java/nio/file/Path.html[`Path`]"
msgstr "link:{jdkapi}/java/nio/file/Path.html[`Path`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:693
msgid "The contents of the file specified by the given path"
msgstr "指定されたパスで指定されたファイルの内容"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:695
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/PathPart.html[`PathPart`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/PathPart.html[`PathPart`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:696
msgid "The partial contents of the file specified by the given path"
msgstr "指定されたパスで指定されたファイルの部分的な内容"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:698
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/FilePart.html[`FilePart`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/FilePart.html[`FilePart`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:699
msgid "The partial contents of a file"
msgstr "ファイルの部分的な内容"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:701
msgid "link:{vertxapi}/io/vertx/core/file/AsyncFile.html[`AsyncFile`]"
msgstr "link:{vertxapi}/io/vertx/core/file/AsyncFile.html[`AsyncFile`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:702
msgid "Vert.x AsyncFile, which can be in full, or partial"
msgstr "Vert.x AsyncFile (完全または部分的)"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:706
msgid ""
"Alternately, you can also return a xref:reactive[reactive type] such as link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`],\n"
"link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`] or\n"
"link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`]\n"
"that resolve to one of the mentioned return types."
msgstr "また、次のような xref:reactive[リアクティブ型] を返すこともできます: link:{mutinyapi}/io/smallrye/mutiny/Uni.html[Uni] , link:{mutinyapi}/io/smallrye/mutiny/Multi.html[Multi] あるいは link:{jdkapi}/java/util/concurrent/CompletionStage.html[CompletionStage] のように、言及された戻り値の型のいずれかに解決されるもの。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:711
msgid "Setting other response properties"
msgstr "他のレスポンスプロパティーの設定"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:713
msgid "Manually setting the response"
msgstr "手動でレスポンスを設定する"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:715
msgid ""
"If you need to set more properties on the HTTP response than just the body, such as the status code\n"
"or headers, you can make your method return `org.jboss.resteasy.reactive.RestResponse` from a resource method.\n"
"An example of this could look like:"
msgstr "ステータスコードやヘッダーなど、本文だけでなく HTTP レスポンスに多くのプロパティーを設定する必要がある場合は、リソースメソッドからメソッドに `org.jboss.resteasy.reactive.RestResponse` を返すようにすることができます。この例は次のようになります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:754
msgid ""
"You can also use the Jakarta REST type link:{jaxrsapi}/jakarta/ws/rs/core/Response.html[`Response`] but it is\n"
"not strongly typed to your entity."
msgstr "また、Jakarta REST型 link:{jaxrsapi}/jakarta/ws/rs/core/Response.html[Response] を使用することが出来ますが、それはあなたのエンティティに強く型付けされていません。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:757
msgid "Using annotations"
msgstr "アノテーションの使用"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:759
msgid ""
"Alternatively, if you only need to set the status code and / or HTTP headers with static values, you can use `@org.jboss.resteasy.reactive.ResponseStatus` and /or `ResponseHeader` respectively.\n"
"An example of this could look like:"
msgstr "または、静的な値でステータスコードや HTTP ヘッダーのみを設定する必要がある場合は、それぞれ `@org.jboss.resteasy.reactive.ResponseStatus` および/または  `ResponseHeader` を使用できます。この例は次のようになります。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:785
msgid "Redirect support"
msgstr "リダイレクトサポート"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:787
msgid ""
"When handling a `@POST`, `@PUT` or `@DELETE` endpoint, it is common practice to redirect to a `@GET` endpoint after the action has been performed to allow the user to reload the page without triggering the action a second time.\n"
"There are multiple ways to achieve this."
msgstr "`@POST` 、 `@PUT` 、 `@DELETE` のエンドポイントを処理する場合、アクションの実行後に `@GET` のエンドポイントにリダイレクトするのが一般的で、ユーザーが2回目のアクションをトリガーせずにページを再読み込みできるようにします。これを実現するには、複数の方法があります。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:790
msgid "Using RestResponse"
msgstr "RestResponseの使用"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:792
msgid "Using `RestResponse` as the return type while making sure the proper redirection URI is created can be done as in the following example:"
msgstr "`RestResponse` を戻り値の型として使用し、適切なリダイレクトURIを作成することは、以下の例のように可能です:"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:854
msgid "Using RedirectException"
msgstr "RedirectExceptionの使用"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:856
msgid "Users can also throw `jakarta.ws.rs.RedirectionException` from a method body to get RESTEasy Reactive to perform the desired redirect."
msgstr "また、ユーザーはメソッド本体から `jakarta.ws.rs.RedirectionException` を投げることで、RESTEasy Reactive に目的のリダイレクトを実行させることができます。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:858
msgid "Async/reactive support"
msgstr "非同期/リアクティブサポート"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:862
msgid ""
"If your endpoint method needs to accomplish an asynchronous or reactive task before\n"
"being able to answer, you can declare your method to return the\n"
"link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] type (from https://smallrye.io/smallrye-mutiny/[Mutiny]), in which\n"
"case the current HTTP request will be automatically suspended after your method, until\n"
"the returned link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] instance resolves to a value,\n"
"which will be mapped to a response exactly according to the previously described rules:"
msgstr "エンドポイントメソッドがレスポンスする前に非同期またはリアクティブタスクを実行する必要がある場合は、メソッドを宣言して( https://smallrye.io/smallrye-mutiny/[Mutiny] の) link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] 型を返すことができます 。この場合、現在の HTTP リクエストはメソッドの後で、返されたlink:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] インスタンスが値に解決され、前述のルールに従って正確にレスポンスにマッピングされるまで自動的に一時停止されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:888
msgid ""
"This allows you to not block the event-loop thread while the book is being fetched from the\n"
"database, and allows Quarkus to serve more requests until your book is ready to\n"
"be sent to the client and terminate this request.\n"
"See xref:execution-model[Execution Model documentation] for more information."
msgstr "これにより、書籍がデータベースから取得されている間はイベントループスレッドをブロックせず、書籍がクライアントに送信される準備が整うまでQuarkusがより多くのリクエストに対応し、このリクエストを終了させることができるようになります。詳細については、 xref:execution-model[実行モデルのドキュメント] を参照してください。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:893
msgid ""
"The link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`] return\n"
"type is also supported."
msgstr "link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`] 戻り値の型もサポートされています。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:896
msgid "Streaming support"
msgstr "ストリーミングサポート"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:898
msgid ""
"If you want to stream your response element by element, you can make your endpoint method return a\n"
"link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`] type (from https://smallrye.io/smallrye-mutiny/[Mutiny]).\n"
"This is especially useful for streaming text or binary data."
msgstr "レスポンスを要素ごとにストリーミングする場合は、エンドポイントメソッドに( https://smallrye.io/smallrye-mutiny/[Mutiny] の) link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`] 型を返すようにすることができます。これは、テキストまたはバイナリーデータのストリーミングに特に役立ちます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:902
msgid ""
"This example, using https://github.com/quarkiverse/quarkus-reactive-messaging-http[Reactive Messaging HTTP] shows how to stream\n"
"text data:"
msgstr "この例では、 https://github.com/quarkiverse/quarkus-reactive-messaging-http[Reactive Messaging HTTP] を使用して、テキストデータをストリーミングする方法を示しています。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:931
msgid ""
"Response filters are **not** invoked on streamed responses, because they would give a false\n"
"impression that you can set headers or HTTP status codes, which is not true after the initial\n"
"response.\n"
"Exception mappers are also not invoked because part of the response may already have been written."
msgstr "レスポンスフィルターは、ヘッダーやHTTPステータスコードを設定できるという誤った印象を与えてしまうため、ストリームレスポンスでは呼び出され *ません* 。また、レスポンスの一部がすでに書き込まれている可能性があるため、例外マッパーは呼び出されません。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:936
msgid "Customizing headers and status"
msgstr "ヘッダーとステータスのカスタマイズ"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:937
msgid "If you need to set custom HTTP headers and / or the HTTP response, then you can return `org.jboss.resteasy.reactive.RestMulti` instead, like this:"
msgstr "カスタムHTTPヘッダーやHTTPレスポンスを設定する必要がある場合は、代わりに次のように `org.jboss.resteasy.reactive.RestMulti` を返却します ："

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:966
#, fuzzy
msgid ""
"In more advanced cases where the headers and / or status can only be obtained from the results of an async call, the `RestMulti.fromUniResponse` needs to be used.\n"
"Here is an example of such a use case:"
msgstr "ヘッダーやステータスが非同期呼び出しの結果からしか得られないような、より高度なケースでは、 `RestMulti.fromUniResponse` 。以下はそのような使用例である："

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1008
msgid "Server-Sent Event (SSE) support"
msgstr "サーバー送信イベント (SSE) のサポート"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1010
msgid ""
"If you want to stream JSON objects in your response, you can use\n"
"https://html.spec.whatwg.org/multipage/server-sent-events.html[Server-Sent Events]\n"
"by just annotating your endpoint method with\n"
"link:{jaxrsapi}/jakarta/ws/rs/Produces.html[`@Produces(MediaType.SERVER_SENT_EVENTS)`]\n"
"and specifying that each element should be xref:json[serialised to JSON] with\n"
"`@RestStreamElementType(MediaType.APPLICATION_JSON)`."
msgstr "レスポンスにJSONオブジェクトをストリーミングしたい場合は、エンドポイントメソッドに link:{jaxrsapi}/jakarta/ws/rs/Produces.html[@Produces(MediaType.SERVER_SENT_EVENTS)] アノテーションを付けるだけで、 link:https://html.spec.whatwg.org/multipage/server-sent-events.html[Server-Sent Events] を使用することができます。 そして各要素に `@RestStreamElementType(MediaType.APPLICATION_JSON)` を指定することで、 xref:json[JSONにシリアライズ] されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1051
#, fuzzy
msgid ""
"Sometimes it's useful to create a customized SSE message, for example if you need to specify the `event` field of a SSE message to distinguish various event types.\n"
"A resource method may return `Multi<jakarta.ws.rs.sse.OutboundSseEvent>` and an injected `jakarta.ws.rs.sse.Sse` can be used to create `OutboundSseEvent` instances."
msgstr "例えば、様々なイベントタイプを区別するために SSE メッセージの `event` フィールドを指定する必要がある場合など、カスタマイズされた SSE メッセージを作成することが有用な場合があります。リソース・メソッドは `Multi<jakarta.ws.rs.sse.OutboundSseEvent>` を返すことがあり、注入された `jakarta.ws.rs.sse.Sse` は `OutboundSseEvent` インスタンスを作成するために使用することができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1092
#, fuzzy
msgid "Inject the server-side entry point for creating ``OutboundSseEvent``s."
msgstr "`OutboundSseEvent` を作成するためのサーバーサイドのエントリーポイントを注入する。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1093
#, fuzzy
msgid "Create a new outbound event builder."
msgstr "アウトバウンドイベントビルダーを新規に作成します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1094
#, fuzzy
msgid "Set the event name, i.e. the value of the `event` field of a SSE message."
msgstr "イベント名、すなわち SSE メッセージの `event` フィールドの値を設定します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1095
#, fuzzy
msgid "Set the data, i.e. the value of the `data` field of a SSE message."
msgstr "データ、すなわち SSE メッセージの `data` フィールドの値を設定します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1099
#, fuzzy
msgid "Manipulation of the returned HTTP headers and status code is not possible via `RestMulti.fromUniResponse` because when returning SSE responses the headers and status code cannot be delayed until the response becomes available."
msgstr "SSE応答を返す場合、応答が利用可能になるまでヘッダーとステータス・コードを遅延させることができないため、返されるHTTPヘッダーとステータス・コードの操作は、 `RestMulti.fromUniResponse` 。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1102
msgid "Controlling HTTP Caching features"
msgstr "HTTP キャッシング機能の制御"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1104
msgid ""
"RESTEasy Reactive provides the link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/Cache.html[`@Cache`]\n"
"and link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/NoCache.html[`@NoCache`] annotations to facilitate\n"
"handling HTTP caching semantics, i.e. setting the 'Cache-Control' HTTP header."
msgstr "RESTEasy Reactive は、HTTP キャッシングセマンティックスの処理、つまり 'Cache-Control' HTTP ヘッダーの設定を容易にするために、link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/Cache.html[`@Cache`] と link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/NoCache.html[`@NoCache`] というアノテーションを提供します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1108
msgid ""
"These annotations can be placed either on a Resource Method or a Resource Class (in which case it applies to all Resource Methods of the class that do *not* contain the same annotation) and allow users\n"
"to return domain objects and not have to deal with building up the `Cache-Control` HTTP header explicitly."
msgstr "これらのアノテーションはリソースメソッドまたはリソースクラス (この場合、同じアノテーションを *含まない* クラスのすべてのリソースメソッドに適用されます) に配置することができ、ユーザーがドメインオブジェクトを返すことができ、明示的に `Cache-Control` HTTP ヘッダーを構築することに対処する必要はありません。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1111
msgid ""
"While link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/Cache.html[`@Cache`]\n"
"builds a complex `Cache-Control` header, link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/NoCache.html[`@NoCache`]\n"
"is a simplified notation to say that you don't want anything cached; i.e. `Cache-Control: nocache`."
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/Cache.html[`@Cache`] が複雑な `Cache-Control` ヘッダーを構築するのに対し、link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/NoCache.html[`@NoCache`] は何もキャッシュさせたくない、つまり `Cache-Control: nocache` というシンプルな表記法になっています。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1115
msgid "More information on the `Cache-Control` header and be found in link:https://datatracker.ietf.org/doc/html/rfc7234[RFC 7234]"
msgstr "`Cache-Control` ヘッダーの詳細は、 link:https://datatracker.ietf.org/doc/html/rfc7234[RFC 7234] を参照してください"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1117
msgid "Accessing context objects"
msgstr "コンテキストオブジェクトへのアクセス"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1121
msgid ""
"There are a number of contextual objects that the framework will give you, if your endpoint\n"
"method takes parameters of the following type:"
msgstr "エンドポイントメソッドが次のタイプのパラメーターを受け取る場合、フレームワークが提供するコンテキストオブジェクトは多数あります。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1124
#, fuzzy
msgid "Contextual objects"
msgstr "コンテキスト・オブジェクト"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1128
msgid "link:{jaxrsapi}/jakarta/ws/rs/core/HttpHeaders.html[`HttpHeaders`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/core/HttpHeaders.html[`HttpHeaders`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1129
msgid "All the request headers"
msgstr "すべてのリクエストヘッダー"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1131
msgid "link:{jaxrsapi}/jakarta/ws/rs/container/ResourceInfo.html[`ResourceInfo`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/container/ResourceInfo.html[`ResourceInfo`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1132
msgid "Information about the current endpoint method and class (requires reflection)"
msgstr "現在のエンドポイントメソッドとクラスに関する情報 (リフレクションが必要)"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1134
msgid "link:{jaxrsapi}/jakarta/ws/rs/core/SecurityContext.html[`SecurityContext`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/core/SecurityContext.html[`SecurityContext`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1135
msgid "Access to the current user and roles"
msgstr "現在のユーザーとロールへのアクセス"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1137
msgid "link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/SimpleResourceInfo.html[`SimpleResourceInfo`]"
msgstr "link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/SimpleResourceInfo.html[`SimpleResourceInfo`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1138
msgid "Information about the current endpoint method and class (no reflection required)"
msgstr "現在のエンドポイントメソッドとクラスに関する情報 (反映は不要)"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1140
msgid "link:{jaxrsapi}/jakarta/ws/rs/core/UriInfo.html[`UriInfo`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/core/UriInfo.html[`UriInfo`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1141
msgid "Provides information about the current endpoint and application URI"
msgstr "現在のエンドポイントとアプリケーション URI に関する情報を提供します"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1143
msgid "link:{jaxrsapi}/jakarta/ws/rs/core/Application.html[`Application`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/core/Application.html[`Application`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1144
msgid "Advanced: Current Jakarta REST application class"
msgstr "高度: 現在のJakarta RESTのアプリケーションクラス"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1146
msgid "link:{jaxrsapi}/jakarta/ws/rs/core/Configuration.html[`Configuration`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/core/Configuration.html[`Configuration`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1147
msgid "Advanced: Configuration about the deployed Jakarta REST application"
msgstr "高度: デプロイされたJakarta RESTアプリケーションに関する設定"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1149
msgid "link:{jaxrsapi}/jakarta/ws/rs/ext/Providers.html[`Providers`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/ext/Providers.html[`Providers`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1150
msgid "Advanced: Runtime access to Jakarta REST providers"
msgstr "高度: Jakarta RESTプロバイダへの実行時アクセス"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1152
msgid "link:{jaxrsapi}/jakarta/ws/rs/core/Request.html[`Request`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/core/Request.html[`Request`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1153
msgid "Advanced: Access to the current HTTP method and xref:preconditions[Preconditions]"
msgstr "高度: 現在のHTTPメソッドと xref:preconditions[事前条件] にアクセス"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1155
msgid "link:{jaxrsapi}/jakarta/ws/rs/core/ResourceContext.html[`ResourceContext`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/core/ResourceContext.html[`ResourceContext`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1156
msgid "Advanced: access to instances of endpoints"
msgstr "詳細: エンドポイントのインスタンスへのアクセス"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1158
msgid "link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/spi/ServerRequestContext.html[`ServerRequestContext`]"
msgstr "link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/spi/ServerRequestContext.html[`ServerRequestContext`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1159
msgid "Advanced: RESTEasy Reactive access to the current request/response"
msgstr "詳細:RESTEasy 現在の要求/レスポンスへのリアクティブアクセス"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1161
msgid "link:{jaxrsapi}/jakarta/ws/rs/sse/Sse.html[`Sse`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/sse/Sse.html[`Sse`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1162
msgid "Advanced: Complex SSE use-cases"
msgstr "詳細: 複雑な SSE のユースケース"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1164
msgid "link:{vertxapi}/io/vertx/core/http/HttpServerRequest.html[`HttpServerRequest`]"
msgstr "link:{vertxapi}/io/vertx/core/http/HttpServerRequest.html[`HttpServerRequest`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1165
msgid "Advanced: Vert.x HTTP Request"
msgstr "詳細: Vert.xHTTP リクエスト"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1167
msgid "link:{vertxapi}/io/vertx/core/http/HttpServerResponse.html[`HttpServerResponse`]"
msgstr "link:{vertxapi}/io/vertx/core/http/HttpServerResponse.html[`HttpServerResponse`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1168
msgid "Advanced: Vert.x HTTP Response"
msgstr "詳細: Vert..x HTTP レスポンス"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1172
msgid "For example, here is how you can return the name of the currently logged-in user:"
msgstr "たとえば、現在ログインしているユーザーの名前を返す方法は次のとおりです。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1195
#, fuzzy
msgid ""
"You can also inject those context objects using\n"
"{injectapi}/jakarta/inject/Inject.html[`@Inject`] on fields of the same\n"
"type:"
msgstr "また、同じ型のフィールドに対して{injectapi}/jakarta/inject/Inject.html[ `@Inject` ]を使って、それらのコンテキストオブジェクトをインジェクトすることも可能です："

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1225
msgid "Or even on your endpoint constructor:"
msgstr "または、エンドポイントコンストラクターでも:"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1255
msgid "JSON serialisation"
msgstr "JSON シリアライゼーション"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1259
msgid "Instead of importing `io.quarkus:quarkus-resteasy-reactive`, you can import either of the following modules to get support for JSON:"
msgstr "`io.quarkus:quarkus-resteasy-reactive` をインポートする代わりに、以下のモジュールのいずれかをインポートすることで、JSON のサポートを受けることができます。"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1728
msgid "GAV"
msgstr "GAV"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1264
msgid "`io.quarkus:quarkus-resteasy-reactive-jackson`"
msgstr "`io.quarkus:quarkus-resteasy-reactive-jackson`"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1265
msgid "https://github.com/FasterXML/jackson[Jackson support]"
msgstr "https://github.com/FasterXML/jackson[Jackson support]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1267
msgid "`io.quarkus:quarkus-resteasy-reactive-jsonb`"
msgstr "`io.quarkus:quarkus-resteasy-reactive-jsonb`"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1268
msgid "https://eclipse-ee4j.github.io/jsonb-api/[JSON-B support]"
msgstr "https://eclipse-ee4j.github.io/jsonb-api/[JSON-B support]"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1272
#, fuzzy
msgid ""
"In both cases, importing those modules will allow HTTP message bodies to be read from JSON\n"
"and serialised to JSON, for xref:resource-types[all the types not already registered with a more specific\n"
"serialisation]."
msgstr "どちらの場合も、これらのモジュールをインポートすることで、HTTPメッセージボディをJSONから読み込んでJSONにシリアライズすることができるようになり、 xref:resource-types[より特殊なシリアライズでまだ登録されていないすべてのタイプについて] 、JSONにシリアライズされます。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1276
msgid "Advanced Jackson-specific features"
msgstr "詳細なJackson固有の機能"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1278
msgid "When using the `quarkus-resteasy-reactive-jackson` extension there are some advanced features that RESTEasy Reactive supports."
msgstr "`quarkus-resteasy-reactive-jackson` エクステンションを使用する場合、RESTEasy Reactive がサポートするいくつかの高度な機能があります。"

#. type: Title =====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1281
msgid "Secure serialization"
msgstr "セキュア・シリアライゼーション"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1283
msgid ""
"When used with Jackson to perform JSON serialization, RESTEasy Reactive provides the ability to limit the set of fields that are serialized based on the roles of the current user.\n"
"This is achieved by simply annotating the fields (or getters) of the POJO being returned with `@io.quarkus.resteasy.reactive.jackson.SecureField`."
msgstr "JSON をシリアライズするために Jackson を使用する場合、RESTEasy Reactive は、現在のユーザのroleに基づいてシリアライズされるフィールドのセットを制限する機能を提供します。これは、返されるPOJOのフィールド（またはゲッター）を `@io.quarkus.resteasy.reactive.jackson.SecureField` でアノテーションするだけで実現できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1286
msgid "A simple example could be the following:"
msgstr "簡単な例を挙げると、次のようになります:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1288
msgid "Assume we have a POJO named `Person` which looks like so:"
msgstr "`Person` という名前のPOJOがあり、以下のようになっているとします:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1323
msgid "A very simple Jakarta REST Resource that uses `Person` could be:"
msgstr "`Person` を使用する非常にシンプルな Jakarta REST Resource は次のようになります:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1343
#, fuzzy
msgid ""
"Assuming security has been set up for the application (see our xref:security-overview.adoc[guide] for more details), when a user with the `admin` role\n"
"performs an HTTP GET on `/person/1` they will receive:"
msgstr "アプリケーションのセキュリティが設定されていると仮定すると（詳細は xref:security-overview.adoc[ガイドを] 参照）、 `admin` ロールを持つユーザが `/person/1` に対して HTTP GET を実行すると、次のようなメッセージが返されます："

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1355
msgid "as the response."
msgstr "レスポンスを閉じます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1357
msgid "Any user however that does not have the `admin` role will receive:"
msgstr "ただし、`admin` ロールを持たないユーザーは次のものを受け取ります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1367
msgid ""
"No additional configuration needs to be applied for this secure serialization to take place. However, users can use the `@io.quarkus.resteasy.reactive.jackson.EnableSecureSerialization` and `@io.quarkus.resteasy.reactive.jackson.DisableSecureSerialization`\n"
"annotation to opt in or out for specific Jakarta REST Resource classes or methods."
msgstr "この安全なシリアライズを行うために、追加の設定を適用する必要はありません。ただし、ユーザーは `@io.quarkus.resteasy.reactive.jackson.EnableSecureSerialization` および `@io.quarkus.resteasy.reactive.jackson.DisableSecureSerialization` アノテーションを使用して、特定の Jakarta REST Resource クラスまたはメソッドに対するオプトインまたはオプトアウトを行うことができます。"

#. type: Title =====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1370
msgid "@JsonView support"
msgstr "@JsonView support"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1372
msgid ""
"Jakarta REST methods can be annotated with https://fasterxml.github.io/jackson-annotations/javadoc/2.10/com/fasterxml/jackson/annotation/JsonView.html[@JsonView]\n"
"in order to customize the serialization of the returned POJO, on a per method-basis. This is best explained with an example."
msgstr "Jakarta RESTメソッドに link:https://fasterxml.github.io/jackson-annotations/javadoc/2.10/com/fasterxml/jackson/annotation/JsonView.html[@JsonView] のアノテーションを付けると、メソッドごとに、返されるPOJOのシリアライズをカスタマイズすることができます。これは、例で説明するのが一番わかりやすいでしょう。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1375
msgid "A typical use of `@JsonView` is to hide certain fields on certain methods. In that vein, let's define two views:"
msgstr "`@JsonView` の一般的な使用法は、特定のメソッドの特定のフィールドを非表示にすることです。その流れの中で、2 つのビューを定義しましょう。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1389
msgid "Let's assume we have the `User` POJO on which we want to hide some field during serialization. A simple example of this is:"
msgstr "シリアル化中にフィールドを非表示にする `User` POJO があると仮定します。この簡単な例は次のとおりです。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1403
msgid ""
"Depending on the Jakarta REST method that returns this user, we might want to exclude the `id` field from serialization.\n"
"For example, you might want an insecure method to not expose this field.\n"
"The way we can achieve that in RESTEasy Reactive is shown in the following example:"
msgstr "このユーザーを返す Jakarta REST メソッドによっては、 `id` フィールドをシリアライズから除外したい場合があります。例えば、安全でないメソッドでは、このフィールドを公開しないようにしたい場合があります。RESTEasy Reactiveでそれを実現する方法は、次の例のとおりです:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1424
msgid ""
"When the result the `userPublic` method is serialized, the `id` field will not be contained in the response as the `Public` view does not include it.\n"
"The result of `userPrivate` however will include the `id` as expected when serialized."
msgstr "結果の `userPublic` メソッドがシリアル化されると、`Public` ビューに含まれないため、`id` フィールドはレスポンスに含まれません。ただし、`userPrivate` の結果には、シリアル化されたときに期待されるように `id` が含まれます。"

#. type: Title =====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1427
#, fuzzy
msgid "Completely customized per method serialization/deserialization"
msgstr "メソッドごとに完全にカスタマイズされたシリアライズ/デシリアライズ"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1429
#, fuzzy
msgid "There are times when you need to completely customize the serialization/deserialization of a POJO on a per Jakarta REST method basis or on a per Jakarta REST resource basis. For such use cases, you can use the `@io.quarkus.resteasy.reactive.jackson.CustomSerialization` and `@io.quarkus.resteasy.reactive.jackson.CustomDeserialization` annotations in the REST method or in the REST resource at class level. These annotations allow you to fully configure the `com.fasterxml.jackson.databind.ObjectWriter`/`com.fasterxml.jackson.databind.ObjectReader`."
msgstr "Jakarta REST メソッドごと、または Jakarta REST リソースごとに、POJO のシリアライズ/デシリアライズを完全にカスタマイズする必要がある場合があります。このような使用例では、REST メソッドまたは REST リソースのクラス・レベルで `@io.quarkus.resteasy.reactive.jackson.CustomSerialization` および `@io.quarkus.resteasy.reactive.jackson.CustomDeserialization` アノテーションを使用できます。これらのアノテーションを使用すると、 `com.fasterxml.jackson.databind.ObjectWriter` / `com.fasterxml.jackson.databind.ObjectReader` を完全に構成できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1431
#, fuzzy
msgid "Here is an example use case to customize the `com.fasterxml.jackson.databind.ObjectWriter`:"
msgstr "以下は、 `com.fasterxml.jackson.databind.ObjectWriter` をカスタマイズする使用例である："

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1443
msgid "where `UnquotedFields` is a `BiFunction` defined as so:"
msgstr "ここで、`UnquotedFields` は次のように定義された `BiFunction` です。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1456
msgid "Essentially what this class does is force Jackson to not include quotes in the field names."
msgstr "基本的にこのクラスが行うことは、フィールド名に引用符を含めないよう Jackson に強制することです。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1458
msgid "It is important to note that this customization is only performed for the serialization of the Jakarta REST methods that use `@CustomSerialization(UnquotedFields.class)`."
msgstr "このカスタマイズは、 `@CustomSerialization(UnquotedFields.class)` を使用する Jakarta REST メソッドのシリアライズに対してのみ実行されることに注意する必要があります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1460
#, fuzzy
msgid "Following the previous example, let's now customize the `com.fasterxml.jackson.databind.ObjectReader` to read JSON requests with unquoted field names:"
msgstr "前の例に続いて、 `com.fasterxml.jackson.databind.ObjectReader` 、引用符で囲まれていないフィールド名を持つJSONリクエストを読み取るようにカスタマイズしてみよう："

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1472
#, fuzzy
msgid "where `SupportUnquotedFields` is a `BiFunction` defined as so:"
msgstr "ここで、 `SupportUnquotedFields` は `BiFunction` として定義される："

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1485
msgid "XML serialisation"
msgstr "XML シリアライゼーション"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1489
msgid "To enable XML support, add the `quarkus-resteasy-reactive-jaxb` extension to your project."
msgstr "XML サポートを有効にするには、プロジェクトに `quarkus-resteasy-reactive-jaxb` エクステンションを追加します。"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1494
msgid "`io.quarkus:quarkus-resteasy-reactive-jaxb`"
msgstr "`io.quarkus:quarkus-resteasy-reactive-jaxb`"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1495
msgid "https://javaee.github.io/jaxb-v2/[XML support]"
msgstr "https://javaee.github.io/jaxb-v2/[XML support]"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1499
msgid ""
"Importing this module will allow HTTP message bodies to be read from XML\n"
"and serialised to XML, for xref:resource-types[all the types not already registered with a more specific\n"
"serialisation]."
msgstr "このモジュールをインポートすると、 xref:resource-types[より厳密にシリアライズで登録されていないすべての型について] HTTPメッセージボディをXMLから読み込んでXMLにシリアライズできるようになります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1503
msgid "The JAXB Resteasy Reactive extension will automatically detect the classes that are used in the resources and require JAXB serialization. Then, it will register these classes into the default `JAXBContext` which is internally used by the JAXB message reader and writer."
msgstr "JAXB RESTEasy Reactiveエクステンションは、リソースで使用され、JAXBシリアライゼーションを必要とするクラスを自動的に検出します。そして、これらのクラスを、JAXBメッセージリーダーとライターが内部で使用するデフォルトの `JAXBContext` に登録します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1505
msgid "However, in some situations, these classes cause the `JAXBContext` to fail: for example, when you're using the same class name in different java packages. In these cases, the application will fail at build time and print the JAXB exception that caused the issue, so you can properly fix it. Alternatively, you can also exclude the classes that cause the issue by using the property `quarkus.jaxb.exclude-classes`. When excluding classes that are required by any resource, the JAXB resteasy reactive extension will create and cache a custom `JAXBContext` that will include the excluded class, causing a minimal performance degradance."
msgstr "しかし、状況によっては、これらのクラスが原因で `JAXBContext` が失敗することがあります。例えば、異なる Java パッケージで同じクラス名を使用している場合などです。このような場合、アプリケーションはビルド時に失敗し、問題の原因となったJAXB例外が出力されるので、適切に修正することができます。また、 `quarkus.jaxb.exclude-classes` というプロパティを使用して、問題の原因となるクラスを除外することもできます。任意のリソースで必要とされるクラスを除外する場合、JAXB RESTEasy reactive エクステンションは、除外されたクラスを含むカスタム `JAXBContext` を作成およびキャッシュするため、パフォーマンスの低下は最小限に抑えられます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1509
#, fuzzy
msgid ""
"The property `quarkus.jaxb.exclude-classes` accepts a comma separated list of either fully qualified class names\n"
"or package names. Package names must be suffixed by `.*` and all classes in the specified package and its subpackages will be excluded."
msgstr "`quarkus.jaxb.exclude-classes` プロパティには、完全修飾クラス名またはパッケージ名をカンマ区切りで指定できます。パッケージ名のサフィックスは `.*` でなければならず、指定されたパッケージとそのサブパッケージ内のすべてのクラスが除外されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1512
#, fuzzy
msgid "For instance, when setting `quarkus.jaxb.exclude-classes=org.acme.one.Model,org.acme.two.Model,org.acme.somemodel.*`, the following elements are excluded:"
msgstr "例えば、 `quarkus.jaxb.exclude-classes=org.acme.one.Model,org.acme.two.Model,org.acme.somemodel.*` を設定すると、以下の要素が除外される："

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1514
#, fuzzy
msgid "The class `org.acme.one.Model`"
msgstr "クラス `org.acme.one.Model`"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1515
#, fuzzy
msgid "The class `org.acme.two.Model`"
msgstr "クラス `org.acme.two.Model`"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1516
#, fuzzy
msgid "All the classes in the `org.acme.somemodel` package and its subpackages"
msgstr "`org.acme.somemodel` パッケージとそのサブパッケージの全クラス"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1519
msgid "Advanced JAXB-specific features"
msgstr "高度な JAXB 固有の機能"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1521
msgid "When using the `quarkus-resteasy-reactive-jaxb` extension there are some advanced features that RESTEasy Reactive supports."
msgstr "`quarkus-resteasy-reactive-jaxb` エクステンションを使用する場合、RESTEasy Reactive がサポートするいくつかの高度な機能があります。"

#. type: Title =====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1523
msgid "Inject JAXB components"
msgstr "JAXB コンポーネントを注入する"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1525
msgid "The JAXB resteasy reactive extension will serialize and unserialize requests and responses transparently for users. However, if you need finer grain control over JAXB components, you can inject either the JAXBContext, Marshaller, or Unmarshaller components into your beans:"
msgstr "JAXB resteasy リアクティブエクステンションは、ユーザーに対して透過的にリクエストとレスポンスをシリアライズおよびアンシリアライズします。ただし、JAXB コンポーネントをより細かく制御する必要がある場合は、JAXBContext、Marshaller、または Unmarshaller コンポーネントのいずれかを Bean に注入できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1547
msgid "Quarkus will automatically find all the classes annotated with `@XmlRootElement` and then bound them to the JAXB context."
msgstr "Quarkus は、`@XmlRootElement` でアノテーションが付けられたすべてのクラスを自動的に検出し、それらを JAXB コンテキストにバインドします。"

#. type: Title =====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1550
msgid "Customize the JAXB configuration"
msgstr "JAXB 設定をカスタマイズする"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1552
msgid "To customize the JAXB configuration for either the JAXB context, and/or the Marshaller/Unmarshaller components, the suggested approach is to define a CDI bean of type `io.quarkus.jaxb.runtime.JaxbContextCustomizer`."
msgstr "JAXB コンテキスト、および/または Marshaller/Unmarshaller コンポーネントの JAXB 設定をカスタマイズするには、型 `io.quarkus.jaxb.runtime.JaxbContextCustomizer` の CDI Bean を定義することをお勧めします。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1554
msgid "An example where a custom module needs to be registered would look like so:"
msgstr "カスタムモジュールを登録する必要がある場合の例は次のようになります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1583
msgid "It's not necessary to implement all three methods, but only the want you need."
msgstr "3 つのメソッドすべてを実装する必要はありませんが、必要なものだけを実装する必要があります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1586
msgid "Alternatively, you can provide your own `JAXBContext` bean by doing:"
msgstr "または、次のようにして、独自の `JAXBContext` Bean を提供できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1603
msgid "Note that if you provide your custom JAXB context instance, you will need to register the classes you want to use for the XML serialization. This means that Quarkus will not update your custom JAXB context instance with the auto-discovered classes."
msgstr "カスタム JAXB コンテキストインスタンスを提供する場合は、XML シリアル化に使用するクラスを登録する必要があることに注意してください。これは、Quarkus がカスタム JAXB コンテキストインスタンスを自動検出されたクラスで更新しないことを意味します。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1606
msgid "Web Links support"
msgstr "Web リンクのサポート"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1610
msgid "To enable Web Links support, add the `quarkus-resteasy-reactive-links` extension to your project."
msgstr "Web リンクのサポートを有効にするには、プロジェクトに `quarkus-resteasy-reactive-links` エクステンションを追加します。"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1615
msgid "`io.quarkus:quarkus-resteasy-reactive-links`"
msgstr "`io.quarkus:quarkus-resteasy-reactive-links`"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1616
msgid "https://www.w3.org/wiki/LinkHeader[Web Links support]"
msgstr "https://www.w3.org/wiki/LinkHeader[Web Links support]"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1620
msgid "Importing this module will allow injecting web links into the response HTTP headers by just annotating your endpoint resources with the `@InjectRestLinks` annotation. To declare the web links that will be returned, you need to use the `@RestLink` annotation in the linked methods. An example of this could look like:"
msgstr "このモジュールをインポートすると、エンドポイントリソースに `@InjectRestLinks` アノテーションを付けるだけで、レスポンスの HTTP ヘッダに Web リンクを挿入することができるようになります。返される Web リンクを宣言するには、リンクされたメソッドで `@RestLink` アノテーションを使用する必要があります。この例としては、以下のようなものがあります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1659
msgid "When calling the endpoint `/records` which is defined by the method `getAll` within the above resource using curl, you would get the web links header:"
msgstr "上記のリソース内でメソッド `getAll` によって定義されたエンドポイント `/records` を curl を使用して呼び出すと、Web リンクヘッダーが取得されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1667
msgid "As this resource does not return a single instance of type `Record`, the links for the methods `get`, `update`, and `delete` are not injected. Now, when calling the endpoint `/records/1`, you would get the following web links:"
msgstr "このリソースはタイプ `Record` の単一のインスタンスを返さないため、メソッド `get`、`update`、および `delete` のリンクは挿入されません。これで、エンドポイント `/records/1` を呼び出すと、次の Web リンクが表示されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1678
msgid "The `get`, `update`, and `delete` methods use the path param \"id\" and as the field \"id\" exists in the entity type \"Record\", the web link properly populates the value \"1\" in the returned links. In addition to this, we can also generate web links with path params that do not match with any field of the entity type. For example, the following method is using a path param \"text\" and the entity Record does not have any field named \"text\":"
msgstr "`get `, `update `, `delete` の各メソッドでは、パスパラメータ \"id\" を使用しており、エンティティタイプ \"Record\" にフィールド \"id\" が存在するため、Web リンクは返されるリンクに適切に値 \"1\" を入力します。これに加えて、エンティティ・タイプのどのフィールドとも一致しないパス・パラメータを持つウェブ・リンクを生成することも可能です。たとえば、次のメソッドでは、パスパラメータ \"text\" を使用していますが、エンティティRecordには \"text\" という名前のフィールドがありません:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1699
msgid "The generated web link for this resource is `Link: <http://localhost:8080/search/{text}>; rel=\"search records by free text\"`."
msgstr "このリソースの生成されたウェブリンクは次のようになります `Link: <http://localhost:8080/search/{text}>; rel=\"search records by free text\"` 。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1701
msgid "Finally, when calling the `delete` resource, you should not see any web links as the method `delete` is not annotated with the `@InjectRestLinks` annotation."
msgstr "最後に、 `delete` リソースを呼び出すと、 `delete` メソッドに `@InjectRestLinks` アノテーションが付いていないため、ウェブリンクが表示されないはずです。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1703
msgid "Programmatically access to the web links registry"
msgstr "Web リンクレジストリーへのプログラムによるアクセス"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1705
msgid "You can programmatically have access to the web links registry just by injecting the `RestLinksProvider` bean:"
msgstr "`RestLinksProvider` Bean を挿入するだけで、プログラムで Web リンクレジストリーにアクセスできます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1719
msgid "Using this injected bean of type `RestLinksProvider`, you can get the links by type using the method `RestLinksProvider.getTypeLinks` or get the links by a concrete instance using the method `RestLinksProvider.getInstanceLinks`."
msgstr "タイプ `RestLinksProvider` の挿入された Bean を使用すると、メソッド `RestLinksProvider.getTypeLinks` を使用してタイプごとにリンクを取得するか、メソッド `RestLinksProvider.getInstanceLinks` を使用して具象インスタンスによってリンクを取得できます。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1721
msgid "JSON Hypertext Application Language (HAL) support"
msgstr "JSON Hypertext Application Language ( HAL ) のサポート"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1723
msgid "The https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL] standard is a simple format to represent web links."
msgstr "https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL] 標準は、Web リンクを表す単純な形式です。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1725
msgid "To enable the HAL support, add the `quarkus-hal` extension to your project. Also, as HAL needs JSON support, you need to add either the `quarkus-resteasy-reactive-jsonb` or the `quarkus-resteasy-reactive-jackson` extension."
msgstr "HAL サポートを有効にするには、プロジェクトに `quarkus-hal` エクステンションを追加します。また、HAL には JSON サポートが必要なため、`quarkus-resteasy-reactive-jsonb` または `quarkus-resteasy-reactive-jackson` エクステンションを追加する必要があります。"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1730
msgid "`io.quarkus:quarkus-hal`"
msgstr "`io.quarkus:quarkus-hal`"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1731
msgid "https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL]"
msgstr "https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL]"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1735
msgid "After adding the extensions, we can now annotate the REST resources to produce the media type `application/hal+json` (or use RestMediaType.APPLICATION_HAL_JSON). For example:"
msgstr "エクステンションを追加した後、REST リソースにアノテーションを付けて、メディアタイプ `application/hal+json` を生成できます (または RestMediaType.APPLICATION_HAL_JSON を使用します)。例えば:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1761
msgid "Now, the endpoints `/records` and `/records/{id}` will accept the media type both `json` and `hal+json` to print the records in Hal format."
msgstr "ここで、エンドポイント `/records` と `/records/{id}` は、`json` と `hal + json` の両方のメディアタイプを受け入れて、Hal 形式でレコードを出力します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1763
msgid "For example, if we invoke the `/records` endpoint using curl to return a list of records, the HAL format will look like as follows:"
msgstr "たとえば、curl を使用して `/records` エンドポイントを呼び出してレコードのリストを返す場合、HAL 形式は次のようになります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1807
msgid "When we call a resource `/records/1` that returns only one instance, then the output is:"
msgstr "1 つのインスタンスのみを返すリソース `/records/1` を呼び出すと、出力は次のようになります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1827
msgid "Finally, you can also provide additional HAL links programmatically in your resource just by returning either `HalCollectionWrapper` (to return a list of entities) or `HalEntityWrapper` (to return a single object) as described in the following example:"
msgstr "Finally, you can also provide additional HAL links programmatically in your resource just by returning either `HalCollectionWrapper` (to return a list of entities) or `HalEntityWrapper` (to return a single object) as described in the following example:"

#. type: Title ==
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1861
msgid "CORS filter"
msgstr "CORS フィルター"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1863
msgid ""
"link:https://en.wikipedia.org/wiki/Cross-origin_resource_sharing[Cross-origin resource sharing] (CORS) is a mechanism that\n"
"allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource\n"
"was served."
msgstr "link:https://en.wikipedia.org/wiki/Cross-origin_resource_sharing[クロスオリジンリソース共有] (CORS)は、ウェブページ上の制限されたリソースを、最初のリソースが提供されたドメイン以外の別のドメインから要求できるようにするメカニズムです。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1867
msgid ""
"Quarkus comes with a CORS filter at the HTTP layer level.\n"
"Read the xref:http-reference.adoc#cors-filter[HTTP Reference Documentation] to learn\n"
"how to use it."
msgstr "Quarkus には、HTTP レイヤーレベルの CORS フィルターが付属しています。使用方法については、xref:http-reference.adoc#cors-filter[HTTPリファレンスドキュメント] を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1871
msgid "More advanced usage"
msgstr "より高度な使用法"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1873
msgid ""
"Here are some more advanced topics that you may not need to know about initially, but\n"
"could prove useful for more complex use cases."
msgstr "ここでは、最初は知る必要がないかもしれませんが、より複雑なユースケースに役立つ可能性のある、より詳細なトピックをいくつか紹介します。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1877
msgid "Execution model, blocking, non-blocking"
msgstr "実行モデル、ブロッキング、非ブロッキング"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1881
msgid "RESTEasy Reactive is implemented using two main thread types:"
msgstr "RESTEasy Reactive は、次の 2 つのメインスレッドタイプを使用して実装されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1883
#, fuzzy
msgid ""
"Event-loop threads: which are responsible, among other things, for reading bytes from the HTTP request and\n"
"writing bytes back to the HTTP response"
msgstr "イベントループ・スレッド：HTTPリクエストからのバイトの読み込みと、HTTPレスポンスへのバイトの書き戻しを担当する。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1885
msgid "Worker threads: they are pooled and can be used to offload long-running operations"
msgstr "ワーカースレッド: プールされ、長時間実行される操作の負荷を軽減するために使用できます"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1887
msgid ""
"The event-loop threads (also called IO threads) are responsible for actually performing all the IO\n"
"operations in an asynchronous way, and to trigger any listener interested in the completion of those\n"
"IO operations."
msgstr "イベントループスレッド (IO スレッドとも呼ばれます) は、すべての IO 操作を非同期で実際に実行し、それらの IO 操作の完了に関心のあるリスナーをトリガーする役割を果たします。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1891
msgid ""
"By default, the thread RESTEasy Reactive will run endpoint methods on depends on the signature of the method.\n"
"If a method returns one of the following types then it is considered non-blocking, and will be run on the IO thread\n"
"by default:"
msgstr "デフォルトでは、スレッド RESTEasy Reactive は、メソッドのシグネチャーに応じてエンドポイントメソッドを実行します。メソッドが次のタイプのいずれかを返す場合、それは非ブロッキングと見なされ、デフォルトで IO スレッドで実行されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1895
msgid "`io.smallrye.mutiny.Uni`"
msgstr "`io.smallrye.mutiny.Uni`"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1896
msgid "`io.smallrye.mutiny.Multi`"
msgstr "`io.smallrye.mutiny.Multi`"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1897
msgid "`java.util.concurrent.CompletionStage`"
msgstr "`java.util.concurrent.CompletionStage`"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1898
msgid "`org.reactivestreams.Publisher`"
msgstr "`org.reactivestreams.Publisher`"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1899
msgid "Kotlin `suspended` methods"
msgstr "Kotlin の `suspended` メソッド"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1901
msgid ""
"This 'best guess' approach means most operations will run on the correct thread by default.\n"
"If you are writing reactive code, your method will generally return one of these types and will be executed on the IO thread.\n"
"If you are writing blocking code, your methods will usually return the result directly, and these will be run on a worker thread."
msgstr "この「最善の推測」アプローチは、ほとんどの操作がデフォルトで正しいスレッドで実行されることを意味します。リアクティブなコードを書いている場合、メソッドは通常これらの型のいずれかを返し、IOスレッドで実行されます。ブロッキングコードを書いている場合、メソッドは通常、結果を直接返し、これらはワーカースレッドで実行されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1905
msgid ""
"You can override this behaviour using the\n"
"https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/Blocking.html[`@Blocking`]\n"
"and\n"
"https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/NonBlocking.html[`@NonBlocking`]\n"
"annotations. This can be applied at the method, class or `jakarta.ws.rs.core.Application` level."
msgstr "link:https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/Blocking.html[@Blocking] と link:https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/NonBlocking.html[@NonBlocking] アノテーションを使用してこの動作をオーバーライドすることができます。これは、メソッド、クラス、 `jakarta.ws.rs.core.Application` の各レベルで適用することができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1911
msgid "The example below will override the default behaviour and always run on a worker thread, even though it returns a `Uni`."
msgstr "以下の例は、デフォルトの動作をオーバーライドし、`Uni` を返しても、常にワーカースレッドで実行されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1935
msgid ""
"Most of the time, there are ways to achieve the same blocking operations in an asynchronous/reactive\n"
"way, using https://smallrye.io/smallrye-mutiny/[Mutiny], https://hibernate.org/reactive/[Hibernate Reactive]\n"
"or any of the xref:quarkus-reactive-architecture.adoc#quarkus-extensions-enabling-reactive[Quarkus Reactive extensions] for example:"
msgstr "ほとんどの場合、 https://smallrye.io/smallrye-mutiny/[Mutiny] 、 https://hibernate.org/reactive/[Hibernate Reactive] 、または xref:quarkus-reactive-architecture.adoc#quarkus-extensions-enabling-reactive[Quarkusリアクティブエクステンション] などを使って、同じブロック操作を非同期/リアクティブに実現する方法があります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1962
msgid ""
"If a method or class is annotated with `jakarta.transaction.Transactional` then it will also be treated as a blocking\n"
"method. This is because JTA is a blocking technology, and is generally used with other blocking technology such as\n"
"Hibernate and JDBC. An explicit `@Blocking` or `@NonBlocking` on the class will override this behaviour."
msgstr "メソッドやクラスに `jakarta.transaction.Transactional` のアノテーションを付けると、そのメソッドもブロッキングメソッドとして扱われます。これは、JTAがブロッキング技術であり、一般的にHibernateやJDBCなどの他のブロッキング技術と共に使用されるためです。クラスに明示的に `@Blocking` または `@NonBlocking` を付けると、この動作は上書きされます。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1966
msgid "Overriding the default behaviour"
msgstr "デフォルトの動作のオーバーライド"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1968
msgid ""
"If you want to override the default behavior, you can annotate a `jakarta.ws.rs.core.Application` subclass in your application with `@Blocking` or `@NonBlocking`,\n"
"and this will set the default for every method that does not have an explicit annotation."
msgstr "デフォルトの動作をオーバーライドしたい場合は、アプリケーション内の `jakarta.ws.rs.core.Application` サブクラスに `@Blocking` または `@NonBlocking` のアノテーションを付けると、明示的なアノテーションを持たないすべてのメソッドのデフォルトが設定されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1971
msgid ""
"Behavior can still be overridden on a class or method level by annotating them directly, however,\n"
"all endpoints without an annotation will now follow the default, no matter their method signature."
msgstr "クラスやメソッドに直接アノテーションを付けることで動作をオーバーライドすることは可能ですが、アノテーションのないエンドポイントは、メソッドのシグネチャに関係なくデフォルトに従うようになりました。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1975
msgid "Exception mapping"
msgstr "例外のマッピング"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:1977
msgid ""
"If your application needs to return non-nominal HTTP codes in error cases, the best is\n"
"to throw exceptions that will result in the proper HTTP response being sent by the\n"
"framework using link:{jaxrsapi}/jakarta/ws/rs/WebApplicationException.html[`WebApplicationException`] or any of its subtypes:"
msgstr "もしアプリケーションがエラー時に正規の HTTP コード以外を返す必要がある場合、最善の方法は、フレームワークが link:{jaxrsapi}/jakarta/ws/rs/WebApplicationException.html[`WebApplicationException`] またはその継承型を使用して適切な HTTP レスポンスを送信する結果となる例外を投げることです。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2008
#, fuzzy
msgid "You can change the log level of the thrown `WebApplicationException` exceptions by configuring the following property `quarkus.log.category.\"WebApplicationException\".level` like so:"
msgstr "次のように `quarkus.log.category.\"WebApplicationException\".level` プロパティを設定することで、スローされた `WebApplicationException` 例外 のログレベルを変更することができる："

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2016
#, fuzzy
msgid ""
"If your endpoint method is delegating calls to another service layer which\n"
"does not know of Jakarta REST, you need a way to turn service exceptions to an\n"
"HTTP response, and you can do that using the\n"
"link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerExceptionMapper.html[`@ServerExceptionMapper`]\n"
"annotation on a method, with one parameter of the exception type you want to handle, and turning\n"
"that exception into a link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse`] (or a\n"
"link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse<?>>`]):"
msgstr "エンドポイントメソッドが、Jakarta RESTを知らない別のサービス層に呼び出しを委ねる場合、サービスの例外をHTTPレスポンスに変換する方法が必要です。 link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerExceptionMapper.html[`@ServerExceptionMapper`] アノテーションをメソッドに適用し、処理したい例外の種類を1つのパラメータとして与え、その例外を link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse`] (または link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse<?>>`] ):"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2083
msgid ""
"exception mappers defined in REST endpoint classes will only be called if the\n"
"exception is thrown in the same class. If you want to define global exception mappers,\n"
"simply define them outside a REST endpoint class:"
msgstr "REST エンドポイントクラスで定義された例外マッパーは、例外が同じクラスで出力された場合にのみ呼び出されます。グローバル例外マッパーを定義する場合は、REST エンドポイントクラスの外部で定義するだけです。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2102
msgid "You can also declare link:{jaxrsspec}#exceptionmapper[exception mappers in the Jakarta REST way]."
msgstr "また、 link:{jaxrsspec}#exceptionmapper[例外マッパー] を、Jakarta RESTの方法で宣言することができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2104
msgid "Your exception mapper may declare any of the following parameter types:"
msgstr "例外マッパーは、次のパラメータータイプのいずれかを宣言できます。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2106
#, fuzzy
msgid "Exception mapper parameters"
msgstr "例外マッパーのパラメータ"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2110
msgid "An exception type"
msgstr "例外タイプ"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2111
msgid "Defines the exception type you want to handle"
msgstr "処理する例外タイプを定義します"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2227
msgid "Any of the xref:context-objects[Context objects]"
msgstr "xref:context-objects[Contextオブジェクト] のいずれか"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2230
msgid "link:{jaxrsapi}/jakarta/ws/rs/container/ContainerRequestContext.html[`ContainerRequestContext`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/container/ContainerRequestContext.html[`ContainerRequestContext`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2231
msgid "A context object to access the current request"
msgstr "現在のリクエストにアクセスするためのコンテキストオブジェクト"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2241
msgid "It may declare any of the following return types:"
msgstr "次の戻り値の型のいずれかを宣言できます。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2123
#, fuzzy
msgid "Exception mapper return types"
msgstr "例外マッパーの戻り値の型"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2127
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse`] or link:{jaxrsapi}/jakarta/ws/rs/core/Response.html[`Response`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[RestResponse] または link:{jaxrsapi}/jakarta/ws/rs/core/Response.html[Response]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2128
msgid "The response to send to the client when the exception occurs"
msgstr "例外が発生したときにクライアントに送信するレスポンス"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2130
msgid "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse>`] or link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"
msgstr "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse>`] または link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2131
msgid "An asynchronous response to send to the client when the exception occurs"
msgstr "例外が発生したときにクライアントに送信する非同期レスポンス"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2137
msgid ""
"When an exception occurs, RESTEasy Reactive does not log it by default (for security reasons).\n"
"This can sometimes make it hard to understand why certain exception handling code was invoked (or not invoked).\n"
"To make RESTEasy Reactive log the actual exception before an exception mapping code is run the `org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext` log category can be set to `DEBUG` like so:"
msgstr "例外が発生した場合、RESTEasy Reactive はデフォルトでログを記録しません (セキュリティ上の理由による)。 このため、特定の例外処理コードが呼び出された (または呼び出されなかった) 理由を理解するのが難しい場合があります。 RESTEasy Reactive が例外マッピングコードを実行する前に実際の例外をログするようにするには、次のように `org.jboss.resteasy.reactive.common.core.AbstractResteasyReactiveContext` ログカテゴリを `DEBUG` に設定します。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2147
msgid "Request or response filters"
msgstr "リクエストまたはレスポンスフィルター"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2149
msgid "Via annotations"
msgstr "アノテーション経由"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2151
msgid "You can declare functions which are invoked in the following phases of the request processing:"
msgstr "リクエスト処理の次のフェーズで呼び出される関数を宣言できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2153
msgid "Before the endpoint method is identified: pre-routing request filter"
msgstr "エンドポイントメソッドが識別される前: 事前ルーティングリクエストフィルター"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2154
msgid "After routing, but before the endpoint method is called: normal request filter"
msgstr "ルーティング後、エンドポイントメソッドが呼び出される前: 通常のリクエストフィルター"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2155
msgid "After the endpoint method is called: response filter"
msgstr "エンドポイントメソッドが呼び出された後: レスポンスフィルター"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2157
msgid ""
"These filters allow you to do various things such as examine the request URI,\n"
"HTTP method, influence routing, look or change request headers, abort the request,\n"
"or modify the response."
msgstr "これらのフィルターを使用すると、リクエスト URI、HTTP メソッドの調査、ルーティングへの影響、リクエストヘッダーの検索または変更、リクエストの中止、レスポンスの変更など、さまざまなことができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2161
msgid ""
"Request filters can be declared with the\n"
"link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerRequestFilter.html[`@ServerRequestFilter`]\n"
"annotation:"
msgstr "リクエストフィルターは、 link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerRequestFilter.html[`@ServerRequestFilter`] アノテーションで宣言することが出来ます:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2192
msgid ""
"Request filters are usually executed on the same thread that the method that handles the request will be executed.\n"
"That means that if the method servicing the request is annotated with `@Blocking`, then the filters will also be run\n"
"on the worker thread.\n"
"If the method is annotated with `@NonBlocking` (or is not annotated at all), then the filters will also be run\n"
"on the same event-loop thread."
msgstr "リクエストフィルターは通常、リクエストを処理するメソッドが実行されるのと同じスレッドで実行されます。つまり、リクエストを処理するメソッドが `@Blocking` でアノテーションされている場合は、フィルターもワーカスレッドで実行されます。メソッドに `@NonBlocking` のアノテーションがある場合 (あるいは全くアノテーションがない場合)、フィルターは同じイベントループのスレッドで実行されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2198
msgid ""
"If however a filter needs to be run on the event-loop despite the fact that the method servicing the request will be\n"
"run on a worker thread, then `@ServerRequestFilter(nonBlocking=true)` can be used.\n"
"Note however, that these filters need to be run before **any** filter that does not use that setting and would run on a worker thread."
msgstr "しかし、リクエストを処理するメソッドがワーカスレッドで実行されるにも関わらず、フィルターをイベントループで実行する必要がある場合、`@ServerRequestFilter (nonBlocking=true)` を使用することができます。しかし、これらのフィルターはこの設定を使わず、ワーカースレッドで実行される **どんな** フィルターよりも前に実行される必要があることに注意してください。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2203
msgid ""
"Similarly, response filters can be declared with the\n"
"link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerResponseFilter.html[`@ServerResponseFilter`]\n"
"annotation:"
msgstr "同様に、レスポンスフィルターは link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerResponseFilter.html[`@ServerResponseFilter`] アノテーションで宣言することが可能です。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2221
msgid "Your filters may declare any of the following parameter types:"
msgstr "フィルターは、次のパラメータータイプのいずれかを宣言できます。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2223
#, fuzzy
msgid "Filter parameters"
msgstr "フィルターパラメーター"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2233
msgid "link:{jaxrsapi}/jakarta/ws/rs/container/ContainerResponseContext.html[`ContainerResponseContext`]"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/container/ContainerResponseContext.html[`ContainerResponseContext`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2234
msgid "A context object to access the current response"
msgstr "現在のレスポンスにアクセスするためのコンテキストオブジェクト"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2236
msgid "link:{jdkapi}/java/lang/Throwable.html[`Throwable`]"
msgstr "link:{jdkapi}/java/lang/Throwable.html[`Throwable`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2237
msgid "Any thrown exception, or `null` (only for response filters)"
msgstr "出力された例外、または `null` (レスポンスフィルターの場合のみ)"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2243
#, fuzzy
msgid "Filter return types"
msgstr "フィルター・リターン・タイプ"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2247
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse<?>`] or link:{jaxrsapi}/jakarta/ws/rs/core/Response.html[`Response`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse<?>`] または link:{jaxrsapi}/jakarta/ws/rs/core/Response.html[`Response`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2248
msgid "The response to send to the client instead of continuing the filter chain, or `null` if the filter chain should proceed"
msgstr "フィルターチェーンを続行する代わりにクライアントに送信するレスポンス、またはフィルターチェーンを続行する必要がある場合は null"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2250
msgid "link:{jdkapi}/java/util/Optional.html[`Optional<RestResponse<?>>`] or link:{jdkapi}/java/util/Optional.html[`Optional<Response>`]"
msgstr "link:{jdkapi}/java/util/Optional.html[`Optional<RestResponse<?>>`] または link:{jdkapi}/java/util/Optional.html[`Optional<Response>`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2251
msgid "An optional response to send to the client instead of continuing the filter chain, or an empty value if the filter chain should proceed"
msgstr "フィルターチェーンを続行する代わりにクライアントに送信するオプションのレスポンス、またはフィルターチェーンを続行する必要がある場合は空の値"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2253
msgid "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse<?>>`] or link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"
msgstr "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse<?>>`] または link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"

#. type: Table
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2254
msgid "An asynchronous response to send to the client instead of continuing the filter chain, or `null` if the filter chain should proceed"
msgstr "フィルターチェーンを続行する代わりにクライアントに送信する非同期レスポンス、またはフィルターチェーンを続行する必要がある場合は null"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2258
msgid "You can restrict the Resource methods for which a filter runs, by using link:{jaxrsapi}/jakarta/ws/rs/NameBinding.html[`@NameBinding`] meta-annotations."
msgstr "link:{jaxrsapi}/jakarta/ws/rs/NameBinding.html[`@NameBinding`] メタアノテーションを使用して、フィルターが実行されるリソースメソッドを制限できます。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2260
msgid "The Jakarta REST way"
msgstr "ジャカルタRESTの方式"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2262
msgid "You can also link:{jaxrsspec}#filters[declare request and response filters in the Jakarta REST way]."
msgstr "link:{jaxrsspec}#filters[JAX-RS方式でリクエストフィルタ、レスポンスフィルタを宣言する]こともできます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2264
msgid ""
"Both HTTP request and response can be intercepted by providing `ContainerRequestFilter` or `ContainerResponseFilter`\n"
"implementations respectively. These filters are suitable for processing the metadata associated with a message: HTTP\n"
"headers, query parameters, media type, and other metadata. They also have the capability to abort the request\n"
"processing, for instance when the user does not have the permissions to access the endpoint."
msgstr "HTTP リクエストとレスポンスの両方とも、それぞれ `ContainerRequestFilter` または `ContainerResponseFilter` の実装を提供することで、 インターセプトすることができます。これらのフィルタは、メッセージに関連付けられたメタデータを処理するのに適しています。HTTP ヘッダ、クエリパラメーター、メディアタイプ、その他のメタデータです。また、ユーザーがエンドポイントにアクセスする権限を持っていない場合など、リクエスト処理を中止する機能も持っています。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2269
msgid ""
"Let's use `ContainerRequestFilter` to add logging capability to our service. We can do that by implementing\n"
"`ContainerRequestFilter` and annotating it with the `@Provider` annotation:"
msgstr "`ContainerRequestFilter` を使用して、サービスにロギング機能を追加してみましょう。 `ContainerRequestFilter` を実装して、 `@Provider` アノテーションをつけることで実現できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2308
msgid "Now, whenever a REST method is invoked, the request will be logged into the console:"
msgstr "これで、RESTメソッドが呼び出されるたびに、リクエストがコンソールにログとして記録されるようになりました。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2318
msgid "Readers and Writers: mapping entities and HTTP bodies"
msgstr "リーダーとライター: マッピングエンティティーと HTTP 本文"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2322
msgid ""
"Whenever your endpoint methods return an object (of when they return a\n"
"link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse<?>`]\n"
"or link:{jaxrsapi}/jakarta/ws/rs/core/Response.html[`Response`] with\n"
"an entity), RESTEasy Reactive will look for a way to map that into an HTTP response body."
msgstr "エンドポイントメソッドが（link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse<?>`] もしくはエンティティの link:{jaxrsapi}/jakarta/ws/rs/core/Response.html[`Response`] を返し）オブジェクトを返すときはいつでも、RESTEasy Reactive は、それを HTTP レスポンス本文にマップする方法を探します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2327
msgid ""
"Similarly, whenever your endpoint method takes an object as parameter, we will look for\n"
"a way to map the HTTP request body into that object."
msgstr "同様に、エンドポイントメソッドがオブジェクトをパラメーターとして受け取る場合は常に、HTTP リクエストの本文をそのオブジェクトにマッピングする方法を探します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2330
msgid ""
"This is done via a pluggable system of link:{jaxrsapi}/jakarta/ws/rs/ext/MessageBodyReader.html[`MessageBodyReader`]\n"
"and link:{jaxrsapi}/jakarta/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`] interfaces,\n"
"which are responsible for defining which Java type they map from/to, for which media types,\n"
"and how they turn HTTP bodies to/from Java instances of that type."
msgstr "これは、link:{jaxrsapi}/jakarta/ws/rs/ext/MessageBodyReader.html[`MessageBodyReader`] と link:{jaxrsapi}/jakarta/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`] インターフェイスのプラグインシステムによって行われ、どの Java 型からどのメディアタイプへマッピングするか、またその型の Java インスタンスとどのように HTTP ボディをやり取りするかを定義する役割を持っています。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2335
msgid "For example, if we have our own `Cheese` type on our endpoint:"
msgstr "たとえば、エンドポイントに独自の `Cheese` タイプがある場合:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2368
msgid ""
"Then we can define how to read and write it with our body reader/writers, annotated\n"
"with link:{jaxrsapi}/jakarta/ws/rs/ext/Provider.html[`@Provider`]:"
msgstr "次に、 link:{jaxrsapi}/jakarta/ws/rs/ext/Provider.html[`@Provider`] でアノテーションを付けたボディリーダー/ライターを使用して読み取りと書き込みの方法を定義できます:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2430
msgid ""
"If you want to get the most performance our of your writer, you can extend the\n"
"link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/spi/ServerMessageBodyWriter.html[`ServerMessageBodyWriter`]\n"
"instead of link:{jaxrsapi}/jakarta/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`]\n"
"where you will be able to use less reflection and bypass the blocking IO layer:"
msgstr "ライターのパフォーマンスを最大限に高めたい場合は、 link:{jaxrsapi}/jakarta/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`] の代わりに link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/spi/ServerMessageBodyWriter.html[`ServerMessageBodyWriter`] を拡張できます。こちらでは、リフレクションの使用を減らし、ブロッキング IO レイヤーをバイパスできます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2476
msgid ""
"You can restrict which content-types your reader/writer apply to by adding\n"
"link:{jaxrsapi}/jakarta/ws/rs/Consumes.html[`Consumes`]/link:{jaxrsapi}/jakarta/ws/rs/Produces.html[`Produces`] annotations\n"
"on your provider class."
msgstr "プロバイダークラスに link:{jaxrsapi}/jakarta/ws/rs/Consumes.html[`Consumes`]/link:{jaxrsapi}/jakarta/ws/rs/Produces.html[`Produces`] アノテーションを追加すると、リーダー/ライターが適用するコンテンツタイプを制限することができます。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2480
msgid "Reader and Writer interceptors"
msgstr "リーダーおよびライターインターセプター"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2482
msgid ""
"Just as you can intercept requests and responses, you can also intercept readers and writers, by\n"
"extending the link:{jaxrsapi}/jakarta/ws/rs/ext/ReaderInterceptor.html[`ReaderInterceptor`] or\n"
"link:{jaxrsapi}/jakarta/ws/rs/ext/WriterInterceptor.html[`WriterInterceptor`] on a class annotated with\n"
"link:{jaxrsapi}/jakarta/ws/rs/ext/Provider.html[`@Provider`]."
msgstr "リクエストとレスポンスをインターセプトするのと同様に、 link:{jaxrsapi}/jakarta/ws/rs/ext/ReaderInterceptor.html[ReaderInterceptor] または link:{jaxrsapi}/jakarta/ws/rs/ext/WriterInterceptor.html[WriterInterceptor] を拡張し、 link:{jaxrsapi}/jakarta/ws/rs/ext/Provider.html[@Provider] でアノテーションすることで、リーダーとライターもインターセプトすることができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2487
msgid "If we look at this endpoint:"
msgstr "このエンドポイントを見ると、次のようになります。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2512
msgid "We can add reader and writer interceptors like this:"
msgstr "次のようなリーダーとライターのインターセプターを追加できます。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2549
msgid "RESTEasy Reactive and REST Client Reactive interactions"
msgstr "RESTEasy リアクティブおよび REST クライアントリアクティブインタラクション"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2551
msgid ""
"In Quarkus, the RESTEasy Reactive extension and xref:rest-client-reactive.adoc[the REST Client Reactive extension] share the same infrastructure.\n"
"One important consequence of this consideration is that they share the same list of providers (in the Jakarta REST meaning of the word)."
msgstr "Quarkusでは、RESTEasy Reactiveエクステンションと xref:rest-client-reactive.adoc[REST Client Reactive] エクステンションは、同じインフラストラクチャを共有しています。この考慮の重要な結果の1つは、（Jakarta RESTの意味での）プロバイダのリストを共有することです。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2554
msgid ""
"For instance, if you declare a `WriterInterceptor`, it will by default intercept both the servers calls and the client calls,\n"
"which might not be the desired behavior."
msgstr "例えば、 `WriterInterceptor` を宣言した場合、デフォルトではサーバーの呼び出しとクライアントの呼び出しの両方をインターセプトしますが、これは望ましい動作ではないかもしれません。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2557
msgid "However, you can change this default behavior and constrain a provider to:"
msgstr "しかし、このデフォルトの動作を変更してプロバイダを制約することができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2559
msgid "only consider *server* calls by adding the `@ConstrainedTo(RuntimeType.SERVER)` annotation to your provider;"
msgstr "プロバイダに `@ConstrainedTo(RuntimeType.SERVER)` アノテーションを追加することで、 *サーバー* コールのみを考慮します。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2560
msgid "only consider *client* calls by adding the `@ConstrainedTo(RuntimeType.CLIENT)` annotation to your provider."
msgstr "プロバイダに `@ConstrainedTo(RuntimeType.CLIENT)` アノテーションを追加することで、 *クライアント* コールのみを考慮します。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2562
msgid "Parameter mapping"
msgstr "パラメータマッピング"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2564
msgid ""
"All xref:request-parameters[Request Parameters] can be declared as link:{jdkapi}/java/lang/String.html[`String`],\n"
"but also any of the following types:"
msgstr "すべての xref:request-parameters[リクエストパラメーター] は、link:{jdkapi}/java/lang/String.html[String] として宣言することができますが、それ以外にも以下のいずれかの型でも大丈夫です:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2567
msgid ""
"Types for which a link:{jaxrsapi}/jakarta/ws/rs/ext/ParamConverter.html[`ParamConverter`] is available via a registered\n"
"link:{jaxrsapi}/jakarta/ws/rs/ext/ParamConverterProvider.html[`ParamConverterProvider`]."
msgstr "リンク先のタイプ: {jaxrsapi}/jakarta/ws/rs/ext/ParamConverter.html[`ParamConverter`] は、登録済みの link:{jaxrsapi}/jakarta/ws/rs/ext/ParamConverterProvider.html[`ParamConverterProvider`] から入手できます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2569
msgid "Primitive types."
msgstr "プリミティブ型"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2570
msgid "Types that have a constructor that accepts a single link:{jdkapi}/java/lang/String.html[`String`] argument."
msgstr "単一の link:{jdkapi}/java/lang/String.html[`String`] 引数を受け入れるコンストラクターを持つ型。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2571
msgid ""
"Types that have a static method named `valueOf` or `fromString` with a single link:{jdkapi}/java/lang/String.html[`String`] argument\n"
"that return an instance of the type. If both methods are present then `valueOf` will be used unless\n"
"the type is an `enum` in which case `fromString` will be used."
msgstr "link:{jdkapi}/java/lang/String.html[`String`] という引数を持ち、その型のインスタンスを返す `valueOf` または `fromString` という名前の静的メソッドを持っている型。もし両方のメソッドが存在する場合は、`valueOf` が使用されます。ただし、その型が `enum` の場合は `fromString` が使用されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2574
msgid ""
"link:{jdkapi}/java/util/List.html[`List<T>`], link:{jdkapi}/java/util/Set.html[`Set<T>`], or\n"
"link:{jdkapi}/java/util/SortedSet.html[`SortedSet<T>`], where `T` satisfies any above criterion."
msgstr "link:{jdkapi}/java/util/List.html[`List<T>`]、link:{jdkapi}/java/util/Set.html[`Set<T>`]、または link:{jdkapi}/java/util/SortedSet.html[`SortedSet<T>`]。ここで `T` は上記の基準を満たします。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2577
msgid "The following example illustrates all those possibilities:"
msgstr "次の例は、これらすべての可能性を示しています。"

#. type: Title ====
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2666
msgid "Handling dates"
msgstr "日付の取り扱い"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2668
msgid ""
"RESTEasy Reactive supports the use of the implementations of `java.time.Temporal` (like `java.time.LocalDateTime`) as query, path, or form params.\n"
"Furthermore, it provides the `@org.jboss.resteasy.reactive.DateFormat` annotation, which can be used to set a custom expected pattern.\n"
"Otherwise, the JDK's default format for each type is used implicitly."
msgstr "RESTEasy Reactiveは、（ `java.time.LocalDateTime` のような） `java.time.Temporal` の実装をクエリ、パス、またはフォームのパラメータとして使用することをサポートしています。さらに、 `@org.jboss.resteasy.reactive.DateFormat` アノテーションを提供し、これを使用してカスタムの期待パターンを設定することができます。指定しない場合は、JDKの各型のデフォルトフォーマットが暗黙のうちに使用されます。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2672
msgid "Preconditions"
msgstr "前提条件"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2674
msgid ""
"https://tools.ietf.org/html/rfc7232[HTTP allows requests to be conditional], based on a number of\n"
"conditions, such as:"
msgstr "以下のようないくつかの条件の下で、link:https://tools.ietf.org/html/rfc7232[HTTPでは条件付きのリクエストが可能です] :"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2677
msgid "Date of last resource modification"
msgstr "リソースの最終変更日"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2678
msgid "A resource tag, similar to a hash code of the resource to designate its state or version"
msgstr "リソースの状態またはバージョンを指定するためのリソースのハッシュコードに似たリソースタグ"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2680
msgid ""
"Let's see how you can do conditional request validation using the\n"
"link:{jaxrsapi}/jakarta/ws/rs/core/Request.html[`Request`] context object:"
msgstr "link:{jaxrsapi}/jakarta/ws/rs/core/Request.html[`Request`] コンテキストオブジェクトを使用して、条件付きリクエスト検証を行う方法を見てみましょう。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2742
msgid "When we call `GET /conditional` the first time, we will get this response:"
msgstr "`GET /conditional` を初めて呼び出すと、このようなレスポンスが返ってきます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2755
msgid "So now if we want to check if we need to fetch a new version, we can make the following request:"
msgstr "これで、新しいバージョンを取得する必要があるかどうかを確認したい場合は、次のようなリクエストを行うことができます:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2764
msgid "And we would get the following response:"
msgstr "そして、次のようなレスポンスが返ってきます:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2771
msgid ""
"Because the resource has not been modified since that date, this saves on sending the resource but can also help your users detect the concurrent modification.\n"
"For example, one client wants to update the resource, but another user has modified it since.\n"
"You can follow the previous `GET` request with this update:"
msgstr "なぜなら、そのリソースはその日以降に変更されていないからです。これはリソースを送信する手間を省くだけでなく、ユーザーが同時に変更されたことを検出するのにも役立ちます。たとえば、あるクライアントがリソースを更新したいが、別のユーザーがその後にリソースを変更したとしましょう。この場合、前の `GET` リクエストに続いて、この更新を行うことができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2787
msgid ""
"And if some other user has modified the resource between your `GET` and your `PUT` you would\n"
"get this answer back:"
msgstr "また、他のユーザーが GET と PUT の間のリソースを変更した場合は、次の回答が返されます。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2797
msgid "Negotiation"
msgstr "ネゴシエーション"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2799
msgid ""
"One of the main ideas of REST (https://tools.ietf.org/html/rfc7231#section-3.4[and HTTP]) is that\n"
"your resource is independent of its representation, and\n"
"that both the client and server are free to represent their resources in as many media types as\n"
"they want. This allows the server to declare support for multiple representations and let the\n"
"client declare which ones it supports and get served something appropriate."
msgstr "REST (https://tools.ietf.org/html/rfc7231#section-3.4[および HTTP]) の主な考え方の 1 つは、リソースはその表現に依存せず、クライアントとサーバーの両方が、望むだけ多くのメディアタイプでリソースを自由に表現できることです。これにより、サーバーは複数の表現のサポートを宣言し、クライアントはどの表現をサポートするかを宣言し、適切なものを提供されるようにすることができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2805
msgid "The following endpoint supports serving cheese in plain text or JSON:"
msgstr "次のエンドポイントは、プレーンテキストまたは JSON での cheese の提供をサポートしています。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2855
msgid ""
"The user will be able to select which representation it gets with the\n"
"link:{httpspec}#section-5.3.2[`Accept`] header, in the case of JSON:"
msgstr "JSON の場合、ユーザーは link:{httpspec}#section-5.3.2[`Accept`] ヘッダーでどの表現を取得するかを選択することができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2871
msgid "And for text:"
msgstr "そしてテキストの場合:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2886
msgid "Similarly, you can `PUT` two different representations. JSON:"
msgstr "同様に、2 つの異なる表現を PUT することができます。JSON:"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2904
msgid "Or plain text:"
msgstr "またはプレーンテキスト:"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2922
msgid "HTTP Compression"
msgstr "HTTP圧縮"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2924
msgid ""
"The body of an HTTP response is not compressed by default.\n"
"You can enable the HTTP compression support by means of `quarkus.http.enable-compression=true`."
msgstr "HTTP レスポンスのボディは、デフォルトでは圧縮されていません。`quarkus.http.enable-compression=true` を使用して HTTP 圧縮サポートを有効にできます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2927
msgid "If compression support is enabled then the response body is compressed if:"
msgstr "圧縮サポートが有効であれば、以下の場合にレスポンスボディが圧縮されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2929
msgid "the resource method is annotated with `@io.quarkus.vertx.http.Compressed`, or"
msgstr "ルートメソッドが `@io.quarkus.vertx.http.Compressed` でアノテーションされている、または"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2930
msgid "the `Content-Type` header is set and the value is a compressed media type as configured via `quarkus.http.compress-media-types`."
msgstr "`Content-Type` ヘッダーが設定されており、その値は `quarkus.http.compress-media-types` を介して設定された圧縮メディアタイプである。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2932
msgid "The response body is never compressed if:"
msgstr "次の場合、レスポンスボディは圧縮されません。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2934
msgid "the resource method is annotated with `@io.quarkus.vertx.http.Uncompressed`, or"
msgstr "ルートメソッドが `@io.quarkus.vertx.http.Uncompressed` でアノテーションされている、または"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2935
msgid "the `Content-Type` header is not set."
msgstr "`Content-Type` ヘッダーが設定されていない。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2937
msgid "By default, the following list of media types is compressed: `text/html`, `text/plain`, `text/xml`, `text/css`, `text/javascript` and `application/javascript`."
msgstr "デフォルトでは、次のメディアタイプのリストが圧縮されています: `text/html`、`text/plain`、`text/xml`、`text/css`、`text/javascript`、`application/javascript`。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2939
msgid "If the client does not support HTTP compression then the response body is not compressed."
msgstr "クライアントが HTTP 圧縮をサポートしていない場合、レスポンスボディは圧縮されません。"

#. type: Title ==
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2942
msgid "Include/Exclude Jakarta REST classes"
msgstr "Jakarta RESTクラスのインクルード／エクスクルード"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2944
msgid "Using Build time conditions"
msgstr "ビルドタイム条件の使用"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2946
msgid ""
"Quarkus enables the inclusion or exclusion of Jakarta REST Resources, Providers and Features directly thanks to build time conditions in the same that it does for CDI beans.\n"
"Thus, the various Jakarta REST classes can be annotated with profile conditions (`@io.quarkus.arc.profile.IfBuildProfile` or `@io.quarkus.arc.profile.UnlessBuildProfile`) and/or with property conditions (`io.quarkus.arc.properties.IfBuildProperty` or `io.quarkus.arc.properties.UnlessBuildProperty`) to indicate to Quarkus at build time under which conditions these Jakarta REST classes should be included."
msgstr "Quarkusでは、CDI Beanと同様に、ビルド時の条件によって、Jakarta RESTリソース、プロバイダ、フィーチャーを直接取り込んだり除外したりすることができます。したがって、さまざまなJakarta RESTクラスにプロファイル条件（ `@io.quarkus.arc.profile.IfBuildProfile` または `@io.quarkus.arc.profile.UnlessBuildProfile` ）やプロパティ条件（ `io.quarkus.arc.properties.IfBuildProperty` または `io.quarkus.arc.properties.UnlessBuildProperty` ）をアノテーションして、ビルド時にQuarkusに対して、どのような条件の下でJakarta RESTクラスを含めるべきかを示すことができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2949
msgid "In the following example, Quarkus includes the `ResourceForApp1Only` Resource class if and only if the build profile `app1` has been enabled."
msgstr "次の例では、Quarkusは、ビルドプロファイル `app1` が有効になっている場合に限り、 `ResourceForApp1Only` リソースを含めます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2964
msgid "Please note that if a Jakarta REST Application has been detected and the method `getClasses()` and/or `getSingletons()` has/have been overridden, Quarkus will ignore the build time conditions and consider only what has been defined in the Jakarta REST Application."
msgstr "Jakarta REST Applicationが検出され、メソッド `getClasses()` 、 `getSingletons()` がオーバーライドされている場合、Quarkusはビルド時の条件を無視し、Jakarta REST Applicationで定義されているもののみを考慮することに注意してください。"

#. type: Title ===
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2966
msgid "Using a runtime property"
msgstr "実行時プロパティの使用"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2968
msgid "Quarkus can also conditionally disable Jakarta REST Resources based on the value of runtime properties using the `@io.quarkus.resteasy.reactive.server.EndpointDisabled` annotation."
msgstr "Quarkusでは、 `@io.quarkus.resteasy.reactive.server.EndpointDisabled` アノテーションを使用して、実行時プロパティの値に基づいてjakarta RESTリソースを条件付きで無効化することもできます。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2970
msgid "In the following example, Quarkus will exclude `RuntimeResource` at runtime if the application has `some.property` configured to `\"disable\"`."
msgstr "次の例では、アプリケーションで `some.property` が `\"disable\"` に設定されている場合、Quarkus は実行時に `RuntimeResource` を除外します。"

#. type: Title ==
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2986
msgid "RESTEasy Reactive client"
msgstr "RESTEasy Reactive クライアント"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2988
msgid "In addition to the Server side, RESTEasy Reactive comes with a new MicroProfile REST Client implementation that is non-blocking at its core."
msgstr "RESTEasy Reactiveには、サーバー側に加えて、ノンブロッキングを核とした新しいMicroProfile Rest Clientの実装が搭載されています。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2990
msgid "Please note that the `quarkus-rest-client` extension may not be used with RESTEasy Reactive, use `quarkus-rest-client-reactive` instead."
msgstr "なお、RESTEasy Reactiveでは、 `quarkus-rest-client` エクステンションが正常に動作しない場合があります。 `quarkus-rest-client-reactive` を代わりに使用して下さい。"

#. type: Plain Text
#: upstream/_versions/main/guides/resteasy-reactive.adoc:2992
msgid "See the xref:rest-client-reactive.adoc[REST Client Reactive Guide] for more information about the reactive REST client."
msgstr "リアクティブ・クライアントの詳細については、link:rest-client-reactive.html[REST Client Reactiveガイド] を参照してください。"
