msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Using OpenTelemetry Logging"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid ""
"This guide explains how your Quarkus application can utilize https://opentelemetry.io/[OpenTelemetry] (OTel) to provide\n"
"distributed logging for interactive web applications."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "OpenTelemetry Logging is disabled by default."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
#, fuzzy
msgid "The xref:opentelemetry.adoc[OpenTelemetry Guide] is available with signal independent information about the OpenTelemetry extension."
msgstr "xref:opentelemetry.adoc[OpenTelemetryガイドには] 、OpenTelemetryエクステンションに関する信号に依存しない情報が掲載されています。"

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Architecture"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "In this guide, we create a straightforward REST application to demonstrate distributed logging, similar to the other OpenTelemetry guides."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Solution"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can skip right to the completed example."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "The solution is located in the `opentelemetry-quickstart` link:{quickstarts-tree-url}/opentelemetry-quickstart[directory]."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Creating the Maven project"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid ""
"This command generates the Maven project and imports the `quarkus-opentelemetry` extension,\n"
"which includes the default OpenTelemetry support,\n"
"and a gRPC span exporter for https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md[OTLP]."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `quarkus-opentelemetry` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "This will add the following to your build file:"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "pom.xml"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "build.gradle"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Examine the Jakarta REST resource"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Create a `src/main/java/org/acme/opentelemetry/TracedResource.java` file with the following content:"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "If you have followed the tracing guide, this class will seem familiar. The main difference is that now, the `hello` message logged with `org.jboss.logging.Logger` will end up in the OpenTelemetry logs."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Create the configuration"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "The only mandatory configuration for OpenTelemetry Logging is the one enabling it:"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "To change any of the default property values, here is an example on how to configure the default OTLP gRPC Exporter within the application, using the `src/main/resources/application.properties` file:"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid ""
"All logs created from the application will include an OpenTelemetry `Resource` indicating the logs were created by the `myservice` application.\n"
"If not set, it will default to the artifact id."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid ""
"Enable the OpenTelemetry logging.\n"
"Must be set at build time."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid ""
"gRPC endpoint to send the logs.\n"
"If not set, it will default to `http://localhost:4317`."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
#, fuzzy
msgid "Optional gRPC headers commonly used for authentication."
msgstr "認証によく使われるオプションの gRPC ヘッダ。"

#: _versions/main/guides/opentelemetry-logging.adoc
#, fuzzy
msgid "To configure the connection using the same properties for all signals, please check the base xref:opentelemetry.adoc#create-the-configuration[configuration section of the OpenTelemetry guide]."
msgstr "すべての信号に対して同じプロパティを使用して接続を設定するには、 xref:opentelemetry.adoc#create-the-configuration[OpenTelemetry ガイドの] 基本 xref:opentelemetry.adoc#create-the-configuration[設定のセクションを] 確認してください。"

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Run the application"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
#, fuzzy
msgid ""
"First we need to start a system to visualise the OpenTelemetry data.\n"
"We have 2 options:"
msgstr "まず、OpenTelemetryデータを視覚化するシステムを立ち上げる必要があります。2つのオプションがあります："

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Start an all-in-one Grafana OTel LGTM system for traces, metrics and logs."
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
#, fuzzy
msgid "See the data"
msgstr "データを見る"

#: _versions/main/guides/opentelemetry-logging.adoc
#, fuzzy
msgid "Grafana OTel LGTM option"
msgstr "Grafana OTel LGTMオプション"

#: _versions/main/guides/opentelemetry-logging.adoc
#, fuzzy
msgid "Take a look at: xref:observability-devservices-lgtm.adoc[Getting Started with Grafana-OTel-LGTM]."
msgstr "ご覧ください： xref:observability-devservices-lgtm.adoc[Grafana-OTel-LGTMを始めましょう] 。"

#: _versions/main/guides/opentelemetry-logging.adoc
#, fuzzy
msgid "This features a Quarkus Dev service including a Grafana for visualizing data, Loki to store logs, Tempo to store traces and Prometheus to store metrics. Also provides and OTel collector to receive the data."
msgstr "Quarkus Devサービスには、データを可視化するGrafana、ログを保存するLoki、トレースを保存するTempo、メトリクスを保存するPrometheusが含まれます。また、データを受け取るためのOTelコレクターも提供します。"

#: _versions/main/guides/opentelemetry-logging.adoc
#, fuzzy
msgid "Logging exporter"
msgstr "ログエクスポーター"

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "You can output all logs to the console by setting the exporter to `logging` in the `application.properties` file:"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
#, fuzzy
msgid ""
"Set the exporter to `logging`.\n"
"Normally you don't need to set this.\n"
"The default is `cdi`."
msgstr "エクスポーターを `logging` に設定します。 通常は設定する必要はありません。デフォルトは `cdi` です。"

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "Also add this dependency to your project:"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
msgid "OpenTelemetry Configuration Reference"
msgstr ""

#: _versions/main/guides/opentelemetry-logging.adoc
#, fuzzy
msgid "See the main xref:opentelemetry.adoc#configuration-reference[OpenTelemetry Guide configuration] reference."
msgstr "メインの xref:opentelemetry.adoc#configuration-reference[OpenTelemetry Guide 設定] リファレンスを参照してください。"
