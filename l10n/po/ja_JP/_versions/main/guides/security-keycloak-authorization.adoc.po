msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Using OpenID Connect (OIDC) and Keycloak to centralize authorization"
msgstr "OpenID Connect (OIDC)とKeycloakを使用した認可の一元化"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Learn how to enable bearer token authorization in your Quarkus application by using link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services] for secure access to protected resources."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Overview"
msgstr "概要"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "The `quarkus-keycloak-authorization` extension builds on the `quarkus-oidc` extension to offer advanced authorization capabilities. It includes a policy enforcer that dynamically regulates access to secured resources. Access is governed by permissions defined in Keycloak, supporting flexible and dynamic Resource-Based Access Control (RBAC)."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Use the `quarkus-keycloak-authorization` extension only if you are using Keycloak and Keycloak Authorization Services is enabled in your environment to handle authorization decisions."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "If you are not using Keycloak, or if Keycloak is configured without Keycloak Authorization Services, use the `quarkus-oidc` extension instead."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "How it works"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "The `quarkus-keycloak-authorization` extension centralizes authorization responsibilities in Keycloak, enhancing security and simplifying application maintenance. The extension:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Uses the `quarkus-oidc` extension to verify bearer tokens."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Sends verified tokens to Keycloak Authorization Services."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Allows Keycloak to evaluate resource-based permissions dynamically, by using attributes such as resource name, identifier, or URI."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "By externalizing authorization decisions, you can:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Implement diverse access control strategies without modifying application code."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Reduce redeployment needs as security requirements evolve."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Compatibility"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "This extension is compatible only with Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC service applications]. It complements explicit mechanisms such as role-based access control with dynamic authorization policies."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Key Features"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "**Centralized Management**: Delegate authorization decisions to Keycloak for consistent security policies across applications."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "**Dynamic Permissions**: Define access control dynamically by using resource attributes."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "**Simplified Maintenance**: Reduce the need to update and redeploy applications when access policies change."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Setting Up"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Before using this extension, ensure the following:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Keycloak Authorization Services is enabled in your Keycloak instance."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Your Quarkus application includes the `quarkus-keycloak-authorization` extension."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "For detailed steps, see the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer Token Authentication] guide."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Additional resources"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid ""
"To learn more about Keycloak Authorization Services and the policy enforcer, visit the official documentation:\n"
"https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak Authorization Services Documentation]."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "https://stedolan.github.io/jq/[jq tool]"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org[Keycloak]"
msgstr "link:https://www.keycloak.org[キークローク]"

#. type: Title ==
#: _versions/main/guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "This example demonstrates a simple microservice setup with two protected endpoints:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "`/api/admin`"
msgstr "`/api/admin`"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Token-based access control"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Access to these endpoints is controlled by using bearer tokens. To gain access, the following conditions must be met:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "**Valid token**: The token must have a correct signature, a valid expiration date, and the appropriate audience."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "**Trust**: The microservice must trust the issuing Keycloak server."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "The bearer tokens issued by the Keycloak server serve as:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "**User identifiers**: Indicating the subject (user) for whom the token was issued."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "**Client references**: Identifying the client application acting on behalf of the user, per OAuth 2.0 Authorization Server standards."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Endpoints and access policies"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "For `/api/users/me`:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "**Access policy**: Open to users with a valid bearer token and the `user` role."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "**Response**: Returns user details as a JSON object derived from the token."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Example response:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "For `/api/admin`:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "*Access policy*: Restricted to users with a valid bearer token and the `admin` role."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Decoupled authorization"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "This example highlights the use of role-based access control (RBAC) policies to protect resources. Key points include:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "*Policy flexibility*: Keycloak supports various policy types, such as attribute-based and custom policies, enabling fine-grained control."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "*Decoupled application logic*: Authorization policies are managed entirely by Keycloak, allowing your application to focus on its core functionality."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The solution is in the `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[directory]."
msgstr "解決策は `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[ディレクトリ] にあります。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Creating the project"
msgstr "プロジェクトの作成"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "To get started, create a new project by using the following command:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "This command generates a new project with the `keycloak-authorization` extension. The extension integrates a Keycloak Adapter into your Quarkus application, providing the necessary capabilities to interact with a Keycloak server and perform bearer token authorization."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Adding extensions to an existing project"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "If you already have an existing Quarkus project, you can add the `oidc` and `keycloak-authorization` extensions by running the following command in your project’s base directory:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "This command adds the following dependencies to your build file:"
msgstr ""

#. type: Block title
#: _versions/main/guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Implementing the `/api/users/me` endpoint"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Start by implementing the `/api/users/me` endpoint. The following code defines a Jakarta REST resource that provides user details:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Implementing the `/api/admin` endpoint"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Next, define the `/api/admin` endpoint. The following code represents a simple Jakarta REST resource protected with authentication:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Role-based access control with Keycloak"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Notice that explicit annotations such as `@RolesAllowed` are not defined to enforce access control for the resources. Instead, the `keycloak-authorization` extension dynamically maps the URIs of protected resources in Keycloak."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Access control is managed as follows:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Keycloak evaluates permissions for each request based on its configured policies."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "The extension enforces these permissions, granting or denying access based on the roles or policies defined in Keycloak."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "This decouples access control logic from the application code, making it easier to manage and update access policies directly in Keycloak."
msgstr ""

#. type: Title ===
#: _versions/main/guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Configuring the application"
msgstr "アプリケーションの設定"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "You can use the OpenID Connect extension to configure the adapter settings through the `application.properties` file, typically located in the `src/main/resources` directory. Below is an example configuration:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Specifies the URL of the Keycloak server and the realm used for authentication."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Identifies the client application within the Keycloak realm."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Defines the client secret for authentication with the Keycloak server."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Disables TLS verification for development purposes. Not recommended for production."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Enables the Keycloak policy enforcer to manage access control based on defined permissions."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Configures Dev Services to import a specified realm file, effective only in dev mode and not in JVM or native modes."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Adding the `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that Dev Services for Keycloak automatically launches a container in development mode. For more details, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "By default, applications using the `quarkus-oidc` extension are treated as `service` type applications. However, the extension also supports `web-app` type applications under the following conditions:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "The access token returned during the authorization code grant flow must be the source of roles (`quarkus.oidc.roles.source=accesstoken`)."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Note: For `web-app` type applications, ID token roles are checked by default."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Starting and configuring the Keycloak server"
msgstr "Keycloak サーバーの起動と設定"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Do not start the Keycloak server when you run the application in dev mode.\n"
"Dev Services for Keycloak launches a container.\n"
"For more information, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr "アプリケーションをdevモードで実行するときは、Keycloakサーバーを起動しないでください。Dev Services for Keycloakはコンテナを起動します。詳細については、 xref:keycloak-dev-mode[Devモードでアプリケーションを実行] するセクションを参照してください。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To start a Keycloak server, use the following Docker command:"
msgstr "Keycloakサーバーを起動するには、以下のDockerコマンドを使用します："

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "For `keycloak.version`, ensure the version is `25.0.6` or later."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "For Keycloak keystore, use the `keycloak-keystore.jks` file located at https://github.com/quarkusio/quarkus-quickstarts/blob/main/security-keycloak-authorization-quickstart/config/keycloak-keystore.jks[quarkus-quickstarts/security-keycloak-authorization-quickstart/config]."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Try to access your Keycloak server at https://localhost:8543[localhost:8543]."
msgstr "link:https://localhost:8543[localhost:8543] のKeycloakサーバーにアクセスしてみてください。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To access the Keycloak Administration Console, log in as the `admin` user.\n"
"The username and password are both `admin`."
msgstr "Keycloak管理コンソールにアクセスするには、 `admin` ユーザーでログインします。ユーザー名とパスワードはいずれも `admin` 。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Import the link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.\n"
"For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[レルム設定] ファイルをインポートして新しいレルムを作成します。詳細については、 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[新しいrealmを作成] する方法についてKeycloakのドキュメントを参照してください。"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "After importing the realm, you can see the resource permissions:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "It explains why the endpoint has no `@RolesAllowed` annotations - the resource access permissions are set directly in Keycloak."
msgstr "これは、エンドポイントに `@RolesAllowed` のアノテーションがない理由を説明しています。リソースのアクセス許可は、Keycloakで直接設定されます。"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Accessing the Keycloak server"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Open your browser and navigate to https://localhost:8543[https://localhost:8543]."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Log in to the Keycloak Administration Console by using the following credentials:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "**Username**: `admin`"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "**Password**: `admin`"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Importing the realm configuration"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "To create a new realm, import the link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[realm configuration file]. For detailed steps on creating realms, refer to the Keycloak documentation: https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[Create a new realm]."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "After importing the realm, you can review the resource permissions:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Role of Keycloak in resource permissions"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "The resource access permissions are configured directly in Keycloak, which eliminates the need for `@RolesAllowed` annotations in your application code. This approach centralizes access control management within Keycloak, simplifying application maintenance and security updates."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Running the application in dev mode"
msgstr "devモードでアプリケーションを実行"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "To run the application in development mode, use the following command:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] starts a Keycloak container and imports the `quarkus-realm.json` configuration file."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui[/q/dev-ui] and click a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr "link:http://localhost:8080/q/dev-ui[q/dev-ui] にある xref:dev-ui.adoc[Dev UI] を開き、 `OpenID Connect` `Dev UI` カードにある `Provider: Keycloak` リンクをクリックします。"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Interacting with Dev UI"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Open the xref:dev-ui.adoc[Dev UI] at http://localhost:8080/q/dev-ui[/q/dev-ui]."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Click the `Provider: Keycloak` link within the `OpenID Connect` Dev UI card."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Testing user permissions"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "When prompted to log in to a `Single Page Application` provided by `OpenID Connect Dev UI`, do the following:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Log in as `alice` (password: `alice`), who only has a `User Permission` to access the `/api/users/me` resource:"
msgstr "`/api/users/me` リソースにアクセスするための `User Permission` しか持っていない `alice` (パスワード: `alice` ) としてログインします："

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/admin`, which returns `403`."
msgstr "`403` を返す `/api/admin` にアクセスします。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/users/me`, which returns `200`."
msgstr "`200` を返す `/api/users/me` にアクセスします。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Log out and log in as `admin` (password: `admin`), who has both `Admin Permission` to access the `/api/admin` resource and `User Permission` to access the `/api/users/me` resource:"
msgstr "ログアウトし、 `admin` （パスワード： `admin` ）としてログインします。 `Admin Permission` は `/api/admin` リソースにアクセスするため、 `User Permission` は `/api/users/me` リソースにアクセスするためです："

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/admin`, which returns `200`."
msgstr "`200` を返す `/api/admin` にアクセスします。"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Customizing the Keycloak realm"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "If you started Dev Services for Keycloak without importing a realm file such as link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.json], create a default `quarkus` realm without Keycloak authorization policies:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Select the `Keycloak Admin` link from the `OpenID Connect` Dev UI card."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Log in to the Keycloak admin console. The username and password are both `admin`."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Follow the instructions at link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services documentation] to enable authorization policies in the `quarkus` realm."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `Keycloak Admin` link is easy to find in Dev UI:"
msgstr "`Keycloak Admin` のリンクはDev UIで簡単に見つけることができます："

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Adding custom JavaScript policies"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "If your application uses Keycloak authorization configured with link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript policies] that are deployed in a JAR archive, Dev Services for Keycloak can transfer this archive to the Keycloak container. Use the following properties in `application.properties` to configure the transfer:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Creates a `policies` alias for the `/policies.jar` classpath resource. The policies archive can also be located on the file system."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Maps the policies archive to the `/opt/keycloak/providers/policies.jar` location inside the Keycloak container."
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Running the application in JVM mode"
msgstr "JVMモードでのアプリケーションの実行"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "After exploring the application in dev mode, you can run it as a standard Java application."
msgstr "開発モードでアプリケーションを試した後、標準の Java アプリケーションとして実行できます。"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "First compile it:"
msgstr "まずコンパイルします。"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Then run it:"
msgstr "そして、以下のように実行します。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Running the application in native mode"
msgstr "ネイティブ・モードでのアプリケーションの実行"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "This same demo can be compiled into native code; no modifications are required."
msgstr "この同じデモはネイティブコードにコンパイルできます。変更は必要ありません。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This implies that you no longer need to install a JVM on your production environment because the runtime technology is included in the produced binary and optimized to run with minimal resources."
msgstr "これは、ランタイム・テクノロジーが生成されたバイナリに含まれており、最小限のリソースで実行できるように最適化されているため、本番環境にJVMをインストールする必要がないことを意味します。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Compilation takes a bit longer, so this step is turned off by default; let's build again by enabling the `native` profile:"
msgstr "コンパイルには少し時間がかかるので、このステップはデフォルトではオフになっています。 `native` プロファイルを有効にして、もう一度ビルドしてみましょう："

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "After a while, you can run this binary directly:"
msgstr "しばらくすると、このバイナリを直接実行できるようになります："

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Testing the application"
msgstr "アプリケーションのテスト"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "See the preceding <<keycloak-dev-mode,Running the application in Dev mode>> section about testing your application in a dev mode."
msgstr "開発モードでアプリケーションをテストする方法については、前述の「 xref:keycloak-dev-mode[開発モードでアプリケーションを実行する] 」のセクションを参照してください。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "You can test the application launched in JVM or native modes with `curl`."
msgstr "`curl` を使って、JVMまたはネイティブ・モードで起動したアプリケーションをテストできます。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The application uses bearer token authorization, and the first thing to do is obtain an access token from the Keycloak server to access the application resources:"
msgstr "このアプリケーションはベアラートークン認可を使用しており、アプリケーションのリソースにアクセスするために最初に行うことは、Keycloakサーバーからアクセストークンを取得することです："

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "When the `quarkus.oidc.authentication.user-info-required` property is set to `true` to require that an access token is used to request `UserInfo`, you must add a `scope=openid` query parameter to the token grant request command, for example:"
msgstr "`quarkus.oidc.authentication.user-info-required` プロパティを `true` に設定して、アクセストークンを使用して `UserInfo` を要求する場合、トークン付与要求コマンドに `scope=openid` クエリパラメータを追加する必要があります："

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The preceding example obtains an access token for user `alice`."
msgstr "前述の例では、ユーザー `alice` のアクセストークンを取得しています。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Any user is allowed to access the\n"
"`http://localhost:8080/api/users/me` endpoint,\n"
"which returns a JSON payload with details about the user."
msgstr "エンドポイントにアクセスできます。 `http://localhost:8080/api/users/me` エンドポイントにアクセスすることができます。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `http://localhost:8080/api/admin` endpoint can only be accessed by users with the `admin` role.\n"
"If you try to access this endpoint with the previously issued access token, you get a `403` response from the server."
msgstr "エンドポイントは `http://localhost:8080/api/admin` エンドポイントにアクセスできるのは、 `admin` ロールを持つユーザーのみです。以前に発行されたアクセストークンを使用してこのエンドポイントにアクセスしようとすると、サーバーから `403` レスポンスが返されます。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To access the admin endpoint, get a token for the `admin` user:"
msgstr "admin エンドポイントにアクセスするには、 `admin` ユーザーのトークンを取得します："

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Injecting the authorization client"
msgstr "認可クライアントの注入"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"In some cases, using the link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak Authorization Client Java API] is beneficial for tasks such as managing resources and obtaining permissions directly from Keycloak.\n"
"For this purpose, you can inject an `AuthzClient` instance into your beans as follows:"
msgstr "リソースを管理したり、Keycloakから直接権限を取得したりするような作業では、 link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak認可クライアントJava API] を使用することが有益な場合があります。この目的のために、以下のようにBeanに `AuthzClient` インスタンスを注入することができます："

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "If you want to use the `AuthzClient` directly, set `quarkus.keycloak.policy-enforcer.enable=true`; otherwise, no bean is available for injection."
msgstr "`AuthzClient` を直接使用したい場合は、 `quarkus.keycloak.policy-enforcer.enable=true` を設定します ; そうでない場合は、インジェクションに使用できる Bean はありません。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Mapping protected resources"
msgstr "保護された資源のマッピング"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "By default, the extension fetches resources on-demand from Keycloak, using their URI to identify and map the resources in your application that need to be protected."
msgstr "デフォルトでは、エクステンションはKeycloakからリソースをオンデマンドでフェッチし、そのURIを使用してアプリケーション内の保護が必要なリソースを識別してマッピングします。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To disable this on-demand fetching and instead pre-load resources at startup, apply the following configuration setting:"
msgstr "このオンデマンド・フェッチを無効にし、代わりに起動時にリソースをプリロードするには、以下のコンフィギュレーション設定を適用します："

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The time required to pre-load resources from Keycloak at startup varies based on their quantity, potentially affecting your application's initial load time.\""
msgstr "起動時にKeycloakからリソースをプリロードするのに必要な時間は、その量によって異なるため、アプリケーションの初期ロード時間に影響を与える可能性があります。\""

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "More about configuring protected resources"
msgstr "保護されたリソースの設定の詳細"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "In the default configuration, Keycloak manages the roles and decides who can access which routes."
msgstr "デフォルトの設定では、Keycloakはロールを管理し、誰がどのルートにアクセスできるかを決定します。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To configure the protected routes by using the `@RolesAllowed` annotation or the `application.properties` file, check the xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] and xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guides.\n"
"For more details, check the xref:security-overview.adoc[Quarkus Security overview]."
msgstr "`@RolesAllowed` アノテーションまたは `application.properties` ファイルを使用して保護ルートを設定するには、 xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) ベアラートークン認証] および xref:security-authorize-web-endpoints-reference.adoc[Web エンドポイントの認可] ガイドを参照してください。詳細については、 xref:security-overview.adoc[Quarkusセキュリティ] の概要を参照してください。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access to public resources"
msgstr "公共資源へのアクセス"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To enable access to a public resource without the `quarkus-keycloak-authorization` applying its policies, create a `permit` HTTP Policy configuration in `application.properties`.\n"
"For more information, see the xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guide."
msgstr "`quarkus-keycloak-authorization` がポリシーを適用せずに公開リソースへのアクセスを有効にするには、 `application.properties` で `permit` HTTP ポリシー設定を作成します。詳細については、「 xref:security-authorize-web-endpoints-reference.adoc[Web エンドポイントの認可] 」ガイドを参照してください。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "There's no need to deactivate policy checks for a Keycloak Authorization Policy with settings such as these:"
msgstr "このような設定でKeycloak認可ポリシーのポリシーチェックを無効にする必要はありません："

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To block access to the public resource to anonymous users, you can create an enforcing Keycloak Authorization Policy:"
msgstr "匿名ユーザーによる公開リソースへのアクセスをブロックするには、Keycloak認可ポリシーを作成します："

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Only the default tenant configuration applies when controlling anonymous access to the public resource is required."
msgstr "公開リソースへの匿名アクセスを制御する必要がある場合は、デフォルトのテナント構成のみが適用されます。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Checking permission scopes programmatically"
msgstr "プログラムで権限スコープをチェック"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"In addition to resource permissions, you can specify method scopes.\n"
"The scope usually represents an action that can be performed on a resource.\n"
"You can create an enforcing Keycloak Authorization Policy with a method scope.\n"
"For example:"
msgstr "リソース権限に加えて、メソッドスコープを指定することもできます。スコープは通常、リソースに対して実行できるアクションを表します。メソッド・スコープを使ってKeycloak認可ポリシーを作成できます。たとえば"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "User must have resource permission 'Scope Permission Resource' and scope 'read'"
msgstr "ユーザーはリソースパーミッション 'Scope Permission Resource' とスコープ 'read' を持っている必要があります。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The Keycloak Policy Enforcer now secures the `/api/protected/standard-way` request path, eliminating the need for additional annotations such as `@RolesAllowed`.\n"
"However, in certain scenarios, a programmatic check is necessary.\n"
"You can achieve this by injecting a `SecurityIdentity` instance into your beans, as shown in the following example.\n"
"Or, you can get the same result by annotating the resource method with `@PermissionsAllowed`.\n"
"The following example demonstrates three resource methods, each requiring the same `read` scope:"
msgstr "キークローク ポリシーエンフォーサーは、 `/api/protected/standard-way` リクエストパスをセキュアにし、 `@RolesAllowed` のような追加のアノテーションを不要にします。 しかし、特定のシナリオでは、プログラムによるチェックが必要です。次の例に示すように、 Bean に `SecurityIdentity` インスタンスを注入することでこれを実現できます。あるいは、リソースメソッドに `@PermissionsAllowed` をアノテーションしても同じ結果が得られます。以下の例では、3つのリソースメソッドを示します。 それぞれが同じ `read` スコープを必要とします："

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Request sub-path `/standard-way` requires both resource permission and scope `read` according to the configuration properties we previously set in the `application.properties`."
msgstr "リクエストサブパス `/standard-way` は、先に `application.properties` で設定した設定プロパティに従って、 リソースパーミッションとスコープ `read` の両方を必要とします。"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Request sub-path `/programmatic-way` only requires permission `Scope Permission Resource`, but we can enforce scope with `SecurityIdentity#checkPermission`."
msgstr "リクエストサブパス `/programmatic-way` にはパーミッション `Scope Permission Resource` だけが必要ですが、 `SecurityIdentity#checkPermission` でスコープを強制することができます。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `@PermissionsAllowed` annotation only grants access to the requests with permission `Scope Permission Resource` and scope `read`.\n"
"For more information, see the section xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Authorization using annotations] of the Security Authorization guide."
msgstr "`@PermissionsAllowed` アノテーションは、パーミッション `Scope Permission Resource` 、スコープ `read` 。詳細はセキュリティ認可ガイドの xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[アノテーションを使った認可] のセクションを参照してください。"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Multi-tenancy"
msgstr "マルチテナンシー"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "You can set up policy enforcer configurations for each tenant, similar to how it is done with xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC) multi-tenancy]."
msgstr "xref:security-openid-connect-multitenancy.adoc[OpenID Connect（OIDC）のマルチテナントと] 同様に、テナントごとにポリシーエンフォーサーの設定を行うことができます。"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "For example:"
msgstr "例えば、以下のようになります。"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Dynamic tenant configuration resolution"
msgstr "動的なテナント設定の解決"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"If you need a more dynamic configuration for the different tenants you want to support and don’t want to end up\n"
"with multiple entries in your configuration file, you can use the `io.quarkus.keycloak.pep.TenantPolicyConfigResolver`."
msgstr "サポートするテナントが異なるためにより動的な設定が必要で、設定ファイルに複数のエントリを作成したくない場合は、 `io.quarkus.keycloak.pep.TenantPolicyConfigResolver` ."

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "This interface allows you to dynamically create tenant configurations at runtime:"
msgstr "このインターフェイスを使用すると、実行時にテナント設定を動的に作成することができます。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Create or update the `/enhanced-config` path in the default tenant config."
msgstr "デフォルトのテナント構成で、 `/enhanced-config` パスを作成または更新します。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Add `/new-config` path into tenant config populated with documented configuration default values."
msgstr "`/new-config` パスをテナント設定に追加し、文書化された設定のデフォルト値を入力します。"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Use default static tenant configuration resolution based on the `application.properties` file and other SmallRye Config configuration sources."
msgstr "`application.properties` ファイルおよびその他の SmallRye Config 構成ソースに基づき、デフォルトの静的テナント構成解決を使用します。"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid ""
"This configuration adheres to the official https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[Keycloak Policy Enforcer Configuration] guidelines.\n"
"For detailed insights into various configuration options, see the following documentation:"
msgstr ""

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ==
#: _versions/main/guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "References"
msgstr "リファレンス"

#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org/documentation.html[Keycloak documentation]"
msgstr "https://www.keycloak.org/documentation.html[Keycloakドキュメント]"

#: _versions/main/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services]"
msgstr "link:https://www.keycloak.org/docs/latest/authorization_services/index.html[キークローク認可サービス]"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"

#. type: Plain text
#: _versions/main/guides/security-keycloak-authorization.adoc
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Adminクライアント]"
