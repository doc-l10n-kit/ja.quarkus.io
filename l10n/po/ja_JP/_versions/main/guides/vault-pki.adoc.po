msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/vault-pki.adoc:6
#, no-wrap
msgid "Using HashiCorp Vault's PKI Secret Engine"
msgstr "HashiCorp VaultのPKI Secret Engineの利用"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:18
msgid "Vault's PKI Secret Engine generates dynamic X.509 certificates. It allows services to get certificates without manually generating a private key and CSR, submitting to a CA, and waiting for signed certificate. The PKI secret engine allows dynamically generating certificates, which has the following advantages over classic CA scenarios:"
msgstr "Vault の PKI Secret Engine は、動的な X.509 証明書を生成します。これによりサービスは、秘密鍵と CSR を手動で生成しCA に提出、署名された証明書を待つ、ということをすることなく、証明書を取得することができます。PKI Secret Engineでは、証明書を動的に生成することができるため、従来のCAシナリオに比べて以下のようなメリットがあります。"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:20
msgid "Generating certificates with short TTLs reduces the need for and/or size of CRLs."
msgstr "TTLの短い証明書を生成することで、CRLの必要性や規模を軽減することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:21
msgid "Allows for ephemeral certificates that are generated upon application startup, stored in memory and discarded on shutdown."
msgstr "アプリケーションの起動時に生成され、メモリに保存され、シャットダウン時に破棄される一時的な証明書を可能にします。"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:23
msgid "In this guide we cover the following:"
msgstr "このガイドでは、以下のことを説明しています。"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:25
msgid "setup: configuring the engine to generate certificates"
msgstr "セットアップ：証明書を生成するためのエンジンの設定"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:26
msgid "generation: generating certificates using roles"
msgstr "生成：ロールを使用した証明書の生成"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:27
msgid "revocation: revoking a previously generated certificate"
msgstr "失効: 以前に生成された証明書を失効"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:29
msgid "See https://www.vaultproject.io/docs/secrets/pki/index.html#pki-secrets-engine[Vault PKI Secrets Engine's official documentation]"
msgstr "link:https://www.vaultproject.io/docs/secrets/pki/index.html#pki-secrets-engine[Vault PKI Secrets Engineの公式ドキュメント]を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/vault-pki.adoc:32
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:35
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:37
msgid "to complete the \"Starting Vault\" section of the {base-guide}"
msgstr "{base-guide}の「Starting Vault」のセクションを完了"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:38
msgid "roughly 15 minutes"
msgstr "約15分"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:39
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:40
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 11+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:41
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:42
msgid "Docker installed"
msgstr "Dockerがインストールされていること"

#. type: Title ==
#: upstream/_versions/main/guides/vault-pki.adoc:43
#, no-wrap
msgid "Setup"
msgstr "セットアップ"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:48
msgid "We assume there is a Vault running from the {base-guide}, and the root token is known.  The first step consists of activating the PKI Secret Engine, and configuring a CA certificate and private key:"
msgstr "ここでは、{base-guide} から起動している Vault があり、ルート トークンが既知であることを前提とします。最初のステップは、PKI シークレット・エンジンを起動し、CA 証明書と秘密鍵を構成することです。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:53
#, no-wrap
msgid ""
"docker exec -it dev-vault sh\n"
"export VAULT_TOKEN={root-token}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:56
#, no-wrap
msgid ""
"vault secrets enable pki\n"
"# ==> Success! Enabled the pki secrets engine at: pki/\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:59
#, no-wrap
msgid ""
"vault secrets tune -max-lease-ttl=8760h pki\n"
"# ==> Success! Tuned the secrets engine at: pki/\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:70
#, no-wrap
msgid ""
"vault write pki/root/generate/internal \\\n"
"    common_name=my-website.com \\\n"
"    ttl=8760h\n"
"# ==> Success! Configured CA with self-signed root\n"
"# ==> Key              Value\n"
"# ==> ---              -----\n"
"# ==> certificate      -----BEGIN CERTIFICATE-----...\n"
"# ==> expiration       1536807433\n"
"# ==> issuing_ca       -----BEGIN CERTIFICATE-----...\n"
"# ==> serial_number    7c:f1:fb:2c:6e:4d:99:0e:82:1b:08:0a:81:ed:61:3e:1d:fa:f5:29\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:74
msgid "This example configures the CA with an internal self-signed root certificate and associated key pair that is managed by Vault. Alternatively, you can configure the CA with an existing key pair."
msgstr "この例では、Vault で管理されている内部の自己署名ルート証明書と関連するキーペアで CA を構成しています。また、既存のキーペアを使ってCAを設定することもできます。"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:76
msgid "CA configuration can be done programmatically using `VaultPKISecretEngine.generateRoot(GenerateRootOptions)`"
msgstr "CAの設定は、以下の方法でプログラム的に行うことができます。 `VaultPKISecretEngine.generateRoot(GenerateRootOptions)`"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:79
msgid "With the CA configured we now require a role to be defined that determines what parameters are allowed when generating certificates."
msgstr "CAを設定した後、証明書を生成する際に許可されるパラメータを決定するロールを定義する必要があります。"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:82
msgid "Here we create a role `example-dot-com` that allows certificates with the common name allowed to be any subdomain of `my-website.com`."
msgstr "ここでは、 `example-dot-com` というロールを作成し、 `my-website.com` の任意のサブドメインを許容するコモン・ネームを持つ証明書を許可します。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:90
#, no-wrap
msgid ""
"vault write pki/roles/example-dot-com \\\n"
"    allowed_domains=my-website.com \\\n"
"    allow_subdomains=true \\\n"
"    max_ttl=72h\n"
"# ==> Success! Data written to: pki/roles/example-dot-com\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:94
msgid "Role configuration can be done programmatically using `VaultPKISecretEngine.updateRole(String role, RoleOptions options)`"
msgstr "ロールの設定は、以下のようにプログラムで行うことができます: `VaultPKISecretEngine.updateRole(String role, RoleOptions options)`"

#. type: Title ==
#: upstream/_versions/main/guides/vault-pki.adoc:95
#, no-wrap
msgid "Generating Certificates"
msgstr "証明書の生成"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:98
msgid "First, let's create a simple Quarkus application with Vault and Jackson extensions:"
msgstr "まず、VaultとJacksonのエクステンションを持つシンプルなQuarkusアプリケーションを作成してみましょう。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:108
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=vault-pki-quickstart \\\n"
"    -DclassName=\"org.acme.quickstart.GreetingResource\" \\\n"
"    -Dpath=\"/hello\" \\\n"
"    -Dextensions=\"resteasy,vault,resteasy-jackson\"\n"
"cd vault-pki-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:111
msgid "Now, configure access to Vault from the `{config-file}`:"
msgstr "次に、 `{config-file}` に Vault へのアクセスを設定します。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:116
#, no-wrap
msgid ""
"# vault url\n"
"quarkus.vault.url=http://localhost:8200\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:120
#, no-wrap
msgid ""
"# vault authentication\n"
"quarkus.vault.authentication.userpass.username=bob\n"
"quarkus.vault.authentication.userpass.password=sinclair\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:123
msgid "We can then add a new endpoint that will allow us to generate a certificate using the configured CA & role:"
msgstr "次に、設定されたCAとロールを使って証明書を生成することができる新しいエンドポイントを追加します。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:130
#, no-wrap
msgid ""
"@Path(\"/pki\")\n"
"@Produces(TEXT_PLAIN)\n"
"@Consumes(TEXT_PLAIN)\n"
"public class PKIResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:133
#, no-wrap
msgid ""
"    @Inject\n"
"    public VaultPKISecretEngine pkiSecretEngine;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:143
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/generate\")\n"
"    public String generate(String subdomain) {\n"
"        GenerateCertificateOptions options = new GenerateCertificateOptions()\n"
"            .setSubjectCommonName(subdomain + \".my-website.com\");\n"
"        GeneratedCertificate generated =  pkiSecretEngine.generateCertificate(\"example-dot-com\",  options);\n"
"        return generated.certificate.getData();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:146
msgid "After compiling and starting the Quarkus application, let's generate a new certificate with a generated key pair:"
msgstr "Quarkusアプリケーションをコンパイルして起動した後、生成された鍵ペアで新しい証明書を生成してみましょう。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:149
#, no-wrap
msgid "curl -X POST --data 'a-subdomain' --header \"Content-Type: text/plain\"  http://localhost:8080/pki/generate\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:153
#: upstream/_versions/main/guides/vault-pki.adoc:182
#, no-wrap
msgid ""
"# ==> -----BEGIN CERTIFICATE-----\n"
"# ==> ...\n"
"# ==> -----END CERTIFICATE-----\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:156
msgid "Alternatively we can generate a key pair and CSR locally and generate a certificate by having vault sign our CSR."
msgstr "また、鍵ペアとCSRをローカルに生成し、CSRにVaultが署名することで証明書を生成することもできます。"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:158
msgid "Let's add a new method that accepts a CSR:"
msgstr "CSRを受け取る新しいメソッドを追加しましょう。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:168
#, no-wrap
msgid ""
"@POST\n"
"@Path(\"/sign\")\n"
"public String sign(String csr) {\n"
"    GenerateCertificateOptions options = new GenerateCertificateOptions();\n"
"    SignedCertificate signed = pkiSecretEngine.signRequest(\"example-dot-com\", csr, options);\n"
"    return signed.certificate.getData();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:172
msgid "Now we can generate a CSR (e.g. using OpenSSL) and pass it to our `/sign` endpoint to sign and generate a certificate from the CSR:"
msgstr "これで、（OpenSSLなどを使用して）CSRを生成し、そのCSRを `/sign` エンドポイントに渡すことで、CSRに署名して証明書を生成することができます。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:176
#, no-wrap
msgid "openssl req -newkey rsa:2048 -keyout example.key -out example.csr\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:178
#, no-wrap
msgid "curl -X POST --data @example.csr --header \"Content-Type: text/plain\"  http://localhost:8080/pki/sign\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault-pki.adoc:184
#, no-wrap
msgid "Revoking Certificates"
msgstr "証明書の失効"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:187
msgid "Let's add another new method to our `PKIResource`:"
msgstr "`PKIResource` に別の新しいメソッドを追加してみましょう。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:195
#, no-wrap
msgid ""
"@POST\n"
"@Path(\"/revoke\")\n"
"public void revoke(String serialNumber) {\n"
"    pkiSecretEngine.revokeCertificate(serialNumber);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:198
msgid "And revoke a previously generated certificate:"
msgstr "また、以前に生成された証明書を取り消すこともできます。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:202
#, no-wrap
msgid ""
"curl -X POST --data '1d:2e:c6:06:45:18:60:0e:23:d6:c5:17:43:c0:fe:46:ed:d1:50:be' --header \"Content-Type: text/plain\"  http://localhost:8080/pki/revoke\n"
"# ==> No Data\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault-pki.adoc:204
#, no-wrap
msgid "Dynamically Mounting PKI Engines"
msgstr "PKIエンジンの動的マウント"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:208
msgid "Quarkus's Vault PKI support includes that ability to mount & unmount PKI engines dynamically using the `VaultPKISecretEngineFactory` & `VaultSystemBackendEngine` interfaces."
msgstr "QuarkusのVault PKIサポートには、 `VaultPKISecretEngineFactory` & `VaultSystemBackendEngine` インターフェースを使用してPKIエンジンを動的にマウント／アンマウントする機能が含まれています。"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:211
msgid "To enable, or mount, a new PKI engine at specific mount path you can use the `VaultSystemBackendEngine.enable` method:"
msgstr "特定のマウントパスで新しい PKI エンジンを有効にしたり、マウントするには、 `VaultSystemBackendEngine.enable` メソッドが使用できます。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:217
#, no-wrap
msgid ""
"// Obtain interfaces via injection or other standard CDI method.\n"
"VaultSystemBackendEngine systemBackendEngine = ...;\n"
"VaultPKISecretEngineFactory pkiSecretEngineFactory = ...;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:222
#, no-wrap
msgid ""
"// Mount a PKI engine at a specified path.\n"
"EnableEngineOptions options = new EnableEngineOptions()\n"
"  .setMaxLeaseTimeToLive(\"8760h\");\n"
"systemBackendEngine.enable(VaultSecretEngine.PKI, \"pki-dyn\", \"A dynamic PKI engine\", options);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:225
#, no-wrap
msgid ""
"// Obtain an engine manager for the newly mounted PKI engine.\n"
"VaultPKISecretEngine dynPkiSecretEngine = pkiSecretEngineFactory.engine(\"pki-dyn\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:228
#, no-wrap
msgid ""
"// Use dynamically created engine as you please.\n"
"dynPkiSecretEngine.generateRoot(new GenerateRootOptions());\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:231
msgid "To disable (aka unmount) a PKI engine at a specific path you simply use the `VaultSystemBackendEngine.disable` method:"
msgstr "特定のパスでPKIエンジンを無効化（アンマウント）するには、 `VaultSystemBackendEngine.disable` メソッドを使用します。"

#. type: delimited block -
#: upstream/_versions/main/guides/vault-pki.adoc:235
#, no-wrap
msgid "systemBackendEngine.disable(\"pki-dyn\");\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:239
msgid "If you want to test if a specific mount path is already in use you can use `VaultSystemBackendEngine.isEngineMounted(String)`."
msgstr "特定のマウントパスがすでに使用されているかどうかをテストしたい場合は、 `VaultSystemBackendEngine.isEngineMounted(String)` を使用することが出来ます。"

#. type: Title ==
#: upstream/_versions/main/guides/vault-pki.adoc:240
#, no-wrap
msgid "Conclusion"
msgstr "まとめ"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:245
msgid "The PKI Secret Engine is a great tool for managing CAs and their provisioned certificates.  We have seen the most obvious functions of the interface but all of the methods and modes of Vault's PKI secret engine are supported, including:"
msgstr "PKI シークレット エンジンは、CA とそのプロビジョニングされた証明書を管理するための優れたツールです。ここでは、インターフェースの最もわかりやすい機能を見てきましたが、VaultのPKIシークレットエンジンの以下のようなすべてのメソッドとモードがサポートされています。"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:247
msgid "Provisioning roles used to generate certificates."
msgstr "証明書の生成に使用されるプロビジョニングロール"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:248
msgid "Storing the root CA externally and issuing certificates from intermediate CAs."
msgstr "ルートCAを外部に保存し、中間CAから証明書を発行"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:249
msgid "Reading current CRLs for each provisioned engine instance."
msgstr "プロビジョニングされた各エンジンインスタンスの現在のCRLの読み取り"

#. type: Plain text
#: upstream/_versions/main/guides/vault-pki.adoc:250
msgid "Feel free to look at the `VaultPKISecretEngine` & `VaultPKISecretEngineFactory` interfaces."
msgstr "`VaultPKISecretEngine` & `VaultPKISecretEngineFactory` のインターフェースをご自由にご覧ください。"
