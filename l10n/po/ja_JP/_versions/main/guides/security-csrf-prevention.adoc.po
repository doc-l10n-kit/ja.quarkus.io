msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: Title =
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:6
msgid "Cross-Site Request Forgery Prevention"
msgstr "クロスサイトリクエストフォージェリー対策"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:10
msgid "https://owasp.org/www-community/attacks/csrf[Cross-Site Request Forgery (CSRF)] is an attack that forces an end user to execute unwanted actions on a web application in which they are currently authenticated."
msgstr "link:https://owasp.org/www-community/attacks/csrf[クロスサイトリクエストフォージェリ（CSRF）] とは、エンドユーザーが現在認証されているウェブアプリケーション上で意図しないアクションを実行させる攻撃です。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:12
#, fuzzy
msgid "Quarkus Security provides a CSRF prevention feature which implements https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie[Double Submit Cookie] and [CSRF Request Header] techniques."
msgstr "Quarkus Securityには、 link:https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie[Double Submit Cookieと] [CSRF Request Header]の技術を実装したCSRF防止機能があります。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:14
#, fuzzy
msgid ""
"`Double Submit Cookie` technique requires that the CSRF token sent as `HTTPOnly`, optionally signed, cookie to the client, and\n"
"directly embedded in a hidden form input of server-side rendered HTML forms, or submitted as a request header value."
msgstr "`Double Submit Cookie` このテクニックでは、CSRF トークンを （オプションで署名された）クッキーとしてクライアントに送信し、サーバサイドでレンダリングされた HTML フォームの隠しフォーム入力に直接埋め込むか、リクエストヘッダ値として送信する必要があります。 `HTTPOnly`"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:17
msgid "The extension consists of a xref:resteasy-reactive.adoc[RESTEasy Reactive] server filter which creates and verifies CSRF tokens in `application/x-www-form-urlencoded` and `multipart/form-data` forms and a Qute HTML form parameter provider which supports the xref:qute-reference.adoc#injecting-beans-directly-in-templates[injection of CSRF tokens in Qute templates]."
msgstr "このエクステンションは、`application/x-www-form-urlencoded` と `multipart/form-data` フォームの CSRF トークンを作成し検証する xref:resteasy-reactive.adoc[RESTEasy Reactive] サーバフィルターと、 xref:qute-reference.adoc#injecting-beans-directly-in-templates[QuteテンプレートへのCSRFトークン注入] をサポートする Qute HTML form parameter provider からなります。"

#. type: Title ==
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:19
msgid "Creating the Project"
msgstr "プロジェクトの作成"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:21
msgid ""
"First, we need a new project.\n"
"Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:28
msgid "This command generates a project which imports the `csrf-reactive` extension."
msgstr "このコマンドは、 `csrf-reactive` エクステンションをインポートするプロジェクトを生成します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:30
msgid ""
"If you already have your Quarkus project configured, you can add the `csrf-reactive` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "Quarkusプロジェクトをすでに設定している場合は、プロジェクトのベースディレクトリで次のコマンドを実行することで、 `csrf-reactive` エクステンションをプロジェクトに追加できます:"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:36
msgid "This will add the following to your build file:"
msgstr "これにより、ビルドファイルに以下が追加されます。"

#. type: Title ==
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:39
msgid "pom.xml"
msgstr "pom.xml"

#. type: Title ==
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:48
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:53
msgid "Next, let's add a `csrfToken.html` Qute template producing an HTML form in the `src/main/resources/templates` folder:"
msgstr "次に、このテンプレートを含むファイルを `csrfToken.html` と名付け、 `src/main/resources/templates` フォルダに置いてください:"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:75
msgid "This expression is used to inject a CSRF token into a hidden form field. This token will be verified by the CSRF filter against a CSRF cookie."
msgstr "この書式は、CSRF トークンを隠しフォームフィールドに注入するために使用されます。このトークンは CSRF フィルタによって CSRF クッキーと照合され検証されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:77
msgid "Now let's create a resource class which returns an HTML form and handles form POST requests:"
msgstr "では、HTMLフォームを返し、フォームのPOSTリクエストを処理するリソースクラスを作成しましょう:"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:117
msgid "Inject the `csrfToken.html` as a `Template`."
msgstr " `csrfToken.html` を `Template` として注入してください。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:118
msgid "Return the HTML form with a hidden form field containing a CSRF token created by the CSRF filter."
msgstr "CSRFフィルターによって作成されたCSRFトークンを含むhiddenフォームフィールドを持つHTMLフォームを返します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:119
msgid "Handle the POST form request, this method can only be invoked if the CSRF filter has successfully verified the token."
msgstr "フォームの POST リクエストを処理します。このメソッドは、CSRF フィルターがトークンの確認に成功した場合にのみ呼び出すことができます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:121
msgid "The form POST request will fail with HTTP status `400` if the filter finds the hidden CSRF form field is missing, the CSRF cookie is missing, or if the CSRF form field and CSRF cookie values do not match."
msgstr "フィルタが、隠された CSRF フォームフィールドがない、CSRF クッキーがない、あるいは CSRF フォームフィールドと CSRF クッキーの値が一致しないことを発見した場合、フォーム POST リクエストは HTTP ステータス `400` で失敗します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:123
msgid "At this stage no additional configuration is needed - by default the CSRF form field and cookie name will be set to `csrf-token`, and the filter will verify the token. But you can change these names if you would like:"
msgstr "この段階では、追加の設定は必要ありません。デフォルトでは、CSRFフォームフィールドとクッキー名は `csrf-token` に設定され、フィルタはトークンを検証します。しかし、必要であれば、これらの名前を変更することができます："

#. type: Title ==
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:131
msgid "Sign CSRF token"
msgstr "CSRFトークンに署名"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:133
msgid "You can get `HMAC` signatures created for the generated CSRF tokens and have these `HMAC` values stored as CSRF token cookies if you would like to avoid the risk of the attackers recreating the CSRF cookie token. All you need to do is to configure a token signature secret which must be at least 32 characters long:"
msgstr "生成された CSRF トークンに `HMAC` 署名を作成し、これらの `HMAC` 値を CSRF トークン・クッキーとして保存することで、攻撃者が CSRF クッキー・トークンを再作成するリスクを回避することができます。必要なのは、少なくとも 32 文字の長さのトークン署名シークレットを設定することだけです。"

#. type: Title ==
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:140
#, fuzzy
msgid "CSRF Request Header"
msgstr "CSRFリクエスト・ヘッダ"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:142
#, fuzzy
msgid "If HTML `form` tags are not used and you need to pass CSRF token as a header, then inject the header name and token, for example, into HTMX:"
msgstr "HTML `form` タグを使用せず、CSRFトークンをヘッダーとして渡す必要がある場合、例えばHTMXにヘッダー名とトークンを注入する："

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:149
#, fuzzy
msgid "This expression is used to inject a CSRF token header and token. This token will be verified by the CSRF filter against a CSRF cookie."
msgstr "この式は CSRF トークン・ヘッダとトークンを注入するために使われます。このトークンは CSRF フィルタによって CSRF クッキーと照合されます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:151
#, fuzzy
msgid "Default header name is `X-CSRF-TOKEN`, you can customize it with `quarkus.csrf-reactive.token-header-name`, for example:"
msgstr "デフォルトのヘッダー名は `X-CSRF-TOKEN` で、例えば `quarkus.csrf-reactive.token-header-name` でカスタマイズできる："

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:158
#, fuzzy
msgid "If you need to access the CSRF cookie from JavaScript in order to pass its value as a header, use `{inject:csrf.cookieName}` and `{inject:csrf.headerName}` to inject the cookie name which has to be read as a CSRF header value and allow accessing this cookie:"
msgstr "CSRF クッキーの値をヘッダとして渡すために、JavaScript から CSRF クッキーにアクセスする必要がある場合、 `{inject:csrf.cookieName}` と `{inject:csrf.headerName}` を使って、CSRF ヘッダ値として読まれなければならないクッキー名を注入し、このクッキーへのアクセスを許可してください："

#. type: Title ==
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:165
msgid "Cross-origin resource sharing"
msgstr "クロスオリジンリソース共有"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:169
#, fuzzy
msgid "If you would like to enforce CSRF prevention in a Cross-origin environment, please avoid supporting all Origins."
msgstr "クロスオリジン環境でCSRF防止を実施したい場合は、すべてのオリジンのサポートを避けてください。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:171
#, fuzzy
msgid "Restrict supported Origins to trusted Origins only, see xref:http-reference.adoc#cors-filter[Cross-origin resource sharing] for more information."
msgstr "サポートされるOriginを信頼できるOriginのみに制限する。詳細は xref:http-reference.adoc#cors-filter[Cross-origin resource sharingを] 参照。"

#. type: Title ==
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:174
msgid "Restrict CSRF token verification"
msgstr "CSRFトークンの検証を制限"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:176
msgid "Your Jakarta REST endpoint may accept not only HTTP POST requests with `application/x-www-form-urlencoded` or `multipart/form-data` payloads but also payloads with other media types, either on the same or different URL paths, and therefore you would like to avoid verifying the CSRF token in such cases, for example:"
msgstr "Jakarta REST エンドポイントは、 `application/x-www-form-urlencoded` または `multipart/form-data` のペイロードを持つ HTTP POST リクエストだけでなく、他のメディアタイプを持つペイロードも、同じ URL パスまたは異なる URL パスで受け入れることがあります。したがって、そのような場合に CSRF トークンの検証を回避したいのです。例："

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:246
msgid "POST form request to `/user`, CSRF token verification is enforced by the CSRF filter"
msgstr "`/user` へのPOSTフォームのリクエスト、CSRFフィルターによりCSRFトークンの検証が行われます。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:247
msgid "POST json request to `/user`, CSRF token verification is not needed"
msgstr "`/user` への POST json リクエスト , CSRF トークン検証は不要です。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:248
msgid "POST json request to `/users`, CSRF token verification is not needed"
msgstr "`/users` への POST json リクエスト , CSRF トークン検証は不要です。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:250
msgid "As you can see a CSRF token verification will be required at the `/service/user` path accepting the `application/x-www-form-urlencoded` payload, but `User` JSON representation posted to both `/service/user` and `/service/users` method will have no CSRF token and therefore the token verification has to be skipped in these cases by restricting it to the specific `/service/user` request path but also allowing not only `application/x-www-form-urlencoded` on this path:"
msgstr "ご覧のように、`service/user` パスで `application/x-www-form-urlencoded` ペイロードを受け取る際に CSRF トークン検証が必要になりますが、 `service/user` と `service/users` の両方のメソッドにPOSTされた `User` JSON表現はCSRFトークンを持たないため、これらのケースではトークン検証をスキップする必要があります。この場合、特定の`service/user`リクエストパスに限定し、このパスでは`application/x-www-form-urlencoded`だけを許可しないようにします："

#. type: Title ==
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:262
msgid "Verify CSRF token in the application code"
msgstr "アプリケーションコード内のCSRFトークンの検証"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:264
msgid "If you prefer to compare the CSRF form field and cookie values in the application code then you can do it as follows:"
msgstr "もし、CSRFのフォームフィールドとクッキーの値をアプリケーションのコードで比較したい場合は、次のようにします。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:310
msgid "Compare the CSRF form field and cookie values and fail with HTTP status `400` if they don't match."
msgstr "CSRFのフォームフィールドとクッキーの値を比較し、一致しない場合はHTTPステータス `400` で失敗します。"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:312
msgid "Also disable the token verification in the filter:"
msgstr "また、フィルターのトークン検証を無効にします:"

#. type: Title ==
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:320
msgid "Configuration Reference"
msgstr "設定リファレンス"

#. type: Title ==
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:324
msgid "References"
msgstr "参照"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:326
msgid "https://owasp.org/www-community/attacks/csrf[OWASP Cross-Site Request Forgery]"
msgstr "link:https://owasp.org/www-community/attacks/csrf[OWASP クロスサイトリクエストフォージェリ]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:327
msgid "xref:resteasy-reactive.adoc[RESTEasy Reactive]"
msgstr "link:resteasy-reactive.html[RESTEasy Reactive]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:328
msgid "xref:qute-reference.adoc[Qute Reference]"
msgstr "xref:qute-reference.adoc[Qute リファレンス]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:329
#, fuzzy
msgid "xref:http-reference.adoc#cors-filter[Cross-origin resource sharing]"
msgstr "xref:http-reference.adoc#cors-filter[クロスオリジン・リソース共有]"

#. type: Plain Text
#: upstream/_versions/main/guides/security-csrf-prevention.adoc:330
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"
