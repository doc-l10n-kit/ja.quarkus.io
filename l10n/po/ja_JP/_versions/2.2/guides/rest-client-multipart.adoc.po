msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:6
#, no-wrap
msgid "Using the REST Client with Multipart"
msgstr "マルチパートでのRESTクライアントの使用"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:11
msgid "RESTEasy has rich support for the `multipart/*` and `multipart/form-data` mime types. The multipart mime format is used to pass lists of content bodies. Multiple content bodies are embedded in one message. `multipart/form-data` is often found in web application HTML Form documents and is generally used to upload files. The form-data format is the same as other multipart formats, except that each inlined piece of content has a name associated with it."
msgstr "RESTEasyは、 `multipart/*` と `multipart/form-data` のマイムタイプを豊富にサポートしています。マルチパートマイムフォーマットは、コンテンツボディのリストを渡すために使用されます。 `multipart/form-data` は、Web アプリケーションのHTMLフォームドキュメントでよく見られ、一般的にはファイルのアップロードに使用されます。form-dataフォーマットは、他のマルチパートフォーマットと同じですが、インラインの各コンテンツには名前が関連付けられています。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:15
msgid "This guide explains how to use the RESTEasy REST Client with Multipart in order to interact with REST APIs requiring `multipart/form-data` content-type with very little effort."
msgstr "このガイドでは、マルチパートでRESTEasy RESTクライアントを使用して、 `multipart/form-data` コンテンツタイプを必要とするREST APIとわずかな労力でやりとりする方法を説明します。"

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:16
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:19
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:22
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:23
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 11+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:24
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:25
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:29
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:31
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:33
msgid "The solution is located in the `rest-client-multipart-quickstart` {quickstarts-tree-url}/rest-client-multipart-quickstart[directory]."
msgstr "このソリューションは、`rest-client-multipart-quickstart` {quickstarts-tree-url}/rest-client-multipart-quickstart[ディレクトリ]にあります。"

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:34
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:37
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:47
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=rest-client-multipart-quickstart \\\n"
"    -DclassName=\"org.acme.rest.client.multipart.MultipartClientResource\" \\\n"
"    -Dpath=\"/client\" \\\n"
"    -Dextensions=\"rest-client, resteasy, resteasy-multipart\"\n"
"cd rest-client-multipart-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:51
msgid "This command generates the Maven project with a REST endpoint and imports the `rest-client` and `resteasy` extensions.  It also adds the `resteasy-multipart` extension to support `multipart/form-data` requests."
msgstr "このコマンドは、RESTエンドポイントを持つMavenプロジェクトを生成し、`rest-client` と `resteasy` のエクステンションをインポートします。また、 `multipart/form-data` のリクエストをサポートするために `resteasy-multipart` のエクステンションを追加します。"

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:52
#, no-wrap
msgid "Setting up the model"
msgstr "モデルのセットアップ"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:56
msgid "In this guide we will be demonstrating how to invoke a REST service accepting `multipart/form-data` input.  We are assuming the payload is well-known before the request is sent, so we can model as a POJO."
msgstr "このガイドでは、 `multipart/form-data` の入力を受け付けるRESTサービスを起動する方法を紹介します。リクエストが送信される前にペイロードが既知であることを想定しているので、POJOとしてモデル化することができます。"

#. type: delimited block =
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:60
msgid "If the payload is unknown, you can also use the RESTEasy custom API instead. If that's the case, see the RESTEasy Multipart Providers link at the end of the guide."
msgstr "ペイロードが不明な場合は、代わりにRESTEasy のカスタムAPIを使用することもできます。その場合は、ガイドの最後にある RESTEasy Multipart Providers のリンクを参照してください。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:65
msgid "Create a `src/main/java/org/acme/rest/client/multipart/MultipartBody.java` file and set the following content:"
msgstr "`src/main/java/org/acme/rest/client/multipart/MultipartBody.java` ファイルを作成し、以下の内容を設定します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:69
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:101
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:167
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:239
#, no-wrap
msgid "package org.acme.rest.client.multipart;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:71
#, no-wrap
msgid "import java.io.InputStream;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:74
#, no-wrap
msgid ""
"import javax.ws.rs.FormParam;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:76
#, no-wrap
msgid "import org.jboss.resteasy.annotations.providers.multipart.PartType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:78
#, no-wrap
msgid "public class MultipartBody {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:82
#, no-wrap
msgid ""
"    @FormParam(\"file\")\n"
"    @PartType(MediaType.APPLICATION_OCTET_STREAM)\n"
"    public InputStream file;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:87
#, no-wrap
msgid ""
"    @FormParam(\"fileName\")\n"
"    @PartType(MediaType.TEXT_PLAIN)\n"
"    public String fileName;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:90
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:129
msgid "The purpose of the annotations in the code above is the following:"
msgstr "上のコードのアノテーションの目的は以下の通りです。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:92
msgid "`@FormParam` is a standard JAX-RS annotation used to define a form parameter contained within a request entity body"
msgstr "`@FormParam` は、リクエストエンティティボディに含まれるフォームパラメータを定義するために使用される、標準的なJAX-RSアノテーションです。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:93
msgid "`@PartType` is a RESTEasy specific annotation required when a client performs a multipart request and defines the content type for the part."
msgstr "`@PartType` は、クライアントがマルチパートのリクエストを実行し、パートのコンテンツタイプを定義する際に必要となる、RESTEasy特有のアノテーションです。"

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:94
#, no-wrap
msgid "Create the interface"
msgstr "インターフェースの作成"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:97
msgid "Using the RESTEasy REST Client is as simple as creating an interface using the proper JAX-RS and MicroProfile annotations. In our case the interface should be created at `src/main/java/org/acme/rest/client/multipart/MultipartService.java` and have the following content:"
msgstr "RESTEasy REST Client を使用することは、適切な JAX-RS と MicroProfile のアノテーションを使用してインターフェイスを作成することと同じくらい簡単です。今回のケースでは、インターフェイスは `src/main/java/org/acme/rest/client/multipart/MultipartService.java` で作成し、次のような内容にします。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:107
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:216
#, no-wrap
msgid ""
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:110
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
"import org.jboss.resteasy.annotations.providers.multipart.MultipartForm;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:114
#, no-wrap
msgid ""
"@Path(\"/echo\")\n"
"@RegisterRestClient\n"
"public interface MultipartService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:119
#, no-wrap
msgid ""
"    @POST\n"
"    @Consumes(MediaType.MULTIPART_FORM_DATA)\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    String sendMultipartData(@MultipartForm MultipartBody data);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:121
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:262
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:125
msgid "The `sendMultipartData` method gives our code the ability to POST a `multipart/form-data` request to our Echo service (running in the same server for demo purposes).  Because in this demo we have the exact knowledge of the `multipart/form-data` packets, we can map them to the model class created in the previous section using the `@org.jboss.resteasy.annotations.providers.multipart.MultipartForm` annotation."
msgstr "`sendMultipartData` メソッドは、コードに `multipart/form-data` リクエストをEchoサービスに POST する機能を与えます（デモ用に同じサーバーで実行しています）。このデモでは、 `multipart/form-data` パケットの正確に把握しているので、 `@org.jboss.resteasy.annotations.providers.multipart.MultipartForm` アノテーションを使用して、前のセクションで作成したモデルクラスにマッピングすることができます。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:127
msgid "The client will handle all the networking and marshalling leaving our code clean of such technical details."
msgstr "ネットワーキングやマーシャリングはすべてクライアントが行うので、私たちのコードにはそのような技術的な詳細は含まれません。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:132
msgid "`@RegisterRestClient` allows Quarkus to know that this interface is meant to be available for CDI injection as a REST Client"
msgstr "`@RegisterRestClient` により、Quarkusは、このインターフェイスがRESTクライアントとしてCDIインジェクションに利用可能であることを知ることができます。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:133
msgid "`@Path`, `@GET` and `@PathParam` are the standard JAX-RS annotations used to define how to access the service"
msgstr "`@Path` 、 `@GET` 、 `@PathParam` は、サービスへのアクセス方法を定義するために使用される標準的な JAX-RS アノテーションです。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:134
msgid "`@MultipartForm` defines the parameter as a value object for incoming/outgoing request/responses of the multipart/form-data mime type."
msgstr "`@MultipartForm` は、multipart/form-dataマイムタイプの受信/送信リクエスト/レスポンスの値オブジェクトとして、パラメータを定義しています。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:135
msgid "`@Consumes` defines the expected content-type consumed by this request (parameters)"
msgstr "`@Consumes` は、このリクエストで消費されると予想されるコンテンツタイプを定義します（パラメータ）。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:136
msgid "`@Produces` defines the expected content-type produced by this request (return type)"
msgstr "`@Produces` は、このリクエストによって生成されると予想されるコンテンツタイプを定義します（リターンタイプ）。"

#. type: delimited block =
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:141
msgid "While `@Consumes` and `@Produces` are optional as auto-negotiation is supported, it is heavily recommended to annotate your endpoints with them to define precisely the expected content-types."
msgstr "`@Consumes` と `@Produces` は自動ネゴシエーションがサポートされているためオプションですが、予想されるコンテンツタイプを正確に定義するため、エンドポイントにアノテーションを付けることを強く推奨します。"

#. type: delimited block =
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:143
msgid "It will allow to narrow down the number of JAX-RS providers (which can be seen as converters) included in the native executable."
msgstr "そうすることで、ネイティブ実行可能ファイルに含まれるJAX-RSプロバイダー（コンバーターとも言える）の数を絞ることができます。"

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:145
#, no-wrap
msgid "Create the configuration"
msgstr "コンフィグレーションの作成"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:149
msgid "In order to determine the base URL to which REST calls will be made, the REST Client uses configuration from `application.properties`.  The name of the property needs to follow a certain convention which is best displayed in the following code:"
msgstr "REST 呼び出しが行われるベース URL を決定するために、REST クライアントは `application.properties` からの設定を使用します。プロパティーの名前は、以下のコードで表示される特定の規則に従う必要があります。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:154
#, no-wrap
msgid ""
"# Your configuration properties\n"
"org.acme.rest.client.multipart.MultipartService/mp-rest/url=http://localhost:8080/\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:157
msgid "Having this configuration means that all requests performed using `org.acme.rest.client.multipart.MultipartService` will use `http://localhost:8080/ ` as the base URL."
msgstr "この設定をすると、`org.acme.rest.client.multipart.MultipartService` を使って実行されるすべてのリクエストは、ベースURLとして `http://localhost:8080/` を使用することになります。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:159
msgid "Note that `org.acme.rest.client.multipart.MultipartService` _must_ match the fully qualified name of the `MultipartService` interface we created in the previous section."
msgstr "なお、`org.acme.rest.client.multipart.MultipartService` は、前のセクションで作成した `MultipartService` インターフェースの完全修飾名と一致していなければならないことに注意してください。"

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:160
#, no-wrap
msgid "Update the JAX-RS resource"
msgstr "JAX-RS リソースの更新"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:170
#, no-wrap
msgid ""
"import java.io.ByteArrayInputStream;\n"
"import java.nio.charset.StandardCharsets;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:176
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:178
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:181
#, no-wrap
msgid ""
"@Path(\"/client\")\n"
"public class MultipartClientResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:185
#, no-wrap
msgid ""
"    @Inject\n"
"    @RestClient\n"
"    MultipartService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:196
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/multipart\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String sendFile() throws Exception {\n"
"        MultipartBody body = new MultipartBody();\n"
"        body.fileName = \"greeting.txt\";\n"
"        body.file = new ByteArrayInputStream(\"HELLO WORLD\".getBytes(StandardCharsets.UTF_8));\n"
"        return service.sendMultipartData(body);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:199
msgid "Note that in addition to the standard CDI `@Inject` annotation, we also need to use the MicroProfile `@RestClient` annotation to inject `MultipartService`."
msgstr "なお、標準のCDI `@Inject` アノテーションに加えて、マイクロプロファイル `@RestClient` アノテーションを使って `MultipartService` を入れる必要があることに注意してください。"

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:201
#, no-wrap
msgid "Creating the server"
msgstr "サーバーの作成"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:204
msgid "For demo purposes, let's create a simple Echo endpoint that will act as the server part."
msgstr "デモ用に、サーバー部分として機能するシンプルなEchoエンドポイントを作成してみましょう。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:206
msgid "Create the directory `src/main/java/org/acme/rest/client/multipart/server` and include a `EchoService.java` file with the following content:"
msgstr "`src/main/java/org/acme/rest/client/multipart/server` ディレクトリを作成し、以下の内容の `EchoService.java` ファイルを入れます。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:210
#, no-wrap
msgid "package org.acme.rest.client.multipart.server;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:219
#, no-wrap
msgid ""
"@Path(\"/echo\")\n"
"public class EchoService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:227
#, no-wrap
msgid ""
"    @POST\n"
"    @Consumes(MediaType.MULTIPART_FORM_DATA)\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String echo(String requestBody) throws Exception {\n"
"        return requestBody;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:230
msgid "This will just return the request body and it's useful for testing purposes."
msgstr "これは単にリクエストボディを返すだけなので、テスト目的として便利です。"

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:231
#, no-wrap
msgid "Update the test"
msgstr "テストの更新"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:242
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:245
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.containsString;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:248
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class MultipartResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:260
#, no-wrap
msgid ""
"    @Test\n"
"    public void testMultipartDataIsSent() {\n"
"        given()\n"
"                .when().post(\"/client/multipart\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body( containsString(\"Content-Disposition: form-data; name=\\\"file\\\"\"),\n"
"                        containsString(\"HELLO WORLD\"),\n"
"                        containsString(\"Content-Disposition: form-data; name=\\\"fileName\\\"\"),\n"
"                        containsString(\"greeting.txt\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:267
msgid "Because the test runs in a different port, we also need to include an `application.properties` in our `src/test/resources` with the following content:"
msgstr "テストは別のポートで実行されるため、 `src/test/resources` に、次に示す内容で `application.properties` を含める必要があります。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:272
#, no-wrap
msgid ""
"# Your configuration properties\n"
"org.acme.rest.client.multipart.MultipartService/mp-rest/url=http://localhost:8081/\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:274
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:278
msgid "In a terminal, run `curl -X POST http://localhost:8080/client/multipart`"
msgstr "ターミナルで、 `curl -X POST http://localhost:8080/client/multipart` を実行します。"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:280
msgid "You should see an output similar to:"
msgstr "以下のような出力が表示されるはずです。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:286
#, no-wrap
msgid ""
"--89d288bd-960f-460c-b266-64c5b4d170fa\n"
"Content-Disposition: form-data; name=\"fileName\"\n"
"Content-Type: text/plain\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:291
#, no-wrap
msgid ""
"greeting.txt\n"
"--89d288bd-960f-460c-b266-64c5b4d170fa\n"
"Content-Disposition: form-data; name=\"file\"\n"
"Content-Type: application/octet-stream\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:294
#, no-wrap
msgid ""
"HELLO WORLD\n"
"--89d288bd-960f-460c-b266-64c5b4d170fa--\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:298
msgid "As usual, the application can be packaged using `./mvnw clean package` and executed using the `target/quarkus-app/quarkus-run.jar` file.  You can also generate the native executable with `./mvnw clean package -Pnative`."
msgstr "いつものように、 `./mvnw clean package` を使ってアプリケーションをパッケージ化し、 `target/quarkus-app/quarkus-run.jar` ファイルを使って実行することができます。また、 `./mvnw clean package -Pnative` でネイティブ実行可能ファイルを生成することも出来ます。"

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:299
#, no-wrap
msgid "Further reading"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:302
msgid "link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]"
msgstr "link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasyマルチパートプロバイダ]"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client-multipart.adoc:302
msgid "link:https://download.eclipse.org/microprofile/microprofile-rest-client-1.4.1/microprofile-rest-client-1.4.1.html[MicroProfile Rest Client specification]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-rest-client-1.4.1/microprofile-rest-client-1.4.1.html[MicroProfile Rest Client仕様]"
