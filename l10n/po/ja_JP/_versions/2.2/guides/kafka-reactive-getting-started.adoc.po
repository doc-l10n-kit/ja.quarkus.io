msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:6
#, no-wrap
msgid "Getting Started to SmallRye Reactive Messaging with Apache Kafka"
msgstr "Apache Kafka を使用した SmallRye Reactive Messaging の概要"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:11
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with Apache Kafka."
msgstr "このガイドでは、Quarkus アプリケーションが SmallRye Reactive Messaging 利用して Apache Kafka とやりとりする仕組みを説明します。"

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:12
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:15
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:18
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:19
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 11+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:20
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:22
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:27
msgid "In this guide, we are going to develop two applications communicating with Kafka.  The first application sends a _quote request_ to Kafka and consumes Kafka messages from the _quote_ topic.  The second application receives the _quote request_ and sends a _quote_ back."
msgstr "このガイドでは、Kafka と通信する 2 つのアプリケーションを開発します。最初のアプリケーションは _見積りリクエスト_ を Kafka に送信し、_見積り_ トピックからの Kafka メッセージを消費します。2 つ目のアプリケーションは _見積りリクエスト_ を受信し、_見積り_ を送り返します。"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:28
#, no-wrap
msgid "Architecture,"
msgstr "アーキテクチャー"

#. type: Target for macro image
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:28
#, no-wrap
msgid "kafka-qs-architecture.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:33
msgid "The first application, the _producer_, will let the user request some quotes over a HTTP endpoint.  For each quote request a random identifier is generated and returned to the user, to mark the quote request as _pending_.  At the same time, the generated request id is sent over a Kafka topic `quote-requests`."
msgstr "最初のアプリケーションである _プロデューサー_ は、ユーザーが HTTP エンドポイントを介していくつかの見積りをリクエストできるようにします。見積りリクエストごとにランダムな識別子が生成されてユーザーに返され、見積りリクエストを _保留_ としてマークします。同時に、生成されたリクエスト ID は Kafka トピック `quote-requests` を介して送信されます。"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:34
#, no-wrap
msgid "Producer"
msgstr "プロデューサー"

#. type: Target for macro image
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:34
#, no-wrap
msgid "kafka-qs-app-screenshot.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:37
msgid "The second application, the _processor_, will read from the `quote-requests` topic, put a random price to the quote, and send it to a Kafka topic named `quotes`."
msgstr "2 つ目のアプリケーションである _processor_ は、`quote-requests` トピックから読み取り、見積りにランダムな価格を設定し、`quotes` という名前の Kafka トピックに送信します。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:40
msgid "Lastly, the _producer_ will read the quotes and send them to the browser using server-sent events.  The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr "最後に、_プロデューサー_ は見積りを読み取り、サーバーから送信されたイベントを使用してブラウザーに送信します。したがって、ユーザーには、見積り価格が _保留_ から受信した価格にリアルタイムで更新されていることがわかります。"

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:41
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:45
msgid "We recommend that you follow the instructions in the next sections and create applications step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:47
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:49
msgid "The solution is located in the `kafka-quickstart` {quickstarts-tree-url}/kafka-quickstart[directory]."
msgstr "このソリューションは `kafka-quickstart` {quickstarts-tree-url}/kafka-quickstart[directory] にあります。"

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:50
#, no-wrap
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:53
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr "まず、_プロデューサー_ と _プロセッサー_ の 2 つのプロジェクトを作成する必要があります。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:55
msgid "To create the _producer_ project, in a terminal run:"
msgstr "ターミナルで _プロデューサー_ プロジェクトを作成するには、次のコマンドを実行します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:63
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=kafka-quickstart-producer \\\n"
"    -DnoCode=true \\\n"
"    -Dextensions=resteasy-reactive-jackson,smallrye-reactive-messaging-kafka\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:66
msgid "This command creates the project structure and selects two Quarkus extensions we will be using:"
msgstr "このコマンドは、プロジェクト構造を作成し、使用する 2 つの Quarkus エクステンションを選択します。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:68
msgid "RESTEasy Reactive and its Jackson support (to handle JSON) to serve the HTTP endpoint."
msgstr "RESTEasy Reactive とその Jackson サポート (JSON を処理するため) による HTTP エンドポイントの提供。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:69
msgid "The Kafka connector for Reactive Messaging"
msgstr "リアクティブメッセージング用の Kafka コネクター"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:71
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "同じディレクトリーから _processor_ プロジェクトを作成するには、次のコマンドを実行します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:79
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=kafka-quickstart-processor \\\n"
"    -DnoCode=true \\\n"
"    -Dextensions=smallrye-reactive-messaging-kafka\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:82
msgid "At that point, you should have the following structure:"
msgstr "その時点で、次の構造になっているはずです。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:108
#, no-wrap
msgid ""
".\n"
"├── kafka-quickstart-processor\n"
"│  ├── README.md\n"
"│  ├── mvnw\n"
"│  ├── mvnw.cmd\n"
"│  ├── pom.xml\n"
"│  └── src\n"
"│     └── main\n"
"│        ├── docker\n"
"│        ├── java\n"
"│        └── resources\n"
"│           └── application.properties\n"
"└── kafka-quickstart-producer\n"
"   ├── README.md\n"
"   ├── mvnw\n"
"   ├── mvnw.cmd\n"
"   ├── pom.xml\n"
"   └── src\n"
"      └── main\n"
"         ├── docker\n"
"         ├── java\n"
"         └── resources\n"
"            └── application.properties\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:111
msgid "Open the two projects in your favorite IDE."
msgstr "お気に入りの IDE で 2 つのプロジェクトを開きます。"

#. type: Block title
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:113
#, no-wrap
msgid "Dev Services"
msgstr "Dev Services"

#. type: delimited block =
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:118
msgid "No need to start a Kafka broker when using the dev mode or for tests.  Quarkus starts a broker for you automatically.  See xref:kafka-dev-services.adoc[Dev Services for Kafka] for details."
msgstr "開発モードを使用するとき、またはテストのために、Kafka ブローカーを起動する必要はありません。Quarkus が自動的にブローカーを開始します。詳細については、xref:kafka-dev-services.adoc[Dev Services for Kafka] を参照してください。"

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:120
#, no-wrap
msgid "The Quote object"
msgstr "見積りオブジェクト"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:125
msgid "The `Quote` class will be used in both _producer_ and _processor_ projects.  For the sake of simplicity, we will duplicate the class.  In both projects, create the `src/main/java/org/acme/kafka/model/Quote.java` file, with the following content:"
msgstr "`Quote` クラスは、_プロデューサー_ プロジェクトと _プロセッサー_ プロジェクトの両方で使用されます。簡単にするために、ここではクラスを複製します。どちらのプロジェクトでも、次の内容の `src/main/java/org/acme/kafka/model/Quote.java` ファイルを作成します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:129
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:352
#, no-wrap
msgid "package org.acme.kafka.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:131
#, no-wrap
msgid "public class Quote {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:134
#, no-wrap
msgid ""
"    public String id;\n"
"    public int price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:139
#, no-wrap
msgid ""
"    /**\n"
"    * Default constructor required for Jackson serializer\n"
"    */\n"
"    public Quote() { }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:144
#, no-wrap
msgid ""
"    public Quote(String id, int price) {\n"
"        this.id = id;\n"
"        this.price = price;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:153
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString() {\n"
"        return \"Quote{\" +\n"
"                \"id='\" + id + '\\'' +\n"
"                \", price=\" + price +\n"
"                '}';\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:157
msgid "JSON representation of `Quote` objects will be used in messages sent to the Kafka topic and also in the server-sent events sent to web browsers."
msgstr "`Quote` オブジェクトの JSON 表現は、Kafka トピックに送信されるメッセージ、および Web ブラウザーに送信されるサーバー送信イベントで使用されます。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:160
msgid "Quarkus has built-in capabilities to deal with JSON Kafka messages.  In a following section, we will create serializer/deserializer classes for Jackson."
msgstr "Quarkus には、JSON Kafka メッセージを処理する機能が組み込まれています。次のセクションでは、Jackson のシリアライザー/デシリアライザークラスを作成します。"

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:161
#, no-wrap
msgid "Sending quote request"
msgstr "見積りリクエストの送信"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:164
msgid "Inside the _producer_ project, create the `src/main/java/org/acme/kafka/producer/QuotesResource.java` file and add the following content:"
msgstr "_プロデューサー_ プロジェクト内に、`src/main/java/org/acme/kafka/producer/QuotesResource.java` ファイルを作成し、次のコンテンツを追加します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:168
#, no-wrap
msgid "package org.acme.kafka.producer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:170
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:176
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:180
#, no-wrap
msgid ""
"import org.acme.kafka.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Emitter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:183
#, no-wrap
msgid ""
"@Path(\"/quotes\")\n"
"public class QuotesResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:186
#, no-wrap
msgid ""
"    @Channel(\"quote-requests\")\n"
"    Emitter<String> quoteRequestEmitter; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:199
#, no-wrap
msgid ""
"    /**\n"
"     * Endpoint to generate a new quote request id and send it to \"quote-requests\" Kafka topic using the emitter.\n"
"     */\n"
"    @POST\n"
"    @Path(\"/request\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String createRequest() {\n"
"        UUID uuid = UUID.randomUUID();\n"
"        quoteRequestEmitter.send(uuid.toString()); // <2>\n"
"        return uuid.toString(); // <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:201
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr "リアクティブメッセージングの `Emitter` を挿入して、`quote-requests` チャネルにメッセージを送信します。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:202
msgid "On a post request, generate a random UUID and send it to the Kafka topic using the emitter."
msgstr "ポストリクエストで、ランダムな UUID を生成し、エミッターを使用してそれを Kafka トピックに送信します。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:203
msgid "Return the same UUID to the client."
msgstr "同じ UUID をクライアントに返します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:211
#, no-wrap
msgid ""
"# Configure the outgoing `quote-requests` Kafka topic\n"
"mp.messaging.outgoing.quote-requests.connector=smallrye-kafka\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:217
#, no-wrap
msgid "Processing quote requests"
msgstr "見積りリクエストの処理"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:221
msgid "Now let's consume the quote request and give out a price.  Inside the _processor_ project, create the `src/main/java/org/acme/kafka/processor/QuotesProcessor.java` file and add the following content:"
msgstr "ここでは、見積りリクエストを使用して価格を提示します。_プロセッサー_ プロジェクト内に、`src/main/java/org/acme/kafka/Processor/QuotesProcessor.java` ファイルを作成し、次のコンテンツを追加します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:225
#, no-wrap
msgid "package org.acme.kafka.processor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:227
#, no-wrap
msgid "import java.util.Random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:229
#, no-wrap
msgid "import javax.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:233
#, no-wrap
msgid ""
"import org.acme.kafka.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:235
#, no-wrap
msgid "import io.smallrye.reactive.messaging.annotations.Blocking;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:242
#, no-wrap
msgid ""
"/**\n"
" * A bean consuming data from the \"quote-requests\" Kafka topic (mapped to \"requests\" channel) and giving out a random quote.\n"
" * The result is pushed to the \"quotes\" Kafka topic.\n"
" */\n"
"@ApplicationScoped\n"
"public class QuotesProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:244
#, no-wrap
msgid "    private Random random = new Random();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:254
#, no-wrap
msgid ""
"    @Incoming(\"requests\") // <1>\n"
"    @Outgoing(\"quotes\")   // <2>\n"
"    @Blocking             // <3>\n"
"    public Quote process(String quoteRequest) throws InterruptedException {\n"
"        // simulate some hard working task\n"
"        Thread.sleep(200);\n"
"        return new Quote(quoteRequest, random.nextInt(100));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:257
msgid "Indicates that the method consumes the items from the `requests` channel."
msgstr "メソッドが `requests` チャネルからのアイテムを消費することを示します。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:258
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel."
msgstr "メソッドによって返されるオブジェクトが `quotes` チャネルに送信されることを示します。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:259
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr "処理が _blocking_ であり、呼び出し元のスレッドで実行できないことを示します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:266
#, no-wrap
msgid "%dev.quarkus.http.port=8081\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:271
#, no-wrap
msgid ""
"# Configure the incoming `quote-requests` Kafka topic\n"
"mp.messaging.incoming.requests.connector=smallrye-kafka\n"
"mp.messaging.incoming.requests.topic=quote-requests\n"
"mp.messaging.incoming.requests.auto.offset.reset=earliest\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:275
#, no-wrap
msgid ""
"# Configure the outgoing `quotes` Kafka topic\n"
"mp.messaging.outgoing.quotes.connector=smallrye-kafka\n"
"mp.messaging.outgoing.quotes.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:279
msgid "Note that in this case we have one incoming and one outgoing connector configuration, each one distinctly named.  The configuration keys are structured as follows:"
msgstr "この場合、1 つの受信コネクター設定と 1 つの送信コネクター設定があり、それぞれに異なる名前が付けられていることに注意してください。設定キーは次のように構成されています。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:281
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:283
msgid "The `channel-name` segment must match the value set in the `@Incoming` and `@Outgoing` annotation:"
msgstr "`channel-name` セグメントは、 `@Incoming` および `@Outgoing` アノテーションで設定された値と一致する必要があります。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:285
msgid "`quote-requests` -> Kafka topic from which we read the quote requests"
msgstr "`quote-requests` -> この Kafka トピックから見積リクエストを読みます"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:286
msgid "`quotes` -> Kafka topic in which we write the quotes"
msgstr "`quotes` -> この Kafka トピックに見積を書き込みます"

#. type: delimited block =
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:291
msgid "More details about this configuration is available on the https://kafka.apache.org/documentation/#producerconfigs[Producer configuration] and https://kafka.apache.org/documentation/#consumerconfigs[Consumer configuration] section from the Kafka documentation. These properties are configured with the prefix `kafka`.  An exhaustive list of configuration properties is available in xref:kafka.adoc#kafka-configuration[Kafka Reference Guide - Configuration]."
msgstr "この設定の詳細については、Kafka ドキュメントの https://kafka.apache.org/documentation/#producerconfigs[プロデューサー設定] and https://kafka.apache.org/documentation/#consumerconfigs[コンシューマー設定] セクションを参照してください。これらのプロパティーは、`kafka` という接頭辞で設定されます。設定プロパティーの完全なリストは、xref:kafka.adoc#kafka-configuration[Kafka リファレンスガイド - 設定] にあります。"

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:298
#, no-wrap
msgid "Receiving quotes"
msgstr "見積りの受信"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:302
msgid "Back to our _producer_ project.  Let's modify the `QuotesResource` to consume quotes from Kafka and send them back to the client via Server-Sent Events:"
msgstr "_プロデューサー_ プロジェクトに戻ります。`QuotesResource` を変更して、Kafka からの見積りを消費し、サーバー送信イベントを介してクライアントに送り返します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:306
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:308
#, no-wrap
msgid "...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:311
#, no-wrap
msgid ""
"@Channel(\"quotes\")\n"
"Multi<Quote> quotes; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:320
#, no-wrap
msgid ""
"/**\n"
" * Endpoint retrieving the \"quotes\" Kafka topic and sending the items to a server sent event.\n"
" */\n"
"@GET\n"
"@Produces(MediaType.SERVER_SENT_EVENTS) // <2>\n"
"public Multi<Quote> stream() {\n"
"    return quotes; // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:322
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr "`@Channel` 修飾子を使用して `quotes` チャネルを挿入します。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:323
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "`Server Sent Events` を使用してコンテンツが送信されたことを示します。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:324
msgid "Returns the stream (_Reactive Stream_)"
msgstr "ストリーム (_Reactive Stream_) を返します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:332
#, no-wrap
msgid ""
"# Configure the incoming `quotes` Kafka topic\n"
"mp.messaging.incoming.quotes.connector=smallrye-kafka\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:339
msgid "In this guide we explore Smallrye Reactive Messaging framework to interact with Apache Kafka.  Quarkus extension for Kafka also allows xref:kafka.adoc#kafka-bare-clients[using Kafka clients directly]."
msgstr "このガイドでは、Apache Kafka と対話するための Apache Kafka フレームワークについて説明します。Kafka の Quarkus エクステンションでは、xref:kafka.adoc#kafka-bare-clients[Kafka クライアントの直接使用] も可能です。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:354
#, no-wrap
msgid "import io.quarkus.kafka.client.serialization.ObjectMapperDeserializer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:360
#, no-wrap
msgid ""
"public class QuoteDeserializer extends ObjectMapperDeserializer<Quote> {\n"
"    public QuoteDeserializer() {\n"
"        super(Quote.class);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:367
#, no-wrap
msgid "Message serialization in Kafka"
msgstr "Kafka でのメッセージのシリアライズ"

#. type: delimited block =
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:370
msgid "In this example we used Jackson to serialize/deserialize Kafka messages.  For more options on message serialization, see xref:kafka.adoc#kafka-serialization[Kafka Reference Guide - Serialization]."
msgstr "この例では、Jackson を使用して Kafka メッセージをシリアライズ/デシリアライズしました。メッセージのシリアルライズに関するその他のオプションについては、xref:kafka.adoc#kafka-serialization[Kafka リファレンスガイド - シリアル化] を参照してください。"

#. type: delimited block =
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:374
msgid "We strongly suggest adopting a contract-first approach using a schema registry.  To learn more about how to use Apache Kafka with the schema registry and Avro, follow the xref:kafka-schema-registry-avro.adoc[Using Apache Kafka with Schema Registry and Avro] guide."
msgstr "スキーマレジストリーを使用した契約ファーストのアプローチを採用することを強くお勧めします。スキーマレジストリーと Avro で Apache Kafka を使用する方法の詳細については、xref:kafka-schema-registry-avro.adoc[スキーマレジストリーと Avro での Apache Kafka の使用方法] ガイドを参照してください。"

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:376
#, no-wrap
msgid "The HTML page"
msgstr "HTML ページ"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:379
msgid "Final touch, the HTML page requesting quotes and displaying the prices obtained over SSE."
msgstr "見積りをリクエストし、SSE で取得した価格を表示する HTML ページの最終調整を行います。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:381
msgid "Inside the _producer_ project, create the `src/main/resources/META-INF/resources/quotes.html` file with the following content:"
msgstr "_プロデューサー_ プロジェクト内に、次の内容で `src/main/resources/META-INF/resources/quotes.html` ファイルを作成します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:389
#, no-wrap
msgid ""
"<!DOCTYPE html>\n"
"<html lang=\"en\">\n"
"<head>\n"
"    <meta charset=\"UTF-8\">\n"
"    <title>Prices</title>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:416
#, no-wrap
msgid ""
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly.min.css\">\n"
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly-additions.min.css\">\n"
"</head>\n"
"<body>\n"
"<div class=\"container\">\n"
"    <div class=\"card\">\n"
"        <div class=\"card-body\">\n"
"            <h2 class=\"card-title\">Quotes</h2>\n"
"            <button class=\"btn btn-info\" id=\"request-quote\">Request Quote</button>\n"
"            <div class=\"quotes\"></div>\n"
"        </div>\n"
"    </div>\n"
"</div>\n"
"</body>\n"
"<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n"
"<script>\n"
"    $(\"#request-quote\").click((event) => {\n"
"        fetch(\"/quotes/request\", {method: \"POST\"})\n"
"        .then(res => res.text())\n"
"        .then(qid => {\n"
"            var row = $(`<h4 class='col-md-12' id='${qid}'>Quote # <i>${qid}</i> | <strong>Pending</strong></h4>`);\n"
"            $(\".quotes\").prepend(row);\n"
"        });\n"
"    });\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:426
#, no-wrap
msgid ""
"    var source = new EventSource(\"/quotes\");\n"
"    source.onmessage = (event) => {\n"
"      var json = JSON.parse(event.data);\n"
"      $(`#${json.id}`).html((index, html) => {\n"
"        return html.replace(\"Pending\", `\\$\\xA0${json.price}`);\n"
"      });\n"
"    };\n"
"</script>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:431
msgid "Nothing spectacular here.  When the user clicks the button, HTTP request is made to request a quote, and a pending quote is added to the list.  On each quote received over SSE, the corresponding item in the list is updated."
msgstr "ここでは何も特別なことはありません。ユーザーがボタンをクリックすると、見積りをリクエストするための HTTP リクエストが作成され、保留中の見積りがリストに追加されます。SSE を介して受け取った見積もりごとに、リスト内の対応するアイテムが更新されます。"

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:432
#, no-wrap
msgid "Get it running"
msgstr "実行"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:436
msgid "You just need to run both applications.  In one terminal, run:"
msgstr "両方のアプリケーションを実行する必要があります。1 つの端末で、次を実行します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:440
#, no-wrap
msgid "mvn -f kafka-quickstart-producer quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:443
msgid "In another terminal, run:"
msgstr "別の端末で、次を実行します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:447
#, no-wrap
msgid "mvn -f kafka-quickstart-processor quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:451
msgid "Quarkus starts a Kafka broker automatically, configures the application and shares the Kafka broker instance between different applications.  See xref:kafka-dev-services.adoc[Dev Services for Kafka] for more details."
msgstr "Quarkus は、Kafka ブローカーを自動的に起動し、アプリケーションを設定して、異なるアプリケーション間で Kafka ブローカーインスタンスを共有します。詳細については、xref:kafka-dev-services.adoc[Dev Services for Kafka] を参照してください。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:453
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr "ブラウザーで `http://localhost:8080/quotes.html` を開き、ボタンをクリックして見積りをリクエストします。"

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:454
#, no-wrap
msgid "Running in JVM or Native mode"
msgstr "JVM またはネイティブモードでの実行"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:458
msgid "When not running in dev or test mode, you will need to start your Kafka broker.  You can follow the instructions from the https://kafka.apache.org/quickstart[Apache Kafka website] or create a `docker-compose.yaml` file with the following content:"
msgstr "開発モードまたはテストモードで実行していない場合は、Kafka ブローカーを起動する必要があります。 https://kafka.apache.org/quickstart[Apache Kafka Web サイト] に記載された手順に従うか、次の内容で `docker-compose.yaml` ファイルを作成できます。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:462
#, no-wrap
msgid "version: '3.5'\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:464
#, no-wrap
msgid "services:\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:477
#, no-wrap
msgid ""
"  zookeeper:\n"
"    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0\n"
"    command: [\n"
"      \"sh\", \"-c\",\n"
"      \"bin/zookeeper-server-start.sh config/zookeeper.properties\"\n"
"    ]\n"
"    ports:\n"
"      - \"2181:2181\"\n"
"    environment:\n"
"      LOG_DIR: /tmp/logs\n"
"    networks:\n"
"      - kafka-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:495
#, no-wrap
msgid ""
"  kafka:\n"
"    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0\n"
"    command: [\n"
"      \"sh\", \"-c\",\n"
"      \"bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}\"\n"
"    ]\n"
"    depends_on:\n"
"      - zookeeper\n"
"    ports:\n"
"      - \"9092:9092\"\n"
"    environment:\n"
"      LOG_DIR: \"/tmp/logs\"\n"
"      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092\n"
"      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092\n"
"      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n"
"    networks:\n"
"      - kafka-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:509
#, no-wrap
msgid ""
"  producer:\n"
"    image: quarkus-quickstarts/kafka-quickstart-producer:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: producer\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    depends_on:\n"
"      - kafka\n"
"    environment:\n"
"      KAFKA_BOOTSTRAP_SERVERS: kafka:9092\n"
"    ports:\n"
"      - \"8080:8080\"\n"
"    networks:\n"
"      - kafka-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:521
#, no-wrap
msgid ""
"  processor:\n"
"    image: quarkus-quickstarts/kafka-quickstart-processor:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: processor\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    depends_on:\n"
"      - kafka\n"
"    environment:\n"
"      KAFKA_BOOTSTRAP_SERVERS: kafka:9092\n"
"    networks:\n"
"      - kafka-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:525
#, no-wrap
msgid ""
"networks:\n"
"  kafka-quickstart-network:\n"
"    name: kafkaquickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:528
msgid "Make sure you first build both applications in JVM mode with:"
msgstr "最初に、次のコマンドを使用して両方のアプリケーションを JVM モードでビルドします。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:533
#, no-wrap
msgid ""
"mvn -f kafka-quickstart-producer package\n"
"mvn -f kafka-quickstart-processor package\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:536
msgid "Once packaged, run `docker-compose up`."
msgstr "パッケージ化したら、`docker-compose up` を実行します。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:538
msgid "This is a development cluster, do not use in production."
msgstr "これは開発クラスターであり、本番では使用しないでください。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:541
msgid "You can also build and run our applications as native executables.  First, compile both applications as native:"
msgstr "アプリケーションをネイティブ実行可能ファイルとしてビルドし、実行することもできます。まず、両方のアプリケーションをネイティブとしてコンパイルします。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:546
#, no-wrap
msgid ""
"mvn -f kafka-quickstart-producer package -Dnative -Dquarkus.native.container-build=true\n"
"mvn -f kafka-quickstart-processor package -Dnative -Dquarkus.native.container-build=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:549
msgid "Run the system with:"
msgstr "次のコマンドでシステムを実行します。"

#. type: delimited block -
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:554
#, no-wrap
msgid ""
"export QUARKUS_MODE=native\n"
"docker-compose up --build\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:556
#, no-wrap
msgid "Going further"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:560
msgid "This guide has shown how you can interact with Kafka using Quarkus.  It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr "このガイドでは、Quarkus を使用して Kafka とやりとりする方法を示しました。 https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] を利用して、データストリーミングアプリケーションを構築します。"

#. type: Plain text
#: upstream/_versions/2.2/guides/kafka-reactive-getting-started.adoc:561
msgid "For the exhaustive list of features and configuration options, check the xref:kafka.adoc[Reference guide for Apache Kafka Extension]."
msgstr "機能と設定オプションの完全なリストについては、xref:kafka.adoc[Apache Kafka エクステンションのリファレンスガイド] を確認してください。"
