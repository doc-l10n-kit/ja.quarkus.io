msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Generating CycloneDX BOMs"
msgstr "CycloneDX BOMの生成"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid ""
"An SBOM (Software Bill of Material) is a manifest that describes what a given software distribution consists of in terms of components. In addition to that, it may include a lot more information such as relationships between those components, licenses, provenance, etc.\n"
"SBOMs would typically be used by software security and software supply chain risk management tools to perform vulnerability and compliance related analysis."
msgstr "SBOM（Software Bill of Material：ソフトウェア部品表）とは、あるソフトウェア配布がどのようなコンポーネントで構成されているかを記述したマニフェストのことです。それに加えて、それらのコンポーネント間の関係、ライセンス、出所など、より多くの情報を含むことがあります。SBOMは通常、ソフトウェアセキュリティおよびソフトウェアサプライチェーンリスク管理ツールによって使用され、脆弱性およびコンプライアンス関連の分析を実行します。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "This guide describes Quarkus SBOM generation capabilities following https://cyclonedx.org/[CycloneDX] specification."
msgstr "このガイドでは、 link:https://cyclonedx.org/[CycloneDX] 仕様に準拠したQuarkus SBOM生成機能について説明します。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Why Quarkus-specific tooling?"
msgstr "Quarkus専用のツールを使用する理由"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "While Quarkus integrates with build tools such as https://maven.apache.org/[Maven] and https://gradle.org/[Gradle], it could itself be categorized as a build tool with its own component and dependency model, build steps, and build outcomes. One of the essential component types of a Quarkus application is a Quarkus extension, which consists of a runtime and a build time artifacts, and their dependencies."
msgstr "Quarkusは、 link:https://maven.apache.org/[Mavenや] link:https://gradle.org/[Gradleなどの] ビルドツールと統合されていますが、それ自体が独自のコンポーネントや依存関係モデル、ビルドステップ、ビルド結果を持つビルドツールに分類されます。Quarkusアプリケーションに不可欠なコンポーネントタイプの1つはQuarkusエクステンションで、ランタイムとビルドタイムの成果物、およびそれらの依存関係で構成されます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "To properly resolve Quarkus extension and other application dependencies Quarkus uses its own dependency resolver, which is implemented on top of the dependency resolver provided by the underlying build tool: Maven or Gradle."
msgstr "Quarkusの拡張機能やその他のアプリケーションの依存関係を適切に解決するために、Quarkusは独自の依存関係リゾルバを使用します：MavenまたはGradleです。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "As a consequence, in case of Maven, for example, the results of `dependency:tree` will not include all the dependencies Quarkus will use to build an application. A similar issue will affect other dependency analysis tools that assume a project adheres to the standard Maven dependency model: they will not be able to capture the effective Quarkus application dependency graph. Unfortunately, that includes the implementation of the https://github.com/CycloneDX/cyclonedx-maven-plugin[CycloneDX Maven plugin]."
msgstr "結果として、たとえばMavenの場合、 `dependency:tree` の結果には、Quarkusがアプリケーションのビルドに使用するすべての依存関係が含まれません。同様の問題は、プロジェクトが標準的なMaven依存性モデルに準拠していると仮定している他の依存性分析ツールにも影響します。残念ながら、これには link:https://github.com/CycloneDX/cyclonedx-maven-plugin[CycloneDX Mavenプラグ] インの実装も含まれます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Besides the dependencies, that are an input to a build process, there is also an outcome of the build that is the final distribution of an application. Users of an application may request an SBOM manifesting not only the dependencies (the input to a build) but also the final distribution (the outcome of the build) before they agree to deploy the application. Quarkus allows application developers to choose various packaging types for their applications, some of which are Quarkus-specific. Providing certain Quarkus-specific details about components included in a distribution may help better evaluate the impact of potential security-related issues."
msgstr "ビルドプロセスへの入力である依存関係のほかに、アプリケーションの最終的な配布であるビルドの結果もあります。アプリケーションのユーザーは、アプリケーションのデプロイに同意する前に、依存関係（ビルドの入力）だけでなく、最終的な配布（ビルドの結果）を明示するSBOMを要求することができます。Quarkusでは、アプリケーション開発者がアプリケーションに対してさまざまなパッケージングタイプを選択することができます。ディストリビューションに含まれるコンポーネントについて、Quarkus 特有の詳細を提供することで、潜在的なセキュリティ関連問題の影響をより適切に評価することができます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Dependency SBOMs"
msgstr "依存関係 SBOM"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "This chapter describes how to generate SBOMs manifesting only the dependencies of an application before it is built. In other words, these SBOMs will manifest the input into a build. These SBOMs could be used to perform vulnerability and compliance related analysis before building applications."
msgstr "この章では、ビルド前にアプリケーションの依存関係のみを明示するSBOMを生成する方法について説明します。言い換えると、これらのSBOMはビルドへの入力を明示します。これらの SBOM は、アプリケーションをビルドする前に脆弱性およびコンプライアンス関連の分析を実行するために使用できます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Maven Dependency SBOMs"
msgstr "Maven 依存関係 SBOM"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "For Quarkus Maven projects dependency SBOMs can be generated with the `quarkus:dependency-sbom` goal. The outcome of the goal will be saved in a `target/<artifactId>-<version>-dependency-cyclonedx.json` file (which can be changed by setting the `outputFile` goal parameter or the `quarkus.dependency.sbom.output-file` property). The complete Quarkus build and runtime dependency graphs will be recorded in the https://cyclonedx.org/[CycloneDX] `JSON` format."
msgstr "Quarkus Mavenプロジェクトの依存関係SBOMは、 `quarkus:dependency-sbom` ゴールで生成できます。ゴールの結果は、 `target/<artifactId>-<version>-dependency-cyclonedx.json` ファイルに保存されます（ `outputFile` ゴールパラメーターまたは `quarkus.dependency.sbom.output-file` プロパティを設定することで変更できます）。完全なQuarkusビルドと実行時の依存グラフは、 link:https://cyclonedx.org/[CycloneDX] `JSON` フォーマットで記録されます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`XML` format can be requested by setting `format` goal parameter (or `quarkus.dependency.sbom.format` property) to `xml`."
msgstr "`XML` フォーマットは、 ゴールパラメータ（または プロパティ）を に設定することで要求できます。 `format` `quarkus.dependency.sbom.format` `xml`"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Each component in the generated SBOM will include the `quarkus:component:scope` property that will indicate whether this component is used at runtime or only development/build time."
msgstr "生成されたSBOMの各コンポーネントには、このコンポーネントが実行時に使用されるか、開発/ビルド時にのみ使用されるかを示す `quarkus:component:scope` プロパティが含まれます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "By default, `quarkus:dependency-sbom` captures the dependencies of a production build. Quarkus supports three application bootstrap modes: normal (production), test, and dev. In all three modes, an application may have different dependency graphs. The `mode` parameter can be used to indicate which dependency graph should be recorded. If the `mode` is set to `test` or `dev`, the target file name will become `target/<artifactId>-<version>-<mode>-dependency-cyclonedx.json`."
msgstr "デフォルトでは、 `quarkus:dependency-sbom` 、本番ビルドの依存関係がキャプチャされます。Quarkusは、3つのアプリケーションブートストラップモードをサポートしています。3つのモードすべてにおいて、アプリケーションは異なる依存関係グラフを持つ可能性があります。 `mode` パラメータを使用すると、記録する依存関係グラフを指定できます。 `mode` が `test` または `dev` に設定されている場合、ターゲットファイル名は `target/<artifactId>-<version>-<mode>-dependency-cyclonedx.json` になります。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "The complete set of parameters and their description can be obtained by executing `mvn help:describe -Dcmd=quarkus:dependency-sbom -Ddetail`."
msgstr "パラメータの全セットとその説明は、 `mvn help:describe -Dcmd=quarkus:dependency-sbom -Ddetail` を実行することで得られます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Gradle Dependency SBOMs"
msgstr "Gradle依存性SBOM"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Unlike Maven, the https://github.com/CycloneDX/cyclonedx-gradle-plugin[Gradle CycloneDX plugin implementation] can be used in Quarkus projects to generate dependency SBOMs, since the implementation manifests dependency configurations registered by configured plugins."
msgstr "Mavenとは異なり、 link:https://github.com/CycloneDX/cyclonedx-gradle-plugin[Gradle CycloneDXプラグイン実装は] 、構成されたプラグインによって登録された依存関係を明示するため、Quarkusプロジェクトで依存関係SBOMを生成するために使用できます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Please, refer to the https://github.com/CycloneDX/cyclonedx-gradle-plugin[Gradle CycloneDX plugin] documentation for its configuration options. Here is a list of Quarkus dependency configurations that would be relevant for manifesting:"
msgstr "設定オプションについては、 link:https://github.com/CycloneDX/cyclonedx-gradle-plugin[Gradle CycloneDXプラグインの] ドキュメントを参照してください。以下は、マニフェストに関連するQuarkusの依存関係の設定のリストです："

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`quarkusProdRuntimeClasspathConfiguration` - Quarkus application production runtime dependencies;"
msgstr "`quarkusProdRuntimeClasspathConfiguration` - Quarkusアプリケーションのプロダクションランタイムの依存関係；"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`quarkusProdRuntimeClasspathConfigurationDeployment` - Quarkus application production runtime and build time dependencies;"
msgstr "`quarkusProdRuntimeClasspathConfigurationDeployment` - Quarkusアプリケーションのプロダクションランタイムとビルドタイムの依存関係；"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`quarkusTestRuntimeClasspathConfiguration` - Quarkus application test runtime dependencies;"
msgstr "`quarkusTestRuntimeClasspathConfiguration` - Quarkus アプリケーションのテスト実行時の依存関係；"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`quarkusTestRuntimeClasspathConfigurationDeployment` - Quarkus application test runtime and build time dependencies;"
msgstr "`quarkusTestRuntimeClasspathConfigurationDeployment` - Quarkusアプリケーションのテストランタイムとビルド時の依存関係；"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`quarkusDevRuntimeClasspathConfiguration` - Quarkus application dev mode runtime dependencies;"
msgstr "`quarkusDevRuntimeClasspathConfiguration` - Quarkusアプリケーションの開発モードのランタイム依存関係；"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`quarkusDevRuntimeClasspathConfigurationDeployment` - Quarkus application dev mode runtime and build time dependencies."
msgstr "`quarkusDevRuntimeClasspathConfigurationDeployment` - Quarkusアプリケーションの開発モードのランタイムとビルド時の依存関係。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Given that the plugin is not aware of how Quarkus uses these dependencies, it will not be able to set the `quarkus:component:scope` property for components. On the other hand, the requested configuration name can be used indicate which scope to target."
msgstr "プラグインはQuarkusがこれらの依存関係をどのように使用しているかを認識していないため、コンポーネントの `quarkus:component:scope` プロパティを設定することはできません。一方、要求されたコンフィギュレーション名は、どのスコープをターゲットにするかを示します。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Distribution SBOMs"
msgstr "流通SBOM"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "This chapter describes SBOMs that manifest outcomes of Quarkus builds that are final application distributions."
msgstr "この章では、最終的なアプリケーション・ディストリビューションであるQuarkusビルドの結果を示すSBOMについて説明します。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "During an application build and package assembly process, Quarkus captures certain details about the produced distribution and then allows an SBOM generator to consume and record that information in an SBOM format."
msgstr "Quarkusは、アプリケーションのビルドとパッケージのアセンブリプロセス中に、生成されたディストリビューションに関する特定の詳細をキャプチャし、SBOMジェネレーターがその情報をSBOM形式で消費して記録できるようにします。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "At this point, the only SBOM generator available for Quarkus users that can manifest application distributions is `io.quarkus:quarkus-cyclonedx`. Once it's added as a project dependency it will generate SBOMs every time an application is built. SBOMs will be saved in the project's build output directory under `<executable-name>-cyclonedx.<format>` name, where"
msgstr "`io.quarkus:quarkus-cyclonedx` 現時点では、Quarkusユーザーが使用できる唯一のSBOMジェネレーターで、アプリケーションのディストリビューションをマニフェストできます。プロジェクトの依存関係として追加すると、アプリケーションがビルドされるたびにSBOMが生成されます。SBOMはプロジェクトのビルド出力ディレクトリに `<executable-name>-cyclonedx.<format>` の名前で保存されます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`<executable-name>` is the base file name (without the extension) of the executable that launches an application;"
msgstr "`<executable-name>` は、アプリケーションを起動する実行ファイルの基本ファイル名（拡張子なし）です；"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`<format>` is either `json` (the default) or `xml`, which can be configured using `quarkus.cyclonedx.format` property. If both formats are desired `quarkus.cyclonedx.format` can be set to `all`."
msgstr "`<format>` は、 （デフォルト）または のいずれかです。 プロパティを使用して設定できます。両方のフォーマットが必要な場合は、 を に設定できます。 `json` `xml` `quarkus.cyclonedx.format` `quarkus.cyclonedx.format` `all`"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Fast JAR"
msgstr "高速JAR"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Fast JAR packaging uses a Quarkus-specific filesystem directory layout that contains files generated by Quarkus and Maven artifacts that are runtime dependencies of an application."
msgstr "高速JARパッケージングでは、Quarkus固有のファイルシステムのディレクトリレイアウトを使用します。このディレクトリレイアウトには、Quarkusによって生成されたファイルと、アプリケーションの実行時依存関係にあるMavenの成果物が含まれます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "SBOMs for Fast JAR packaging type will use the executable JAR file as their main component and record both runtime and build time Quarkus application dependencies."
msgstr "高速JARパッケージングタイプのSBOMは、実行可能なJARファイルをメインコンポーネントとして使用し、Quarkusアプリケーションの実行時およびビルド時の依存関係を記録します。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Runtime Components"
msgstr "ランタイムコンポーネント"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Every file in the resulting Fast JAR distribution will appear in the SBOM with the `quarkus:component:scope` property set to `runtime` and `evidence.occurrences.location` field pointing to the location of the component in the application distribution directory, for example"
msgstr "結果の Fast JAR ディストリビューションの各ファイルは、 `quarkus:component:scope` プロパティが `runtime` に設定され、 `evidence.occurrences.location` フィールドがアプリケーションディストリビューションディレクトリ内のコンポーネントの場所を指すように、SBOM に表示されます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`evidence.occurrences.location` was introduced in CycloneDX schema version 1.5, for older versions the location will be indicated using the `quarkus:component:location` property."
msgstr "`evidence.occurrences.location` はCycloneDXスキーマのバージョン1.5で導入されましたが、それ以前のバージョンでは、 プロパティを使用して場所が示されます。 `quarkus:component:location` "

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Pedigree"
msgstr "血統"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Pedigree is a way to provide information that certain patches, or changes in general, have been applied to a certain component."
msgstr "Pedigreeは、特定のパッチや一般的な変更が特定のコンポーネントに適用されたことを示す情報です。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "In certain cases, Quarkus may copy modified versions of dependency artifacts to an application distribution. Manipulating the original content of a component will change its hash sums which may get highlighted as suspicious by the tools comparing original component hash sums to those found in the distribution."
msgstr "場合によっては、Quarkusは依存関係アーティファクトの変更されたバージョンをアプリケーションディストリビューションにコピーすることがあります。コンポーネントの元のコンテンツを操作すると、そのハッシュ合計が変更され、元のコンポーネントのハッシュ合計とディストリビューションで見つかったハッシュ合計を比較するツールによって、疑わしいものとして強調表示される可能性があります。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid ""
"When Quarkus applies modifications to artifacts resolved from Maven repositories, it can manifest these changes as pedigree notes in the generated SBOM.\n"
"For example, if an application developer decided to remove certain classpath resources from a dependency, such as"
msgstr "QuarkusがMavenリポジトリから解決されたアーティファクトに変更を適用すると、生成されたSBOMに血統メモとして変更が表示されます。たとえば、アプリケーション開発者が依存関係から特定のクラスパスリソースを削除することを決定した場合、次のようになります。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "The resulting SBOM will include"
msgstr "その結果、SBOMには以下が含まれます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Build time dependencies"
msgstr "ビルド時間の依存関係"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Build time dependencies will be recorded with the `quarkus:component:scope` property set to `development`:"
msgstr "ビルド時の依存関係は、 `quarkus:component:scope` プロパティを `development` に設定して記録します："

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "They will not include `evidence.occurrences.location` since they will not be found in the distribution."
msgstr "`evidence.occurrences.location` はディストリビューションに含まれていないため、含まれません。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Uber JAR"
msgstr "ユーバーJAR"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "SBOMs for Uber JARs will use the Uber JAR Maven artifact as their main component."
msgstr "Uber JAR用のSBOMは、Uber JAR Mavenアーティファクトをメインコンポーネントとして使用します。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Since an Uber JAR is published as a Maven artifact itself, SBOMs generated for Uber JARs will also be automatically published as Maven artifacts. This, however, can be disabled by setting the `attachSboms` parameter of the `quarkus:build` goal to `false`."
msgstr "Uber JARはMavenアーティファクト自体として公開されるため、Uber JAR用に生成されたSBOMも自動的にMavenアーティファクトとして公開されます。ただし、これは `quarkus:build` ゴールの `attachSboms` パラメータを `false` に設定することで無効にできます。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Gradle users will have to explicitly configure a publishing plugin to deploy SBOMs as Maven artifacts."
msgstr "Gradleユーザーは、SBOMをMaven成果物としてデプロイするためにパブリッシングプラグインを明示的に設定する必要があります。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Runtime components in an SBOM generated for an Uber JAR will not include `evidence.occurrences.location` since their content is merged in a single JAR file."
msgstr "Uber JAR用に生成されたSBOM内のランタイムコンポーネントには、それらのコンテンツが単一のJARファイルにマージされるため、 `evidence.occurrences.location` 。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Native image"
msgstr "ネイティブイメージ"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "SBOMs for native images will use the native executable file as their main component."
msgstr "ネイティブイメージ用のSBOMは、ネイティブ実行ファイルをメインコンポーネントとして使用します。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Since native executables are not currently attached to projects as Maven artifacts, their SBOMs will not be attached as Maven artifacts either."
msgstr "現在、ネイティブ実行可能ファイルはMavenアーティファクトとしてプロジェクトに添付されないため、そのSBOMもMavenアーティファクトとして添付されません。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "As in the case of an Uber JAR, runtime components in an SBOM generated for an native executable will not include `evidence.occurrences.location` since their corresponding code and resources are included in a single native executable file."
msgstr "Uber JARの場合と同様に、ネイティブ実行ファイル用に生成されたSBOM内のランタイムコンポーネントは、対応するコードとリソースが単一のネイティブ実行ファイルに含まれているため、 `evidence.occurrences.location` 。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Mutable JAR"
msgstr "変更可能なJAR"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Mutable JAR distribution is similar to the Fast JAR one except it also includes build time dependencies to support re-augmentation (re-building) of an application."
msgstr "Mutable JARディストリビューションはFast JARディストリビューションと似ていますが、アプリケーションの再補強（再ビルド）をサポートするビルド時の依存関係が含まれている点が異なります。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "SBOMs generated for Mutable JAR distributions will also record locations of components that will be used during re-augmentation process using `evidence.occurrences.location` but keeping their `quarkus:component:scope` property set to `development`. For example:"
msgstr "Mutable JARディストリビューション用に生成されたSBOMは、 `evidence.occurrences.location` を使用して再オーグメント処理中に使用されるコンポーネントの位置も記録しますが、その `quarkus:component:scope` プロパティは `development` に設定されたままです。例えば"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Quarkus Property Taxonomy"
msgstr "Quarkusのプロパティ分類法"

#: _versions/3.15/guides/cyclonedx.adoc
msgid "Name"
msgstr "名前"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Value range"
msgstr "値の範囲"

#: _versions/3.15/guides/cyclonedx.adoc
msgid "Description"
msgstr "説明"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`quarkus:component:scope`"
msgstr "`quarkus:component:scope`"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`runtime` or `development`"
msgstr "`runtime` または `development`"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Indicates whether a component is a runtime or a build/development time dependency of an application."
msgstr "コンポーネントがアプリケーションのランタイム依存か、ビルド/開発時依存かを示します。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "`quarkus:component:location`"
msgstr "`quarkus:component:location`"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "String representing a file system path using `/` as a path element"
msgstr "`/` をパス要素として用いてファイルシステムのパスを表す文字列。"

#: _versions/3.15/guides/cyclonedx.adoc
#, fuzzy
msgid "Used in SBOMs with schema versions 1.4 or older. Starting from schema 1.5, `evidence.occurrences.location` is used instead. This property is used only if a component is found in the distribution. The value is a relative path to a file pointing to the location of a component in a distribution using `/` as a path element separator."
msgstr "スキーマ・バージョン1.4以前のSBOMで使用。スキーマ1.5からは、代わりに `evidence.occurrences.location` 。このプロパティは、コンポーネントがディストリビューションで見つかった場合にのみ使用されます。値は、 `/` をパス要素セパレータとして使用した、ディストリビューション内のコンポーネントの場所を指すファイルへの相対パスです。"
