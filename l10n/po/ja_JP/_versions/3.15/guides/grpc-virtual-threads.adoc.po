msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.15/guides/grpc-virtual-threads.adoc
msgid "Quarkus Virtual Thread support for gRPC services"
msgstr ""

#: _versions/3.15/guides/grpc-virtual-threads.adoc
msgid "This guide explains how to benefit from Java virtual threads when implementing a gRPC service."
msgstr ""

#: _versions/3.15/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid ""
"This guide focuses on using virtual threads with the gRPC extensions.\n"
"Please refer to xref:virtual-threads.adoc[Writing simpler reactive REST services with Quarkus Virtual Thread support]\n"
"to read more about Java virtual threads in general and the Quarkus Virtual Thread support."
msgstr "このガイドでは、gRPCエクステンションで仮想スレッドを使用することに重点を置いています。Javaの仮想スレッド全般とQuarkusの仮想スレッドサポートの詳細については、「 xref:virtual-threads.adoc[Quarkusの仮想スレッドサポートを使用した、よりシンプルなリアクティブRESTサービスの作成] 」を参照してください。"

#: _versions/3.15/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid ""
"By default, the Quarkus gRPC extension invokes service methods on an event-loop thread.\n"
"See the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture documentation] for further details on this topic.\n"
"But, you can also use the link:{blocking_annotation}[@Blocking] annotation to indicate that the service is _blocking_ and should be run on a worker thread."
msgstr "デフォルトでは、Quarkus gRPCエクステンションは、イベントループスレッドでサービスメソッドを呼び出します。このトピックの詳細については、 xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architectureのドキュメント] を参照してください。しかし、 link:{blocking_annotation}[@Blocking] アノテーションを使用して、サービスが _ブロッキングさ_ れ、ワーカースレッドで実行される必要があることを示すこともできます。"

#: _versions/3.15/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "The idea behind Quarkus Virtual Thread support for gRPC services is to offload the service method invocation on virtual threads, instead of running it on an event-loop thread or a worker thread."
msgstr "QuarkusがgRPCサービスを仮想スレッドでサポートする背景には、イベントループスレッドやワーカースレッドで実行する代わりに、仮想スレッドでサービスメソッドの呼び出しをオフロードするという考えがあります。"

#: _versions/3.15/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid ""
"To enable virtual thread support on a service method, simply add the link:{runonvthread}[@RunOnVirtualThread] annotation to the method.\n"
"If the JDK is compatible (Java 19 or later versions - we recommend 21+) then the invocation will be offloaded to a new virtual thread.\n"
"It will then be possible to perform blocking operations without blocking the platform thread upon which the virtual thread is mounted."
msgstr "サービス・メソッドで仮想スレッドのサポートを有効にするには、メソッドに link:{runonvthread}[@RunOnVirtualThread] アノテーションを追加するだけです。JDK が互換性がある場合（Java 19 またはそれ以降のバージョン - 21+ を推奨）、呼び出しは新しい仮想スレッドにオフロードされます。これにより、仮想スレッドがマウントされているプラットフォーム・スレッドをブロックすることなく、ブロッキング処理を実行できるようになります。"

#: _versions/3.15/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "Configuring gRPC services to use virtual threads"
msgstr "仮想スレッドを使用するgRPCサービスの設定"

#: _versions/3.15/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid ""
"Let's see an example of how to implement a gRPC service using virtual threads.\n"
"First, make sure to have the gRPC extension dependency in your build file:"
msgstr "仮想スレッドを使用した gRPC サービスの実装例を見てみましょう。まず、ビルドファイルに gRPC エクステンションの依存関係があることを確認してください："

#: _versions/3.15/guides/grpc-virtual-threads.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.15/guides/grpc-virtual-threads.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.15/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "You also need to make sure that you are using Java 19 or later (we recommend 21+), this can be enforced in your `pom.xml` file with the following:"
msgstr "また、Java 19以降（21以上を推奨）を使用していることを確認する必要があります。これは、 `pom.xml` ファイルで以下のように指定します："

#: _versions/3.15/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "Run your application with:"
msgstr "でアプリケーションを実行します："

#: _versions/3.15/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "or to use the Quarkus Dev mode, insert the following to the `quarkus-maven-plugin` configuration:"
msgstr "または、Quarkus Devモードを使用するには、 `quarkus-maven-plugin` の設定に以下を挿入します："

#: _versions/3.15/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "Then you can start using the annotation `@RunOnVirtualThread` in your service implementation:"
msgstr "その後、サービス実装でアノテーション `@RunOnVirtualThread` を使い始めることができます："

#: _versions/3.15/guides/grpc-virtual-threads.adoc
msgid "Limitations"
msgstr ""

#: _versions/3.15/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "The gRPC methods receiving _streams_, such as a `Multi` cannot use `@RunOnVirtualThread`, as the method must not be blocking and produce its result (`Multi` or `Uni`) immediately."
msgstr "`Multi` のような _ストリームを_ 受け取る gRPC メソッドは、 `@RunOnVirtualThread` を使用することはできません。これは、メソッドがブロッキングされておらず、その結果 ( `Multi` または `Uni` ) を直ちに生成する必要があるからです。"
