msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:2
msgid "post"
msgstr "post"

#. type: Title =
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:10
#, fuzzy
msgid "Lufthansa Technik AVIATAR experiences significant cloud resources savings by moving to Kubernetes-native Quarkus"
msgstr "Lufthansa Technik AVIATAR、KubernetesネイティブのQuarkusへの移行でクラウドリソースの大幅削減を実現"

#. type: YAML Front Matter
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:4
#, fuzzy
msgid "2020-02-17"
msgstr "2020-02-17"

#. type: YAML Front Matter
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:5
msgid "user-story"
msgstr "user-story"

#. type: YAML Front Matter
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:6
#, fuzzy
msgid "cesarsaavedra"
msgstr "セサルサアベドラ"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:15
#, fuzzy
msgid "Lufthansa Technik, the world’s largest independent provider of airline maintenance, repair, and overhaul (MRO) services, runs a SaaS digital platform, called AVIATAR, for the aviation industry. This platform helps airlines avoid delays and cancellations by using data to better organize and schedule maintenance. The company built and operated AVIATAR using a hybrid cloud infrastructure based on enterprise open source software from Red Hat."
msgstr "航空会社の整備・修理・オーバーホール（MRO）サービスを提供する世界最大の独立系プロバイダーであるルフトハンザ テクニックは、航空業界向けに「AVIATAR」というSaaS型デジタルプラットフォームを運営しています。このプラットフォームは、航空会社がデータを活用して整備をより適切に整理し、スケジュールを立てることで、遅延やキャンセルを回避できるようにするものです。同社は、レッドハットのエンタープライズ向けオープンソースソフトウェアをベースにしたハイブリッドクラウドインフラを使用してAVIATARを構築・運用しています。"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:17
#, fuzzy
msgid "In the last 3 years, AVIATAR business has been growing fast and they needed to accommodate the growing demand from their customers. To this end, they had to grow their development force from 5 developers when they first started to over 100 at present. As they grew, they realized that one single large team was not the most productive and efficient way to organize their software development efforts because many developers had to spend time waiting for each other’s work to be finished due to the many interdependencies in the overall system. To address this situation, they decided to split development from one team to several cross-functional teams. At the same time, they also started working on ways to make the newly created smaller development teams more independent by giving each team autonomy to run their own services. This resulted in their evolution into a microservices architecture, where most of their microservices were based on Spring Boot and Java EE. They have gone from 10 services in the beginning to over 100 as of this writing."
msgstr "この3年間、AVIATARのビジネスは急成長しており、顧客からの需要の高まりに対応する必要がありました。そのため、設立当初は5人だった開発部隊を、現在では100人以上にまで増やさなければなりませんでした。というのも、システム全体には多くの相互依存関係があるため、多くの開発者がお互いの作業が終わるのを待つ時間が必要だったからです。この状況に対処するため、彼らは開発を1つのチームから複数の機能横断的なチームに分割することを決定しました。同時に、新たに生まれた小さな開発チームの独立性を高めるため、各チームに独自のサービスを運営するための自律性を持たせることにも取り組み始めた。その結果、マイクロサービス・アーキテクチャに進化し、マイクロサービスの多くはSpring BootとJava EEをベースにしたものになりました。当初は10サービスだったものが、この記事を書いている時点では100サービス以上になっているそうです。"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:19
#, fuzzy
msgid "The small and autonomous development teams have been able to take responsibility for their own services from development all the way to production to achieve more agility and respond faster to the business."
msgstr "小規模で自律的な開発チームが、開発から本番まで一貫して自分のサービスに責任を持つことで、よりアジリティを高め、ビジネスへの迅速な対応を実現しています。"

#. type: Title ==
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:21
#, fuzzy
msgid "High consumption of cloud resources for existing services"
msgstr "既存サービスのクラウドリソースの消費量が多い"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:23
#, fuzzy
msgid "Lufthansa Technik run their microservices on OpenShift on Azure and, as they were looking at different ways to scale their development efforts, they were also looking at ways to save cloud resource consumption. As they were migrating to microservices, they noticed microservices were consuming high memory and compute cloud resources. For high-availability and emergency procedure purposes, they run at least 3 instances of each microservice on the cloud which means that for each of these microservices, there’s a 3x cloud resource consumption rate. For example, one of their microservices was consuming ½ core plus 1 GB of RAM per instance, which required 1.5 cores and 3 GB of RAM when running it in HA on the cloud (3 instances)."
msgstr "Lufthansa Technikは、Azure上のOpenShiftでマイクロサービスを運用していますが、開発作業を拡張するさまざまな方法を検討する中で、クラウドリソース消費を節約する方法も検討していました。マイクロサービスへの移行に伴い、マイクロサービスがメモリやコンピュートなどのクラウドリソースを大量に消費していることに気づかれたそうです。高可用性や緊急時の対応を考慮し、クラウド上で各マイクロサービスのインスタンスを3つ以上稼働させているため、各マイクロサービスに対して3倍のクラウドリソースが消費されていることになる。例えば、あるマイクロサービスでは、1インスタンスあたり1/2コアと1GBのRAMを消費していましたが、クラウド上でHA運用する場合（3インスタンス）、1.5コアと3GBのRAMが必要でした。"

#. type: Title ==
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:25
#, fuzzy
msgid "Optimizing cloud resource consumption with Quarkus"
msgstr "Quarkusによるクラウドリソース消費の最適化"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:27
#, fuzzy
msgid "Thorsten Pohl, Product Owner Automation & Platform Architect at Digital Product Division AVIATAR, first heard about Quarkus and its benefits in April 2019 at Red Hat Summit. Among its many benefits, the ones that piqued his interest were its low memory consumption and fast times to first response, both in JVM and native modes. He took this information back to AVIATAR and they decided to try it out. There were two initial microservices that their Technology Council recommended for a Quarkus tryout. The first one would be a brand new microservice called the _“Customer Configuration”_ service, and the second one would be the _“Service Discovery”_ service which would be a migration from a service running in an application server to Quarkus."
msgstr "デジタル製品部門AVIATARのプロダクトオーナー オートメーション＆プラットフォームアーキテクトであるThorsten Pohl氏は、2019年4月のRed Hat Summitで初めてQuarkusとその利点について知りました。その多くの利点の中で、彼の興味をそそったのは、JVMとネイティブモードの両方で、メモリ消費量が少なく、ファーストレスポンスまでの時間が速いという点でした。彼はこの情報をAVIATARに持ち帰り、試してみることにした。技術評議会がQuarkusの試用に推奨する最初のマイクロサービスは2つあった。1つ目は _「Customer Configuration」_ サービスという全く新しいマイクロサービス、2つ目は _「Service Discovery」_ サービスで、アプリケーションサーバーで動作するサービスからQuarkusに移行することになりました。"

#. type: Title ===
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:29
#, fuzzy
msgid "The Customer Configuration service"
msgstr "カスタマー・コンフィギュレーション・サービス"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:31
#, fuzzy
msgid "This service is for a customer to set up their own settings, e.g. desired level of prediction. This service is targeted for their managed customers and it was selected to be developed in Quarkus because it was low risk. From their perspective, if this service went down, there would be no major impact to customers. It was developed by 2 developers using Quarkus 0.20 in a single sprint (approximately 3 weeks) and they are planning to upgrade it to Quarkus v1.x. This service is currently running in native mode in production."
msgstr "このサービスは、顧客が希望する予測レベルなど、独自の設定を行うためのものです。このサービスは、同社の管理対象顧客を対象としており、Quarkusで開発することが選ばれたのは、リスクが低いからです。同社の観点では、このサービスが停止しても、顧客には大きな影響はありません。このサービスは、Quarkus 0.20を使用して、2人の開発者が1回のスプリント（約3週間）で開発し、Quarkus v1.xにアップグレードする予定です。"

#. type: Title ===
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:33
#, fuzzy
msgid "The Service Discovery service"
msgstr "サービスディスカバリーサービス"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:35
#, fuzzy
msgid "The Service Discovery service is used to allow automatic discovery between the microservices AVIATAR consist of. It is considered high risk because if it breaks down, it would have a major impact on customers. Also, the original version of this service ran in production as a highly available service in an application server, consuming a lot of cloud resources. The Quarkus version of this service has been running in native mode in Development for about 3 months with no problems and on January 18, 2020, it was deployed to production to replace the instance running on the application server. It should also be mentioned that this Quarkus service started in JVM mode because it was using MongoDB and there was no MongoDB client Quarkus extension when its development started. But as soon as the MongoDB client Quarkus extension became available, they were able to switch the entire service to native mode. This speaks to the fast innovation and new contributions that are part of the Quarkus open source community project."
msgstr "サービスディスカバリーサービスは、AVIATARが構成するマイクロサービス間の自動検出を可能にするために使用されます。万が一故障した場合、顧客に大きな影響を与えるため、高リスクとされています。また、このサービスのオリジナルバージョンは、アプリケーションサーバーの高可用性サービスとして本番稼働しており、多くのクラウドリソースを消費しています。このサービスのQuarkusバージョンは、約3ヶ月間、Developmentでネイティブモードで問題なく稼働しており、2020年1月18日に、アプリケーションサーバーで稼働していたインスタンスを置き換えるために本番環境にデプロイされました。なお、このQuarkusサービスは、MongoDBを使用しているため、開発開始時にはMongoDBクライアントのQuarkusエクステンションがなかったため、JVMモードで開始されたことを申し添えておきます。しかし、MongoDBクライアントQuarkusエクステンションが利用できるようになると、すぐにサービス全体をネイティブモードに切り替えることができたそうです。これは、Quarkusのオープンソースコミュニティプロジェクトの一部である、迅速なイノベーションと新しい貢献を物語っています。"

#. type: Title ==
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:37
#, fuzzy
msgid "Why not Spring Boot?"
msgstr "Spring Bootではダメなのか？"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:39
#, fuzzy
msgid "Lufthansa Technik sees Quarkus as a great fit in their journey to running their services in a serverless mode. They have many services that aren’t invoked that often but they still need to have 3 instances of each up and running all the time for high-availability requirements leading to high cloud resource consumption costs. They plan to turn these seldom accessed services to Function-as-a-service calls so that they can be invoked on demand leading to a reduction of cloud. If they were using Spring Boot, it would take too long to boot up, making it prohibitive to use in a serverless mode."
msgstr "Lufthansa Technikは、Quarkusがサーバーレスモードでサービスを実行する旅に最適であると見ています。同社には、それほど頻繁に呼び出されないサービスが多数ありますが、それでも高可用性要件のために、それぞれのインスタンスを常時3つずつ稼働させておく必要があり、クラウドリソースの消費コストが高くなります。このような滅多にアクセスされないサービスをFunction-as-a-Serviceコールにして、オンデマンドで呼び出せるようにし、クラウドを削減する計画です。Spring Bootを使用していた場合、起動に時間がかかりすぎるため、サーバーレスモードで使用することは不可能でした。"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:41
#, fuzzy
msgid "Likewise, they have experienced lower memory and compute cloud resource consumption when using Quarkus - plus its use of GraalVM - and according to Thorsten, _“with Quarkus, they could run 3 times denser deployments without sacrificing availability and response times of services”_, as the denser deployments come from the combination of the two technologies."
msgstr "同様に、QuarkusとGraalVMを使用することで、メモリとコンピュートクラウドリソースの消費量を削減することができました _。_"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:43
#, fuzzy
msgid "Their developers are Spring Boot developers with Java EE experience as well, so the learning curve for Quarkus was very small since its syntax and approach was _“close to what our developers are already doing and it’s familiar to them. This is a big benefit”_, Thorsten affirmed."
msgstr "彼らの開発者はJava EEの経験もあるSpring Bootの開発者なので、Quarkusの構文やアプローチは _「我々の開発者がすでにやっていることに近く、彼らにとって馴染みが_ ある」ため、学習曲線は非常に小さかったです。これは _大きな_ メリットです」と、Thorsten氏は断言する。"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:45
#, fuzzy
msgid "With respect to the recently introduced Spring API compatibility feature in Quarkus, Thorsten said that _“they may use the Spring API compatibility in Quarkus when migrating their current Spring Boot microservices to Quarkus. However, for developing new microservices, they plan to use just the Quarkus APIs directly because it would be awkward to use another API within Quarkus.”_"
msgstr "最近導入されたQuarkusのSpring API互換機能に関して、Thorsten氏は _「現在のSpring Bootマイクロ_ サービスをQuarkusに _移行する際には、QuarkusのSpring API互換機能を利用するかもしれません_ 。 _しかし、新しいマイクロサービスの開発には、QuarkusのAPIだけを直接使用する予定だ。\"Quarkus内で別のAPIを使用するのは厄介だからだ。_"

#. type: Title ==
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:48
#, fuzzy
msgid "The Quarkus Benefits"
msgstr "Quarkusのメリット"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:50
#, fuzzy
msgid "Among the many benefits that Quarkus provides to Lufthansa Technik, Thorsten mentioned that _“they could cut cloud resource costs threefold.\"_ And the same goes with OpenShift because of the higher density you can achieve on each core using Quarkus. For example, they had a microservice that was consuming ½ core plus 1 GB of RAM per instance, which required 1.5 cores and 3 GB of RAM when running it in HA on the cloud (3 instances). When using the Quarkus version of the same microservice, its consumption was of 200 millicores plus 200-400 MB of RAM per instance. This translates to 0.6 cores plus 600 MB – 1.2 GB of RAM for an HA deployment of 3 instances of the microservice _“. They could run 3 times denser deployments without sacrificing availability and response times of services”_, Thornsten reiterated. These are the types of optimizations that can only be achieved by the symbiotic combination of Quarkus and GraalVM."
msgstr "QuarkusがLufthansa Technikに提供する多くのメリットの中で、Thorsten氏は _\"クラウドリソースコストを3倍削減できる \"_ と述べています。また、OpenShiftでも同様で、Quarkusを使うことで各コアでより高い密度を実現できるためです。例えば、1インスタンスあたり1/2コア＋1GBのRAMを消費するマイクロサービスがあり、これをクラウド上でHA運用（3インスタンス）すると、1.5コア＋3GBのRAMが必要でした。同じマイクロサービスのQuarkusバージョンを使用した場合、その消費量は、インスタンスあたり200ミリコアと200～400MBのRAMでした。これは、3インスタンスのマイクロサービスをHA展開した場合、0.6コアと600MB～1.2GBのRAMに相当する _。サービスの可用性と応答時間を犠牲にすることなく、3倍の密度のデプロイメントを_ 実行することができます」とThornstenは繰り返し述べた。このような最適化は、QuarkusとGraalVMの共生によってのみ達成できるものです。"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:52
#, fuzzy
msgid ""
"Thorsten also described Quarkus live coding capabilities as a _“really good thing”_. Many of their applications have web-based user interfaces and _“making changes and reloading pages instantaneously is a great feature”_, Thorsten affirmed.\n"
"Another benefit, already mentioned earlier, was the small Quarkus learning curve experienced by their developers, who are Spring Boot developers with Java EE experience. What makes this possible is the stack of technologies included in Quarkus, composed of best-of-breed and familiar technologies for Kubernetes-native microservices. Some of the Quarkus extensions used by the AVIATAR developers are: Java Web Token (JWT), JAX-RS, MongoDB client, MicroProfile Rest Client, Keycloak (security), Hibernate ORM (for relational databases), MicroProfile Metrics, and MicroProfile Health Check."
msgstr "また、Thorsten氏は、Quarkusのライブコーディング機能を _「本当に良いもの_ 」と評価しています。同社のアプリケーションの多くはウェブベースのユーザーインターフェイスを備えており、 _「変更とページの再読み込みを瞬時に行うことは素晴らしい機能です_ 」とThorsten氏は断言します。もう1つの利点は、すでに述べたように、Java EEの経験を持つSpring Bootの開発者である同社の開発者が経験するQuarkusの学習曲線が小さいということです。これを可能にしているのは、Quarkusに含まれる技術のスタックで、Kubernetesネイティブなマイクロサービスのためのベストオブブリードと馴染みのある技術で構成されていることです。AVIATARの開発者が使用したQuarkusのエクステンションをいくつか紹介します：Java Web Token（JWT）、JAX-RS、MongoDBクライアント、MicroProfile Rest Client、Keycloak（セキュリティ）、Hibernate ORM（リレーショナルデータベース用）、MicroProfile Metrics、MicroProfile Health Check。"

#. type: Title ==
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:55
#, fuzzy
msgid "Looking into the future"
msgstr "未来を見据えて"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:57
#, fuzzy
msgid "They plan to use Quarkus for the development of new services per the guidance of their Technology Council. In general, for new services they’d like to first work on the ones that are low or no risk to customers. They also plan to upgrade their Service Discovery service to Quarkus v1.x and deploy it to production, which actually took place on January 18, 2020. Lastly, they will use the Quarkus APIs directly and for migrating Spring Boot services to Quarkus, they may leverage the Quarkus Spring API compatibility feature."
msgstr "技術評議会の指導のもと、新サービスの開発にQuarkusを利用する予定だそうです。一般的に、新しいサービスについては、まず顧客に対するリスクが低いか、ないものに取り組みたいと考えているそうです。また、Service DiscoveryサービスをQuarkus v1.xにアップグレードし、本番環境に導入する予定であり、実際には2020年1月18日に実施された。最後に、QuarkusのAPIを直接利用し、Spring BootのサービスをQuarkusに移行する際には、Quarkus Spring API互換機能を活用することもあるそうです。"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:59
#, fuzzy
msgid "They look forward to continuing to optimize their cloud resource consumption by using the Quarkus stack in their services."
msgstr "今後もQuarkusスタックをサービスに活用することで、クラウドのリソース消費を最適化することを期待しているとのことです。"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:61
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "Quarkusの詳細については、こちらをご覧ください："

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:63
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "link:http://quarkus.io[Quarkusの] サイト link:http://quarkus.io[：http://quarkus.io]"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:64
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "link:https://github.com/quarkusio/quarkus[Quarkus] GitHubプロジェクト: https: link:https://github.com/quarkusio/quarkus[//github.com/quarkusio/quarkus]"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:65
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "link:https://twitter.com/QuarkusIO[Quarkus] Twitter: https: link:https://twitter.com/QuarkusIO[//twitter.com/QuarkusIO]"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:66
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "link:https://quarkusio.zulipchat.com/[Quarkus] チャット： https://quarkusio.zulipchat.com/"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:67
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Quarkusメーリングリスト: https: link:https://groups.google.com/forum/#!forum/quarkus-dev[//groups.google.com/forum/#!forum/quarkus-dev]"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:68
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[Quarkus YouTubeチャンネル]"

#. type: Plain Text
#: upstream/_posts/2020-02-17-aviatar-experiences-significant-savings.adoc:69
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Quarkusを使用する4つの理由]"
