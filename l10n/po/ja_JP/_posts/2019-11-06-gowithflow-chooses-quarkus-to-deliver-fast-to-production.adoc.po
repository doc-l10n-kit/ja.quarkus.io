msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:2
msgid "post"
msgstr "post"

#. type: Title =
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:10
#, fuzzy
msgid "GoWithFlow chooses Quarkus to deliver fast to production with minimal risk"
msgstr "GoWithFlow、Quarkusを採用し、最小限のリスクで迅速な生産開始を実現。"

#. type: YAML Front Matter
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:4
#, fuzzy
msgid "2019-11-06"
msgstr "2019-11-06"

#. type: YAML Front Matter
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:5
msgid "user-story"
msgstr "user-story"

#. type: YAML Front Matter
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:6
#, fuzzy
msgid "cesarsaavedra"
msgstr "セサルサアベドラ"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:15
#, fuzzy
msgid "GoWithFlow, a recent startup based out of Portugal, a spin-off from https://www.ceiia.com/[CEiiA] with https://www.galp.com/corp/en/[Galp] as a majority shareholder, provides integrated mobility solutions that can both provision end-to-end services to new mobility operators (eg. running a scooter-sharing network, managing an EV charging network, managing a fleet), but also gather data from other mobility operators, e.g.car-sharing operators, public transportation, etc, and thus provide a single access to mobility within a city. They consolidate all this data for consumption by citizens via their mobile phone apps that can help them locate the closest shared vehicle, or the most optimal way to get from point A to point B using multiple transportation options, for example."
msgstr "GoWithFlowは、ポルトガルを拠点とする新興企業で、 link:https://www.ceiia.com/[CEiiAから] スピンオフし、 link:https://www.galp.com/corp/en/[Galpを] 大株主とする。統合モビリティソリューションは、新しいモビリティ事業者にエンドツーエンドサービス（スクーター共有ネットワークの運営、EV充電ネットワークの管理、車両管理など）を提供できるほか、カー共有事業者、公共交通など他のモビリティ事業者からデータを集め、都市内の移動に単一アクセスできるようにした。これらのデータを集約し、市民が携帯電話のアプリで利用できるようにすることで、例えば、最も近いシェアカーを探したり、複数の交通手段を使ってA地点からB地点まで移動するための最適な方法を見つけることができるようになります。"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:17
#, fuzzy
msgid "They had a monolithic application server to support all their apps and their developers were experiencing 2 to 3-minutes deploy cycles to test any change made to the code. In addition, it was taking them 2 to 3 months to go to production every time there was a change, no matter how small it was, which required them to deploy the entire system - even parts that had not been modified at all - making the whole process highly risky."
msgstr "同社では、すべてのアプリケーションをサポートするためにモノリシックなアプリケーションサーバーを使用しており、開発者はコードに加えられた変更をテストするために2～3分のデプロイサイクルを経験していました。さらに、どんなに小さな変更であっても、その都度本番環境に移行するのに2～3ヶ月かかり、システム全体（全く変更されていない部分まで）をデプロイする必要があったため、プロセス全体が非常にリスキーになっていました。"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:19
#, fuzzy
msgid "GoWithFlow is in the process of moving their workloads to containers on the cloud so cloud resource consumption costs are always top-of-mind and they are always trying to find better ways to optimize memory and compute usage on the cloud."
msgstr "GoWithFlowは、ワークロードをクラウド上のコンテナに移行する過程にあるため、クラウドのリソース消費コストは常に最重要課題であり、クラウド上のメモリとコンピュート使用を最適化する優れた方法を常に探そうとしています。"

#. type: Title ==
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:21
#, fuzzy
msgid "Lower cloud resource consumption"
msgstr "クラウドリソース消費量の低減"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:23
#, fuzzy
msgid "When Raul Valdoleiros, Architect and DevOps Leader at GoWithFlow, first heard of Quarkus, he was extremely interested in its capabilities and features. They looked at other similar solutions in the market but after evaluating Quarkus, they decided to move forward with it. In comparing it with their existing monolithic solution, they realized the enormous memory savings introduced by Quarkus, 79% reduction in memory consumption under load, to be exact. The following table shows the results of their evaluation:"
msgstr "GoWithFlowのアーキテクト兼DevOpsリーダーであるRaul Valdoleirosは、Quarkusを初めて聞いたとき、その能力と特徴に非常に興味を持ちました。市場にある他の類似のソリューションも検討しましたが、Quarkusを評価した結果、Quarkusを進めることにしました。既存のモノリシックなソリューションと比較したところ、Quarkusが導入したメモリ消費量の大幅な削減を実感し、正確には、負荷時のメモリ消費量を79%削減することができました。次の表は、彼らの評価結果を示しています："

#. type: Title ==
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:25
#, fuzzy
msgid "Evaluation results"
msgstr "評価結果"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:27
#, fuzzy
msgid "Runtime mode"
msgstr "ランタイムモード"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:27
#, fuzzy
msgid "RAM at startup"
msgstr "起動時RAM"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:27
#, fuzzy
msgid "RAM with load"
msgstr "負荷付きRAM"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:29
#, fuzzy
msgid "Monolith"
msgstr "モノリス"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:30
#, fuzzy
msgid "1.3 GB"
msgstr "1.3 GB"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:31
#, fuzzy
msgid "1.5 GB"
msgstr "1.5 GB"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:33
#, fuzzy
msgid "Quarkus JVM-mode"
msgstr "Quarkus JVM-mode。"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:34
#, fuzzy
msgid "90 MB"
msgstr "90 MB"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:35
#, fuzzy
msgid "800 MB"
msgstr "800 MB"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:37
#, fuzzy
msgid "Quarkus native-mode"
msgstr "Quarkusネイティブモード"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:38
#, fuzzy
msgid "11 MB"
msgstr "11 MB"

#. type: Table
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:39
#, fuzzy
msgid "320 MB"
msgstr "320 MB"

#. type: Title ==
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:42
#, fuzzy
msgid "Rich functionality with small learning curve"
msgstr "豊富な機能、少ない学習曲線"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:44
#, fuzzy
msgid "Besides its low memory consumption and lightning fast startup time, GoWithFlow selected Quarkus because of the rich set of frameworks, extensions, and rich functionality included with it. Raul describes Quarkus as _\"an incredible integration project that includes functionality, like MicroProfile, Vert.x, Kafka, and Keycloak, and many others.\"_"
msgstr "GoWithFlowがQuarkusを選んだ理由は、メモリ消費量の少なさと起動時間の速さに加えて、フレームワーク、エクステンション、豊富な機能のセットが含まれていることでした。RaulはQuarkusを _「MicroProfile、_ Vert.x _、Kafka、Keycloakなどの機能を含む、信じられないほどの統合プロジェクト_ 」と表現しています。"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:46
#, fuzzy
msgid "Because Quarkus extensions are composed of frameworks and functionality that GoWithFlow developers already knew, it was very easy for them to learn and quickly become productive. Although Quarkus introduces innovative technology for running Java on the cloud and containers, developers found it familiar and were able to pick it up with a small learning curve because all its extensions were familiar to them. Nevertheless, they did spend some time familiarizing themselves with aspects related to native images and features for which Quarkus did not yet have extensions."
msgstr "Quarkusのエクステンションは、GoWithFlowの開発者がすでに知っているフレームワークや機能で構成されているため、開発者は非常に簡単に学習でき、すぐに生産性を上げることができました。Quarkusは、クラウドやコンテナ上でJavaを実行するための革新的な技術を導入していますが、開発者にとっては、すべてのエクステンションが身近なものであったため、少ない学習曲線で手に入れることができたのです。しかし、ネイティブイメージに関連する部分や、Quarkusにまだエクステンションがない機能については、慣れるまでに時間がかかりました。"

#. type: Title ==
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:48
#, fuzzy
msgid "The prototype"
msgstr "プロトタイプ"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:50
#, fuzzy
msgid "Once GoWithFlow selected Quarkus for Java development, they started a prototype project, which consisted of the implementation of 4 microservices. Using the Quarkus built-in testing harness, developers implemented automated tests, which are run during build time in both JVM and native modes. They also optimized the pipeline processes to avoid any human intervention during the deployment to production, where the microservices run in native mode. Integration testing consists of launching the application and testing the entire system through the web interface, which invokes the Quarkus microservices. All this work was accomplished by 3 developers from their Architecture team and GoWithFlow is very happy with what they have accomplished so far."
msgstr "GoWithFlowは、Java開発にQuarkusを選択すると、4つのマイクロサービスの実装で構成されるプロトタイププロジェクトを開始しました。Quarkusの組み込みテストハーネスを使用して、開発者は自動テストを実装し、JVMとネイティブの両方のモードでビルド時に実行されました。また、マイクロサービスがネイティブモードで実行される本番環境へのデプロイ時に、人手を介さないようにパイプラインプロセスを最適化しました。統合テストは、アプリケーションを起動し、Quarkusマイクロサービスを呼び出すWebインターフェイスを通じてシステム全体をテストするものです。この作業はすべて、同社のアーキテクチャチームの3人の開発者によって達成され、GoWithFlowはこれまでに達成されたことに非常に満足しています。"

#. type: Title ==
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:52
msgid "Developer Productivity"
msgstr "開発者生産性"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:54
#, fuzzy
msgid "GoWithFlow had been running their application in a monolithic application server. This meant that they had to roll out the entire application to production even if a small change had been applied to it. Besides being time consuming with releases taking 2 to 3 months, they felt that this was risky because they had to constantly release code that hadn’t been modified. In addition, developers had to wait 2 to 3 minutes to see their changes while they waited for the deployment of their changes to the application server. These lengthened the development process, which negatively impacted developer productivity and their ability to innovate and stay ahead of the competition. They worked on speeding up their development process and a key element that helped them accomplish this was the container-first approach of Quarkus. Now, they no longer have to wait months for production releases. In addition, developers can now use Quarkus live coding capabilities to test their source code changes immediately, which saves a lot of development and troubleshooting time, as described by Raul _“live coding is one of Quarkus best features if not the best one.”_"
msgstr "GoWithFlowは、モノリシックなアプリケーションサーバーでアプリケーションを実行していました。そのため、小さな変更があった場合でも、アプリケーション全体を本番環境にロールアウトしなければなりませんでした。リリースには2〜3ヶ月かかるため時間がかかるだけでなく、変更されていないコードを常にリリースしなければならないため、リスクが高いと感じたそうです。さらに、アプリケーションサーバーへのデプロイを待つ間、開発者は自分の変更点を確認するために2〜3分待たなければならなかった。これらは開発プロセスを長期化させ、開発者の生産性、革新的で競合他社に先駆ける能力に悪影響を及ぼしました。そこで、開発プロセスのスピードアップに取り組み、それを実現するための重要な要素が、Quarkusのコンテナファーストのアプローチでした。現在では、本番リリースまで数ヶ月待つ必要はなくなりました。さらに、開発者は _Quarkusの_ ライブコーディング機能を使って、ソースコードの変更を即座にテストできるようになり、開発とトラブルシューティングの時間を大幅に節約できるようになりました。"

#. type: Title ==
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:56
#, fuzzy
msgid "Future plans"
msgstr "今後の予定"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:58
#, fuzzy
msgid "GoWithFlow currently delivers every week to production and are working on optimizing their development process with the goal of achieving continuous deployment in the future. As part of this work, they also plan to continue to break their monolith into Quarkus-based microservices by having the entire development team dedicated to this effort, a total of 10 developers. This team will also continue to develop new functionality in Quarkus."
msgstr "GoWithFlowは現在、毎週本番環境に配信しており、将来的には継続的なデプロイを実現することを目標に、開発プロセスの最適化に取り組んでいます。この作業の一環として、彼らはまた、開発チーム全体、合計10人の開発者がこの取り組みに専念することで、モノリスをQuarkusベースのマイクロサービスに分解し続けることを計画しています。このチームは、Quarkusの新機能の開発も継続する予定です。"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:60
#, fuzzy
msgid "_\"Quarkus including MicroProfile was very important to us\"_ Raul mentions when referring to their use of MicroProfile Health, MicroProfile Config, MicroProfile Fault Tolerance and MicroProfile Rest Client extensions. In the future, they plan to use MicroProfile OpenTracing to visualize requests that traverse different microservices and this is a key functionality to them."
msgstr "Raul氏は、MicroProfile Health、MicroProfile Config、MicroProfile Fault Tolerance、MicroProfile Rest Clientエクステンションの使用について、 _「MicroProfileを含む_ Quarkusは _我々にとって非常に重要_ でした」と述べています。将来的には、MicroProfile OpenTracingを使用して、異なるマイクロサービスを横断するリクエストを可視化する予定であり、これは彼らにとって重要な機能である。"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:62
#, fuzzy
msgid "GoWithFlow is happy with what they have accomplished so far with Quarkus running in production in native mode and continue to collaborate with the community to foster its innovation."
msgstr "GoWithFlowは、Quarkusがネイティブモードで本番稼働することでこれまでに達成したことに満足しており、今後もコミュニティと協力してそのイノベーションを育んでいきます。"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:64
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "Quarkusの詳細については、こちらをご覧ください："

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:66
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "link:http://quarkus.io[Quarkusの] サイト link:http://quarkus.io[：http://quarkus.io]"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:67
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "link:https://github.com/quarkusio/quarkus[Quarkus] GitHubプロジェクト: https: link:https://github.com/quarkusio/quarkus[//github.com/quarkusio/quarkus]"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:68
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "link:https://twitter.com/QuarkusIO[Quarkus] Twitter: https: link:https://twitter.com/QuarkusIO[//twitter.com/QuarkusIO]"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:69
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "link:https://quarkusio.zulipchat.com/[Quarkus] チャット： https://quarkusio.zulipchat.com/"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:70
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Quarkusメーリングリスト: https: link:https://groups.google.com/forum/#!forum/quarkus-dev[//groups.google.com/forum/#!forum/quarkus-dev]"

#. type: Plain Text
#: upstream/_posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc:71
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Quarkusを使用する4つの理由]"
