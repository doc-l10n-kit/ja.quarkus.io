msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:2
msgid "post"
msgstr "post"

#. type: Title =
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:10
#, fuzzy
msgid "Vodafone Greece replaces Spring Boot with Quarkus"
msgstr "Vodafone Greece、Spring BootをQuarkusに置き換える。"

#. type: YAML Front Matter
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:4
#, fuzzy
msgid "2019-11-13"
msgstr "2019-11-13"

#. type: YAML Front Matter
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:5
msgid "user-story"
msgstr "user-story"

#. type: YAML Front Matter
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:6
#, fuzzy
msgid "cesarsaavedra"
msgstr "セサルサアベドラ"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:15
#, fuzzy
msgid "Vodafone Greece is the second largest telecommunications company in Greece providing fixed and wireless phone service to over 6M subscribers."
msgstr "ボーダフォン・ギリシャは、ギリシャで2番目に大きい通信会社で、600万人以上の加入者に固定電話および無線電話サービスを提供しています。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:17
#, fuzzy
msgid "Vodafone Greece runs many applications on-premise and on the cloud so cloud resource consumption costs are extremely important to them. One component of their architecture is the Digital eXperience Layer (DXL), a Kubernetes-based software, which serves as a middleware between the Vodafone's Core Systems (SOAP-based communication) and the clients (Web/Mobile) by providing an easily consumable REST API based on the TMF specification (https://www.tmforum.org/). Its goal is to become the backbone of Vodafone's Digital Service for years to come. Its components leverage technologies such as MongoDB, Kafka Streams, and Redis to improve the responsiveness of older services by more than 800%, while at the same time transforming them to REST-friendly universal APIs. The DXL is implemented using Spring Boot and runs entirely on the cloud and they had been experiencing heavy memory resource consumption and long boot-up times, so they started to look for ways to reduce these."
msgstr "Vodafone Greeceは、多くのアプリケーションをオンプレミスとクラウド上で運用しているため、クラウドのリソース消費コストは非常に重要です。KubernetesベースのソフトウェアであるDigital eXperience Layer（DXL）は、TMF仕様 link:https://www.tmforum.org/[（https://www.tmforum.org/] ）に基づく消費しやすいREST APIを提供することにより、ボーダフォンのコアシステム（SOAPベースの通信）とクライアント（Web/モバイル）間のミドルウェアとして機能する。その目標は、今後何年にもわたってボーダフォンのデジタルサービスのバックボーンとなることです。そのコンポーネントは、MongoDB、Kafka Streams、Redisなどの技術を活用し、旧来のサービスの応答性を800%以上向上させると同時に、RESTフレンドリーなユニバーサルAPIに変換しています。DXLはSpring Bootを使って実装され、すべてクラウド上で動作していますが、メモリリソースの消費が激しく、起動時間も長いため、これらを削減する方法を検討し始めたそうです。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:19
#, fuzzy
msgid "Another key area of concern to Vodafone Greece was the long application start-up times, and although Vodafone Greece could have allocated more cloud resources to the DXL to improve boot-up times, this would have meant higher cloud costs. So they set out to find ways to optimize the DXL so that it would consume less cloud resources."
msgstr "ボーダフォン・ギリシャが懸念していたもう一つの重要な領域は、アプリケーションの起動時間が長いことでした。ボーダフォン・ギリシャは、起動時間を改善するためにDXLに多くのクラウドリソースを割り当てることができましたが、それはクラウドコストの上昇を意味しました。そこで、DXLを最適化し、より少ないクラウドリソースを消費する方法を模索することになりました。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:21
#, fuzzy
msgid "Beside the DXL, Vodafone Greece runs a large portion of their microservices using Spring Boot. At present, 80% of the microservices they run in development and production are based on Spring Boot but they also have 4 Node.js microservices in the mix."
msgstr "DXLの他に、Vodafone Greeceはマイクロサービスの大部分をSpring Bootで動かしています。現在、同社が開発・運用するマイクロサービスの80%はSpring Bootをベースにしているが、4つのNode.jsのマイクロサービスも混在している。"

#. type: Title ==
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:23
#, fuzzy
msgid "How they selected Quarkus"
msgstr "Quarkusの選定方法について"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:25
#, fuzzy
msgid "The main criteria for their selection process to find a replacement for Spring Boot were developer efficiency, lower cloud resource consumption and shorter applications boot-up times. They considered the latter to be of great impact on cloud resource consumption costs as well as user experience improvement."
msgstr "Spring Bootの代替となるアプリケーションの選定にあたっては、開発者の効率化、クラウドリソース消費の低減、アプリケーションの起動時間の短縮を主な条件としました。後者は、ユーザーエクスペリエンスの向上だけでなく、クラウドリソース消費コストにも大きな影響を与えると考えたそうです。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:27
#, fuzzy
msgid "They looked and evaluated other technologies and frameworks, such as other natively-compilable frameworks, Node.js and Vert.x. They decided that Node.js would not be a good option for them because of the burden that they would put on their Java developers to learn and migrate Java applications to Javascript. Some frameworks didn’t make the cut either because of their desire for big solid backers and sponsors. Another native-compilable framework wasn’t selected because it would fail to compile the MongoDB driver - using the MongoDB driver in native mode was not supported at that time and there was no way to skip the portions of MongoDB driver that would not compile to native. They nearly selected Vert.x because of its excellent context propagation capabilities and its outstanding performance. However, when they learned about Quarkus in April of 2019, and that it included Vert.x in its stack and provided memory and start-up time optimizations, they decided to go with Quarkus. According to Christos Sotiriou, DXL technical lead at Vodafone Greece, Quarkus _“seemed to provide the performance boost we needed while at the same time having a good backer (Red Hat) and relying on battle-tested technologies”_. In June 2019, Vodafone Greece had its first successful microservices deployment that relied on a limited set of their rewritten common libraries in Quarkus."
msgstr "ネイティブコンパイル可能なフレームワーク、Node.js、Vert.xなど、他の技術やフレームワークを検討・評価した結果、Node.jsはJava開発者にJavaアプリケーションの学習とJavascriptへの移行を負担させるという理由で、良い選択肢とは言えないと判断しました。また、大口の支援者やスポンサーが欲しいという理由で、候補から外れたフレームワークもありました。MongoDBドライバをネイティブモードで使用することは当時サポートされておらず、ネイティブにコンパイルされないMongoDBドライバの部分をスキップする方法がなかったからです。Vert.xを選択しそうになったのは、優れたコンテキスト伝搬機能とその優れたパフォーマンスが理由だったそうです。しかし、2019年4月にQuarkusの存在を知り、Vert.xをスタックに含め、メモリや起動時間の最適化を提供していることを知り、Quarkusを採用することにしたのです。Vodafone GreeceのDXL技術リードであるChristos Sotiriou氏によると、Quarkusは _「我々が必要とするパフォーマンス向上を提供すると同時に、良い後援者（Red Hat）を持ち、実戦的な技術に依存していると思われた」_ 。2019年6月、Vodafone Greeceは、Quarkusで書き換えた同社の共通ライブラリの限定セットに依存するマイクロサービスの展開を初めて成功させました。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:29
#, fuzzy
msgid "Another reason Quarkus was selected over competing technologies was the ability for developers to write their own extensions. In addition, the project’s high activity characteristics, such as number of community members, project stars, quick turnaround to replies and fixes by Quarkus developers to community issues, and number of Red Hat developers thoroughly answering technical questions via the project communication channels were positive indicators for them to select Quarkus. Lastly, their trust of Red Hat combined with its credibility in the software market gave them the assurance that they were making the right choice by selecting Quarkus, whose sponsor is Red Hat."
msgstr "競合する技術ではなくQuarkusが選ばれたもう一つの理由は、開発者が独自のエクステンションを書くことができる点でした。さらに、コミュニティメンバーの数、プロジェクトのスター数、コミュニティの問題に対するQuarkus開発者の返信や修正への迅速な対応、プロジェクトのコミュニケーションチャネルを通じて技術的な質問に徹底的に答えるRed Hat開発者の数など、プロジェクトの高い活動特性も、Quarkusを選択するためのポジティブな指標となりました。最後に、Red Hatへの信頼とソフトウェア市場における信頼が、Red HatをスポンサーとするQuarkusを選択することで、正しい選択であるとの確信を与えてくれました。"

#. type: Title ==
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:31
#, fuzzy
msgid "The solution"
msgstr "解決策"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:33
#, fuzzy
msgid "Once they decided on the path forward, Vodafone Greece first started migrating their common internal libraries from Spring Boot to Quarkus. Their common libraries cover cross-cutting concerns, such as:"
msgstr "進むべき道が決まると、Vodafone Greeceはまず、内部共通ライブラリのSpring BootからQuarkusへの移行を開始しました。共通ライブラリは、次のような横断的な問題をカバーしています："

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:35
msgid "Logging"
msgstr "ロギング"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:36
msgid "Security"
msgstr "セキュリティー"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:37
#, fuzzy
msgid "DB connectivity"
msgstr "DBコネクティビティ"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:38
#, fuzzy
msgid "Kafka connectivity"
msgstr "Kafkaコネクティビティ"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:39
#, fuzzy
msgid "Distributed logging"
msgstr "分散型ロギング"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:41
#, fuzzy
msgid "According to Christos, _“implementing distributed logging would have been very difficult to accomplish with Spring Boot, whereas with Quarkus, creating this new common library was viable and feasible. The methodology of setting up header propagation and perform actions on a microservice’s inbound-outbound requests in Quarkus allows for better reusability compared to Spring Boot, at least in our use cases, and allowed us to have a simpler setup for this for our cross-country team”_."
msgstr "Christos氏は、 _「分散ロギングの実装はSpring Bootでは非常に困難でしたが、_ Quarkusでは、 _この新しい共通ライブラリの作成が実行可能で実現可能_ でした」と述べています。 _Quarkusでヘッダープロパゲーションを設定し、マイクロサービスのインバウンド・アウトバウンドのリクエストに対してアクションを実行する方法は、少なくとも私たちの使用例では、Spring Bootに比べて再利用性が高く、国をまたがるチームでこの設定をよりシンプルに_ 行うことができました」と述べています。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:43
#, fuzzy
msgid "As of today, they have about 15 Quarkus microservices, 5 of which went into production at the end of September 2019. With respect to effort, 2 developers were dedicated to work on these first 5 microservices that are now in production running in JVM mode. Presently, their team is working on delivering 20 microservices in the next 3 months. It is worth mentioning that, in their experience, it was very easy for their Spring developers to pick up the Quarkus Java stack because _“migrating from Spring Boot to a CDI-based framework didn’t require a lot of effort”_, as per Christos."
msgstr "今日現在、彼らは約15のQuarkusマイクロサービスを持っており、そのうちの5つは2019年9月末に本番稼動した。労力に関しては、2人の開発者が、JVMモードで動作する本番稼働中のこれら最初の5つのマイクロサービスに取り組むために専念していました。現在、彼らのチームは、今後3カ月で20のマイクロサービスを提供するために取り組んでいます。Christos氏は、「 _Spring BootからCDIベースのフレームワークに移行するのに多くの労力を必要と_ しなかった」と述べています。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:45
#, fuzzy
msgid "Although Quarkus includes Spring API compatibility, Vodafone Greece has no plans to use it because _“it doesn’t make sense to mix the two programming models in a microservice”_ according to Christos. In order to keep the code clean, Vodafone Greece is _“using only Quarkus constructs without muddying the waters with Spring syntax”_ as specified by Christos. For their requirements, the Quarkus stack already offers everything they need, so there is no need for any Spring Boot at all."
msgstr "QuarkusにはSpring APIとの互換性がありますが、Christos氏によると「 _マイクロサービスにおいて2つのプログラミングモデルを混在させるのは意味が_ ない」ため、Vodafone Greeceでは使用する予定はないそうです。コードをきれいに保つために、Vodafone Greeceは、Christos氏が指定したように _「Springの構文でお茶を濁すことなく_ 、Quarkus _の構成要素のみを使用_ 」しています。彼らの要件では、Quarkusスタックがすでに必要なものをすべて提供しているので、Spring Bootはまったく必要ありません。"

#. type: Title ==
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:47
#, fuzzy
msgid "The benefits"
msgstr "そのメリット"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:49
#, fuzzy
msgid "Vodafone Greece has seen many benefits using Quarkus. One of them is that memory resource consumption was cut in half in JVM mode. In addition, start-up times have been reduced to almost a quarter without any optimization. It is worth mentioning that many of these microservices are complex in that they _“have a lot of Kafka and database connections”_ as described by Christos."
msgstr "Vodafone Greeceは、Quarkusを使用して多くのメリットを実感しています。その1つが、JVMモードでメモリリソースの消費量が半分になったことです。さらに、最適化しなくても起動時間がほぼ4分の1に短縮されました。Christos氏が語るように、これらのマイクロサービスの多くは _「Kafkaとデータベース接続が_ 多い」という点で複雑であることは特筆に値する。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:51
#, fuzzy
msgid "Their logging system, which uses Kafka, utilizes a lot of memory because it handles messages that are large in size and transforms them to JSON. As an example, some microservices required 1 GB of RAM when using Spring Boot. In comparison, for production they can now deploy a Quarkus microservice with 512 MB of RAM. _“For 80 microservices, this is big savings!”_ Christos emphasized and added that _“what Quarkus offers by default (without trying to optimize it) is 50%-60% more lightweight (in JVM mode) that what Spring offers after optimizations (taking care of dependencies, playing with JVM options, etc)”_. With respect to start-up time, a significant portion of it is spent waiting for message brokers and databases to accept connections, which was making Spring Boot microservices boot up in about 50 seconds. But with Quarkus microservices, boot up in less than a quarter of that time (14 seconds)."
msgstr "Kafkaを使用した同社のロギングシステムは、サイズの大きなメッセージを処理し、JSONに変換するため、多くのメモリを使用しています。例えば、Spring Bootを使用する場合、いくつかのマイクロサービスでは1GBのRAMが必要でした。これに対し、本番環境では512MBのRAMでQuarkusのマイクロサービスをデプロイできるようになった。 _「80のマイクロサービスにとって、これは大きな節約です。_ Quarkusが _デフォルトで提供するものは（最適化を試みなくても）、最適化後のSpringが提供するもの（依存関係の管理、JVMオプションの調整など）よりも50～60％軽量_ です」とChristosは強調し、次のように付け加えた。起動時間に関しては、そのかなりの部分がメッセージブローカーやデータベースが接続を受け付けるのを待つのに費やされており、Spring Bootのマイクロサービスを約50秒で起動させていた。しかし、Quarkusのマイクロサービスでは、その4分の1以下の時間（14秒）で起動することができます。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:53
#, fuzzy
msgid "The large magnitude of the developer efficiency benefit they experienced was unexpected and a pleasant surprise. First, they realized that migrating from Spring Boot to a CDI-based framework didn’t require a lot of effort for their Spring developers, resulting in a small learning curve. Second, the use of the Quarkus live coding capability (a.k.a. dev mode) resulted in an increase of developer productivity, which Christos described as _“a very good thing to have”_. For example, each development cycle consists of 1 to 2 sprints (1 sprint = 2-week period) depending on the complexity of the logic being developed, and with Quarkus they saw a _“30 to 40% better developer productivity vis-a-vis Spring Boot, and this is for an ex-Spring Boot developer”_, according to Christos."
msgstr "彼らが経験した開発者効率化のメリットの大きさは、予想外のものであり、嬉しい驚きでした。まず、Spring BootからCDIベースのフレームワークへの移行は、Spring開発者にとって大きな労力を必要としないため、学習曲線が小さくて済むことがわかったという。次に、Quarkusのライブコーディング機能（別名：開発モード）を使用することで、開発者の生産性が向上したことである _。_ 例えば、各開発サイクルは、開発するロジックの複雑さに応じて1～2スプリント（1スプリント＝2週間）で構成されますが、Quarkusを使用すると、 _「Spring Bootに対して30～40％開発者の生産_ 性が向上した。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:55
#, fuzzy
msgid "Another Quarkus feature that impressed them was the effectiveness of the way Quarkus uses enterprise Java, e.g. the concise way to use CDI in combination with context propagation for asynchronous methods. It’s not uncommon for a microservice to make calls to other microservices to then aggregate the returned information by other microservices and this worked with Quarkus effortlessly, via the MicroProfile Context Propagation and MicroProfile Reactive Messaging extensions. In fact, _“MicroProfile is a good reason why we like Quarkus as a development tool”_ stated Christos."
msgstr "Quarkusのもう一つの特徴は、QuarkusがエンタープライズJavaを使用する方法の有効性です。例えば、非同期メソッドのコンテキストプロパゲーションと組み合わせてCDIを使用する簡潔な方法などです。マイクロサービスが他のマイクロサービスを呼び出し、他のマイクロサービスから返された情報を集約することは珍しくありませんが、これはMicroProfile Context PropagationとMicroProfile Reactive Messagingエクステンションによって、Quarkusで難なく動作しました。実際、 _「MicroProfileは、私たちが_ Quarkus _を開発ツールとして気に入っている良い理由_ です」とChristos氏は述べています。"

#. type: Title ==
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:57
msgid "What's next"
msgstr "次のステップ"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:59
#, fuzzy
msgid "As far as next steps, the number of microservices Vodafone Greece has now only covers a small fraction of what they intend to do. They want to double what they have now, in other words, double the number of microservices and the number of developers dedicated to this initiative. To this end, they plan to release 20 Quarkus microservices in the next three months. According to Christos, as they grow, _“orchestration and developer productivity will become even more important for the resources they consume”_."
msgstr "次のステップとしては、ボーダフォン・ギリシャが現在持っているマイクロサービスの数は、これからやろうとしていることのほんの一部にすぎません。つまり、マイクロサービスの数を倍増させ、この取り組みに専念する開発者の数も倍増させたいと考えています。そのために、今後3ヶ月で20のQuarkusマイクロサービスをリリースする予定だという。Christos氏によると、彼らが成長するにつれ、 _「オーケストレーションと開発者の生産性は、消費するリソースに対してさらに重要に_ なる」という。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:61
#, fuzzy
msgid "Presently, they run Quarkus in JVM mode when interfacing to MongoDB but they are considering using native compilation with MongoDB in the future. When Vodafone Greece started using Quarkus a few months ago, it didn’t include an extension for MongoDB but Quarkus does include a MongoDB client extension now that they could leverage. In addition, they plan to use more Quarkus extensions, like circuit breakers from MicroProfile Fault Tolerance, and more broadly adopt MicroProfile reactive messaging specifications."
msgstr "現在、QuarkusはMongoDBと連携する際にJVMモードで実行していますが、将来的にはMongoDBでネイティブコンパイルを使用することも検討しているそうです。Vodafone Greeceが数ヶ月前にQuarkusを使い始めたときには、MongoDB用のエクステンションは含まれていませんでしたが、QuarkusにはMongoDBクライアントエクステンションが含まれているので、これを利用することができます。さらに、MicroProfile Fault Toleranceのサーキットブレーカーなど、より多くのQuarkusエクステンションを使用し、MicroProfileのリアクティブメッセージング仕様をより広範囲に採用する予定だそうです。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:63
#, fuzzy
msgid "Furthermore, notwithstanding that with Quarkus, they have already cut their memory consumption and start-up times in more than half running it in JVM mode, they plan to run their Quarkus microservices in native mode in the future to get even better memory consumption and start-up times."
msgstr "さらに、Quarkusでは、JVMモードで動作させることでメモリ消費量と起動時間をすでに半分以下に抑えているにもかかわらず、将来的にはQuarkusのマイクロサービスをネイティブモードで動作させて、メモリ消費量と起動時間をさらに改善する予定だそうです。"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:65
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "Quarkusの詳細については、こちらをご覧ください："

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:67
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "link:http://quarkus.io[Quarkusの] サイト link:http://quarkus.io[：http://quarkus.io]"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:68
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "link:https://github.com/quarkusio/quarkus[Quarkus] GitHubプロジェクト: https: link:https://github.com/quarkusio/quarkus[//github.com/quarkusio/quarkus]"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:69
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "link:https://twitter.com/QuarkusIO[Quarkus] Twitter: https: link:https://twitter.com/QuarkusIO[//twitter.com/QuarkusIO]"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:70
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "link:https://quarkusio.zulipchat.com/[Quarkus] チャット： https://quarkusio.zulipchat.com/"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:71
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Quarkusメーリングリスト: https: link:https://groups.google.com/forum/#!forum/quarkus-dev[//groups.google.com/forum/#!forum/quarkus-dev]"

#. type: Plain Text
#: upstream/_posts/2019-11-13-vodafone-greece-replaces-spring-boot.adoc:72
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Quarkusを使用する4つの理由]"
