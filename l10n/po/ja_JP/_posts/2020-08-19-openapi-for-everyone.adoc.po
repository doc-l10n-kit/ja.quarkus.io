msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:2
msgid "post"
msgstr "post"

#. type: Title =
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:11
#, fuzzy
msgid "MicroProfile OpenAPI for everyone"
msgstr "MicroProfile OpenAPIをみんなで使う。"

#. type: YAML Front Matter
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:4
#, fuzzy
msgid "2020-08-19"
msgstr "2020-08-19"

#. type: YAML Front Matter
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:5
#, fuzzy
msgid "extension openapi"
msgstr "エクステンションopenapi"

#. type: YAML Front Matter
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:6
#, fuzzy
msgid "Exploring some SmallRye OpenAPI features"
msgstr "SmallRye OpenAPIの機能の一部を紹介します。"

#. type: YAML Front Matter
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:7
msgid "phillipkruger"
msgstr "phillipkruger"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:13
#, fuzzy
msgid ""
"https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] is primarily used for adding https://swagger.io/specification/[OpenAPI]\n"
"to https://projects.eclipse.org/projects/ee4j.jaxrs[JAX-RS] Endpoints. In this blog post we will look at how the\n"
"https://github.com/smallrye/smallrye-open-api[SmallRye Implementation] extends this with some extra features, and support for more web frameworks, when used in Quarkus."
msgstr "link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPIは] 、主に link:https://projects.eclipse.org/projects/ee4j.jaxrs[JAX-RS] エンドポイントに link:https://swagger.io/specification/[OpenAPIを] 追加するために使用されます。このブログ記事では、SmallRye link:https://github.com/smallrye/smallrye-open-api[実装が] どのようにこれを拡張し、Quarkusで使用する際にいくつかの追加機能やより多くのWebフレームワークをサポートするのかについて見ていきます。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:17
#, fuzzy
msgid "Using Quarkus"
msgstr "Quarkusの使用について"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:19
#, fuzzy
msgid ""
"The example code is available https://github.com/phillip-kruger/openapi-example[here]. You can also initialize a project\n"
"using https://code.quarkus.io/[code.quarkus.io] - just make sure to include the SmallRye OpenAPI Extension."
msgstr "サンプルコードは link:https://github.com/phillip-kruger/openapi-example[こちらで] 公開しています。また、 link:https://code.quarkus.io/[code.quarkus.] ioを使用してプロジェクトを初期化することもできます - SmallRye OpenAPI Extensionを含めることを確認してください。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:22
msgid "JAX-RS"
msgstr "JAX-RS"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:24
#, fuzzy
msgid ""
"Let's start with a basic JAX-RS Example in Quarkus. We have a `Greeting` Object, that has a `message` and a `to` field,\n"
"and we will create `GET`, `POST` and `DELETE` endpoints for the greeting."
msgstr "まず、Quarkusの基本的なJAX-RSの例から始めましょう。 `message` と `to` フィールドを持つ `Greeting` オブジェクトがあり、挨拶用の `GET` 、 `POST` 、 `DELETE` エンドポイントを作成します。"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:27
#, fuzzy
msgid "Apart from the usual Quarkus setup, you also need the following in your `pom.xml` to create a JAX-RS Endpoint:"
msgstr "通常のQuarkusの設定とは別に、JAX-RS Endpointを作成するためには、 `pom.xml` 、以下のものが必要です："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:49
#, fuzzy
msgid "In Quarkus you do not need an `Application` class, we can just add the Endpoint class:"
msgstr "Quarkusでは、 `Application` クラスは必要ありません。Endpoint クラスを追加すればよいのです："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:81
#, fuzzy
msgid ""
"So far we have not yet added any MicroProfile OpenAPI Annotations, but because we added the `quarkus-smallrye-openapi` extension,\n"
"we will already have a Schema document generated under `/openapi`:"
msgstr "今のところ、MicroProfileのOpenAPIアノテーションはまだ追加していませんが、 `quarkus-smallrye-openapi` のエクステンションを追加したので、 `/openapi` の下にすでにSchemaドキュメントが生成されていることになります："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:138
#, fuzzy
msgid "See https://quarkus.io/guides/rest-json[quarkus.io/guides/rest-json] for more information."
msgstr "詳しくは、Quarkus link:https://quarkus.io/guides/rest-json[.] io/guides/rest-jsonを参照してください。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:140
msgid "OpenAPI"
msgstr "OpenAPI"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:142
#, fuzzy
msgid "You can add more information to the generated schema document by using MicroProfile OpenAPI."
msgstr "MicroProfile OpenAPIを使用することで、生成されたスキーマドキュメントにさらに情報を追加することができます。"

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:144
#, fuzzy
msgid "Header information using config"
msgstr "コンフィグを使ったヘッダー情報"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:146
#, fuzzy
msgid ""
"One feature that we added to SmallRye is the ability to add header information, that you typically\n"
"add to the `Application` class using annotations, with MicroProfile config. This is useful in Quarkus where you\n"
"do not need an `Application` class. So adding the following to the `application.properties` will give you some header information:"
msgstr "SmallRyeに追加した機能の1つに、通常アノテーションを使って `Application` クラスに追加するヘッダー情報を、MicroProfileのコンフィグで追加する機能があります。これは、 `Application` クラスを必要としない Quarkus で便利です。つまり、 `application.properties` に以下のように追加すると、ヘッダー情報を得ることができます："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:166
#, fuzzy
msgid "Now look at the header of the generated schema document under `/openapi`:"
msgstr "ここで、生成されたスキーマ文書のヘッダーを `/openapi` の下に見てください："

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:189
#, fuzzy
msgid "Adding some OpenAPI Annotations to your operations"
msgstr "操作にOpenAPIアノテーションをいくつか追加する。"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:191
#, fuzzy
msgid "You can use any of the annotations in MicroProfile OpenAPI to further describe your endpoint, for example the `Tag` annotation:"
msgstr "MicroProfile OpenAPI のアノテーションのいずれかを使用して、エンドポイントをさらに説明することができます（たとえば、 `Tag` アノテーション）："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:205
#, fuzzy
msgid "Example usage of MicroProfile OpenAPI annotation."
msgstr "MicroProfile OpenAPIアノテーションの使用例です。"

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:207
#, fuzzy
msgid "Auto generate the operation id"
msgstr "操作IDの自動生成"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:209
#, fuzzy
msgid ""
"Some tools that use the schema document to generate client stubs, need an `operationId` in the schema document that is used to name the client stub methods.\n"
"We added support in SmallRye to auto generate this using either the method name (`METHOD`), class and method name (`CLASS_METHOD`), or package, class and method name (`PACKAGE_CLASS_METHOD`).\n"
"To do this add the following to `application.properties`:"
msgstr "スキーマ文書を使用してクライアントスタブを生成するツールの中には、スキーマ文書でクライアントスタブメソッドの名前として使用される `operationId` が必要なものがあります。SmallRyeでは、メソッド名( `METHOD` )、クラス名とメソッド名( `CLASS_METHOD` )、パッケージ名とクラス名とメソッド名( `PACKAGE_CLASS_METHOD` )のいずれかを使用してこれを自動生成するサポートを追加しました。これを実現するために、 `application.properties` に以下の記述を追加します："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:220
#, fuzzy
msgid "You will now see the `operationId` in the schema document for every operation:"
msgstr "これで、すべての操作について、スキーマ文書に `operationId` が表示されるようになります："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:274
#, fuzzy
msgid "Auto generated `operationId`"
msgstr "自動生成 `operationId`"

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:276
msgid "Changing the OpenAPI version"
msgstr "OpenAPIのバージョン変更"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:278
#, fuzzy
msgid ""
"Some API gateways might require a certain OpenAPI version to work. The schema document generated by the SmallRye extension\n"
"will generate with `3.0.3` as the version, but since there is only minor differences between these versions, you can change that to\n"
"`3.0.0`, `3.0.1` or `3.0.2`. You can do this by adding this in `application.properties`:"
msgstr "API ゲートウェイによっては、特定の OpenAPI バージョンを必要とする場合があります。SmallRye エクステンションで生成されるスキーマドキュメントは、バージョンとして `3.0.3` が生成されますが、これらのバージョンにはわずかな違いしかないため、これを `3.0.0` 、 `3.0.1` 、 `3.0.2` に変更することができます。これを行うには、 `application.properties` にこれを追加します："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:289
#, fuzzy
msgid "Now the version generated will be:"
msgstr "これで、生成されるバージョンは、次のようになります："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:301
#, fuzzy
msgid "See https://quarkus.io/guides/openapi-swaggerui[quarkus.io/guides/openapi-swaggerui] for more information."
msgstr "詳細は、quarkus link:https://quarkus.io/guides/openapi-swaggerui[.] io/guides/openapi-swaggeruiを参照してください。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:303
#, fuzzy
msgid "Spring Web"
msgstr "Spring Web"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:305
#, fuzzy
msgid ""
"Recently support for Spring Web has been added in SmallRye OpenAPI, this means that, not only will\n"
"you see the default OpenAPI document when you use Spring Web in Quarkus, but you can also use MicroProfile OpenAPI to\n"
"further describe your Spring Web endpoints."
msgstr "最近、SmallRye OpenAPIにSpring Webのサポートが追加されました。これは、QuarkusでSpring Webを使用する際にデフォルトのOpenAPIドキュメントが表示されるだけでなく、MicroProfile OpenAPIを使ってSpring Webエンドポイントをさらに記述することができることを意味しています。"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:309
#, fuzzy
msgid "Let's add a Spring Rest Controller to our current application. First add this in your `pom.xml`:"
msgstr "現在のアプリケーションにSpring Rest Controllerを追加してみましょう。まず、あなたの `pom.xml` にこれを追加します："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:321
#, fuzzy
msgid "Now you can create a similar endpoint to the JAX-RS one we have looked at so far, but using Spring Web:"
msgstr "さて、ここまで見てきたJAX-RSと同様のエンドポイントを、Spring Webを使って作成することができます："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:349
#, fuzzy
msgid "The Spring annotations will be scanned and this will be added to your schema document:"
msgstr "Springアノテーションがスキャンされ、これがスキーマ文書に追加されます："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:404
#, fuzzy
msgid "See https://quarkus.io/guides/spring-web[quarkus.io/guides/spring-web] for more information."
msgstr "詳しくは、quarkus link:https://quarkus.io/guides/spring-web[.] io/guides/spring-webを参照してください。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:406
#, fuzzy
msgid "Vert.x Reactive Routes"
msgstr "Vert.x リアクティブルート"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:408
#, fuzzy
msgid ""
"In Quarkus, you can also build Vert.x endpoints using Reactive Routes. Similarly to Spring Web, your endpoints will be available in the OpenAPI Schema\n"
"and can be further described using MicroProfile OpenAPI. To add a Vert.x Reactive Route in Quarkus, you need the following in your `pom.xml`:"
msgstr "Quarkusでは、Reactive Routesを使用してVert.xのエンドポイントを構築することも可能です。Spring Webと同様に、エンドポイントはOpenAPIスキーマで利用できるようになり、MicroProfile OpenAPIを使用してさらに記述することができます。QuarkusでVert.x Reactive Routeを追加するには、次のものが必要です。 `pom.xml` ："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:421
#, fuzzy
msgid "Now you can create the endpoint:"
msgstr "これで、エンドポイントを作成することができます："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:449
#, fuzzy
msgid "and now your Vert.x Routes are available in OpenAPI:"
msgstr "で、Vert.x RoutesがOpenAPIで利用できるようになりました："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:504
#, fuzzy
msgid "See https://quarkus.io/guides/reactive-routes[quarkus.io/guides/reactive-routes] for more information."
msgstr "詳細は、quarkus link:https://quarkus.io/guides/reactive-routes[.] io/guides/reactive-routesを参照してください。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:506
#, fuzzy
msgid "Endpoints generated with Panache"
msgstr "Panacheで生成されたエンドポイント"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:508
#, fuzzy
msgid ""
"In Quarkus your can generate your JAX-RS endpoint using Panache. These generated classes will also be scanned and added to the\n"
"OpenAPI schema document if you have the `quarkus-smallrye-openapi` extension in your `pom.xml`."
msgstr "Quarkusでは、Panacheを使用してJAX-RSエンドポイントを生成することができます。 `pom.xml` に `quarkus-smallrye-openapi` エクステンションがある場合、これらの生成されたクラスもスキャンされ、OpenAPI スキーマドキュメントに追加されます。"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:511
#, fuzzy
msgid "See https://quarkus.io/guides/rest-data-panache[quarkus.io/guides/rest-data-panache] for more information."
msgstr "詳細は、quarkus link:https://quarkus.io/guides/rest-data-panache[.] io/guides/rest-data-panacheを参照してください。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:513
#, fuzzy
msgid "Any other Web Framework"
msgstr "その他のWebフレームワーク"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:515
#, fuzzy
msgid ""
"You can also add any other endpoint to your document by providing that part of the Schema document in a `yaml` file. Let's say for instance you\n"
"have a Servlet that exposes some methods and you want to add those to the schema document. Servlet is just an example, any web framework can work here."
msgstr "また、スキーマ文書の一部を `yaml` ファイルで提供することで、他のエンドポイントを文書に追加することができます。例えば、いくつかのメソッドを公開するServletがあり、それらをスキーマ文書に追加したいとします。Servletは単なる例であり、どのようなWebフレームワークもここで動作させることができます。"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:518
#, fuzzy
msgid "So first we add this to the `pom.xml` to add Servlet support in Quarkus:"
msgstr "そこでまず、QuarkusでServletのサポートを追加するために、 `pom.xml` 、これを追加します："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:530
#, fuzzy
msgid "We can now create a Servlet Endpoint like this for example:"
msgstr "これで、例えばこんな風にServlet Endpointを作成することができます："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:564
#, fuzzy
msgid "Now we need a OpenAPI Schema document that maps to these endpoints. You need to add this to a file called `openapi.yml` in `src/main/resources/META-INF`:"
msgstr "さて、これらのエンドポイントにマッピングする OpenAPI Schema ドキュメントが必要です。これを `src/main/resources/META-INF` の `openapi.yml` というファイルに追加する必要があります："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:620
#, fuzzy
msgid "This will be merged with the rest of the endpoints to expose all paths in your document. So in the end your `/openapi` output will look like this:"
msgstr "これは残りのエンドポイントと統合され、ドキュメント内のすべてのパスを公開することになります。つまり、最終的にあなたの `/openapi` の出力は次のようになります："

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:828
#, fuzzy
msgid "This contains resources from JAX-RS, Spring Web, Vert.x Reactive Routes and Servlet."
msgstr "JAX-RS、Spring Web、Vert.x Reactive Routes、Servletのリソースを収録しています。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:830
msgid "Swagger UI"
msgstr "Swagger UI"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:832
#, fuzzy
msgid ""
"In Quarkus, Swagger UI is included by default and when you now browse to http://localhost:8080/swagger-ui[localhost:8080/swagger-ui]\n"
"you will see the UI with all your endpoints:"
msgstr "Quarkusでは、Swagger UIがデフォルトで含まれており、 link:http://localhost:8080/swagger-ui[localhost:8080/swagger-uiを] 参照すると、すべてのエンドポイントが含まれるUIが表示されます："

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:837
msgid "Summary"
msgstr "まとめ"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:839
#, fuzzy
msgid ""
"In this post we looked at how Quarkus extends the MicroProfile OpenAPI specification to make it even easier to document your Endpoints. We also looked at\n"
"how you can document any web framework using it."
msgstr "この記事では、QuarkusがMicroProfile OpenAPI仕様を拡張して、エンドポイントのドキュメント化をさらに容易にする方法について見てきました。また、Quarkusを使用して、あらゆるWebフレームワークを文書化する方法についても見てきました。"

#. type: Plain Text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:842
#, fuzzy
msgid ""
"If you find any issues or have any suggestions, head over to the https://github.com/smallrye/smallrye-open-api[SmallRye OpenAPI] project and\n"
"let's discuss it there."
msgstr "もし問題を見つけたり、何か提案があれば、SmallRye link:https://github.com/smallrye/smallrye-open-api[OpenAPI] プロジェクトに向かい、そこで議論しましょう。"
