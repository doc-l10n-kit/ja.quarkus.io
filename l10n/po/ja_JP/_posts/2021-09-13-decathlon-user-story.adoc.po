msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:2
msgid "post"
msgstr "post"

#. type: YAML Front Matter
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:6
#, fuzzy
msgid "VCStream: a new messaging platform for DECATHLON’s Value Chain, built on Quarkus."
msgstr "VCStream：Quarkusをベースに構築された、DECATHLONのValue Chainのための新しいメッセージングプラットフォームです。"

#. type: YAML Front Matter
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:4
msgid "2021-09-13"
msgstr "2021-09-13"

#. type: YAML Front Matter
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:5
msgid "user-story"
msgstr "user-story"

#. type: YAML Front Matter
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:7
msgid "lmathieu"
msgstr "lmathieu"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:14
#, fuzzy
msgid "DECATHLON is a French retailer, dedicated to sport products, with more than 1800 stores worldwide. At DECATHLON, we are convinced that sport is a source of well-being."
msgstr "DECATHLONは、フランスのスポーツ用品専門店であり、世界中に1800以上の店舗を構えています。DECATHLONは、スポーツが幸福の源であることを確信しています。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:16
#, fuzzy
msgid "VCStream is a new platform for streaming data across the Value Chain of DECATHLON. It allows streaming data in and out of the Value Chain, what we called the inbound (from external systems to the Value Chain) and the outbound (from the Value Chain to external systems) processes."
msgstr "VCStreamは、DECATHLONのValue Chainを横断してデータをストリーミングするための新しいプラットフォームです。インバウンド（外部システムからバリューチェーンへ）とアウトバウンド（バリューチェーンから外部システムへ）のプロセスと呼ばれる、バリューチェーン内外でのデータストリーミングを可能にします。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:18
#, fuzzy
msgid "VCStream slogan: **__“One platform to connect them all”__**."
msgstr "VCStreamのスローガン *_「One platform to connect them all_* 」。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:20
#, fuzzy
msgid "VCStream offers connectors to easily stream data from incoming Kafka topics to existing Value Chain ERP modules, and from these ERP modules to outgoing Kafka topics and object store."
msgstr "VCStreamは、Kafkaトピックから既存のバリューチェーンERPモジュールへ、またERPモジュールからKafkaトピックやオブジェクトストアへ、データを簡単にストリームするコネクタを提供します。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:22
#, fuzzy
msgid "VCStream leverages the Quarkus framework, and Kubernetes, to offer a resilient and performant platform that meets security and reliability requirements of DECATHLON Value Chain."
msgstr "VCStreamは、Quarkusフレームワーク、Kubernetesを活用し、DECATHLON Value Chainのセキュリティと信頼性の要件を満たす、弾力的でパフォーマンスの高いプラットフォームを提供しています。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:24
#, fuzzy
msgid "Age Of Access Accelerator (AoAA) is the team behind the VCStream platform. We’re a small team of three Developers, a DevOps, a Product Owner and an Enterprise Architect; let’s not forget our team Leader of course (that also develops when he finds some time to do so)."
msgstr "Age Of Access Accelerator (AoAA)は、VCStreamのプラットフォームを支えるチームです。私たちは、3人の開発者、DevOps、プロダクトオーナー、エンタープライズアーキテクトからなる小さなチームで、もちろんチームリーダーも忘れてはいけません（彼もまた、時間を見つけては開発を行っています）。"

#. type: Title ==
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:26
msgid "The Challenge"
msgstr "挑戦"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:28
#, fuzzy
msgid ""
"The Value Chain IT department faces a major problem around data exposure and consumption to and from the other departments of DECATHLON.\n"
"The business was scaling steadily, driving significantly higher levels of resource consumption, capacity demands, and event data in real time. We realized that our system could not keep up."
msgstr "バリューチェーンのIT部門は、DECATHLONの他部門とのデータのやり取りや消費に関する大きな問題に直面しています。ビジネスが順調に拡大し、リソースの消費量やキャパシティーの需要、イベントデータがリアルタイムで大幅に増加しました。私たちは、自分たちのシステムがそれについていけないことに気づきました。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:31
#, fuzzy
msgid ""
"The current usage of dedicated servers was leading to an increase of resource waste. The department’s reliance on legacy workflows and ERP ecosystems resulted in significant productivity bottlenecks.\n"
"Thinking about data as streams is a popular approach nowadays. In many cases, it allows to build a data engineering architecture in a more efficient way than the classic “data as a state” one. But to support the streaming data paradigm, we need to use additional technologies. One of the most popular tools for working with streaming data is Apache Kafka, and DECATHLON decided to invest heavily in it."
msgstr "現在の専用サーバーの使用は、リソースの無駄遣いの増加に繋がっていました。レガシーなワークフローとERPエコシステムに依存しているため、生産性が著しく低下していた。データをストリームとして考えるというのは、最近よく使われるアプローチです。多くの場合、古典的な「状態としてのデータ」よりも効率的な方法でデータエンジニアリング・アーキテクチャを構築することができます。しかし、ストリーミング・データ・パラダイムをサポートするためには、追加のテクノロジーを使用する必要があります。ストリーミングデータを扱うための最も人気のあるツールの1つがApache Kafkaであり、DECATHLONはKafkaに多額の投資をすることを決定しました。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:34
#, fuzzy
msgid "The quality of data produced to VCStream is extremely important to us, especially because we are running VCStream at scale. Data produced by one team can and will be consumed by many different applications within DECATHLON. The lack of data quality can have a huge impact on downstream consumers."
msgstr "VCStreamに生成されるデータの品質は、特にVCStreamをスケールアップして運用している私たちにとって非常に重要です。1つのチームが作成したデータは、DECATHLON内の多くの異なるアプリケーションで消費される可能性があり、また消費される予定です。データ品質の欠如は、下流の消費者に大きな影響を与える可能性があります。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:36
#, fuzzy
msgid "Prior to the **VCStream platform**, the Value Chain was challenged with:"
msgstr "*VCStreamのプラットフォームを* 導入する以前は、バリューチェーンが課題でした："

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:38
#, fuzzy
msgid "**Data standardization**: data was exposed in a non-uniform manner and without standards."
msgstr "*データの標準化* ：データは非一様な方法で、標準なしに公開された。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:39
#, fuzzy
msgid "**Time to market**: exposing new data would take time as we relied on manual scheduling via legacy tools."
msgstr "*市場投入までの時間* ：新しいデータを公開するには、レガシーツールを使った手作業によるスケジューリングに頼っていたため、時間がかかっていた。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:40
#, fuzzy
msgid "**Consuming data in real time**: as opposed to the current batch mode usage."
msgstr "*リアルタイムでのデータ消費* ：現在のバッチモード使用とは対照的。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:41
#, fuzzy
msgid "**Scalability and Resilience**: huge volumes of data are processed, and the legacy system is fragile."
msgstr "*スケーラビリティとレジリエンス* ：膨大な量のデータが処理されるため、レガシーシステムは壊れやすい。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:43
#, fuzzy
msgid "We knew our Value Chain needed a platform to modernize our data exchange: a product that could enable data access, efficient data integration, container adoption, and developer velocity at scale."
msgstr "バリューチェーンには、データ交換を近代化するためのプラットフォームが必要だと考えていました。データアクセス、効率的なデータ統合、コンテナの採用、開発者のベロシティを大規模に実現できる製品です。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:45
#, fuzzy
msgid "__\"Almost every weekend is the biggest weekend we've ever had in the Value Chain! our system has just become unstable. We can not deal with application deployment in the old way.”__ - is the observation from many of us."
msgstr "_\"ほぼ毎週末は、バリューチェーンで今までで一番大きな週末です！私たちのシステムはただ不安定になっただけです。アプリケーションのデプロイメントを旧来の方法で処理することはできない。\"_ - というのが、多くの方からの感想です。"

#. type: Title ==
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:47
msgid "Why Quarkus?"
msgstr "なぜQuarkusなのか？"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:49
#, fuzzy
msgid "To implement VCStream, our team evaluated Spring Boot, Micronaut and Quarkus. As none has real experience with Micronaut, we quickly leave it out."
msgstr "VCStreamを実装するために、私たちのチームはSpring Boot、Micronaut、Quarkusを評価しました。Micronautについては、誰も実際の経験がないため、すぐに除外しました。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:51
#, fuzzy
msgid "We selected Quarkus based on the followings criterias:"
msgstr "Quarkusは、次のような基準で選びました："

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:53
#, fuzzy
msgid "The team was interested to learn a new framework"
msgstr "チームは、新しいフレームワークを学ぶことに興味を持ちました"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:54
#, fuzzy
msgid "Microprofile reactive messaging seems very interesting and a neat API to implement messaging only microservices which is what we needed primarily."
msgstr "Microprofile reactive messagingはとても興味深く、私たちが主に必要としているメッセージングのみのマイクロサービスを実装するためのきちんとしたAPIに思えます。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:55
#, fuzzy
msgid "Performance is at the heart of Quarkus, and more importantly, low resource consumption (both CPU and memory) which is important as we plan to deploy to the cloud, and have some ecological sensitivity on the team."
msgstr "さらに重要なのは、リソースの消費量が少ないことです（CPUとメモリーの両方）。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:56
#, fuzzy
msgid "All the containers, Kubernetes and cloud ready functionalities that we need to properly implement a resilient application on GKE are there."
msgstr "GKEでレジリエントなアプリケーションを適切に実装するために必要な、コンテナ、Kubernetes、クラウドレディの機能性はすべて揃っています。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:58
#, fuzzy
msgid "Lastly, we have a Quarkus contributor on the team which allows us to have a deep understanding of the framework, and a unique contact within the community."
msgstr "最後に、Quarkusのコントリビューターがチームにいることで、フレームワークを深く理解し、コミュニティ内で独自のコンタクトを持つことができます。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:60
#, fuzzy
msgid "Speaking of the community, the Quarkus one is very active and welcoming. This was one of the most important criteria for us."
msgstr "コミュニティについて言えば、Quarkusのコミュニティは非常に活発で歓迎されています。これは、私たちにとって最も重要な基準のひとつでした。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:62
#, fuzzy
msgid "Of course, we performed some proof of concepts with all the team members, compared implementations, and decided together what the best choice would be in our context."
msgstr "もちろん、チームメンバー全員で概念実証を行い、実装を比較検討し、我々の文脈で何がベストなのかを一緒に決めていきました。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:64
#, fuzzy
msgid "During these proof of concepts, we particularly enjoyed the fact that the Quarkus learning curve was very rapid and easier than what we first thought. Newcomers have become comfortable with Quarkus in less than a week, and all the developer oriented functionalities (live reload FTW!) have really empowered them to be more productive on their day to day tasks."
msgstr "これらの概念実証の間、私たちは特に、Quarkusの学習曲線が非常に速く、最初に考えていたよりも簡単であったという事実を楽しみました。新人は1週間も経たないうちにQuarkusに慣れ、開発者向けの機能（ライブリロードは最高！）により、日々のタスクの生産性を高めることができました。"

#. type: Title ==
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:66
#, fuzzy
msgid "Our commitment"
msgstr "私たちの取り組み"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:68
#, fuzzy
msgid "Within DECATHLON, there weren't many projects that used Quarkus, unlike Spring Boot, which has already been proven, and there were several developers who are familiar with it."
msgstr "DECATHLON内では、すでに実績のあるSpring Bootと違ってQuarkusを使ったプロジェクトはあまりなく、Quarkusに詳しい開発者が何人もいました。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:70
#, fuzzy
msgid "Quarkus' position in our current TechRadar (trial) has not necessarily helped us to weigh our usage of it. The few developers with whom we had discussions on the use of Quarkus had expressed some reservations about the notion of performance that was put forward by the framework."
msgstr "現在のTechRadar（トライアル）におけるQuarkusの位置づけは、必ずしもQuarkusの使い方を吟味するのに役立ってはいません。Quarkusの使用について議論した数人の開発者は、フレームワークが提唱するパフォーマンスという概念に難色を示していました。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:72
#, fuzzy
msgid "Making objective choices (for the company and for developers who have a passion for the framework), on a new framework for our company was very difficult! We cannot rely solely on the advice of the Quarkus expert on our team to make the choice. This is the reason why we started with a POC, with the objective that if we would face some impossible situation, we would go back to Spring Boot without hesitation! Knowing this POC would still cost us in a difficult economic context that everyone knows."
msgstr "会社にとって新しいフレームワークについて、（会社にとっても、フレームワークに思い入れのある開発者にとっても）客観的な選択をすることは非常に難しいことでした！私たちのチームにいるQuarkusの専門家のアドバイスだけに頼って選択するわけにはいきません。そのため、もし不可能な状況に直面しても、迷うことなくSpring Bootに戻ることを目的に、POCを開始しました！このPOCを知っていても、誰もが知っている厳しい経済状況の中で、私たちは犠牲になるのです。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:74
#, fuzzy
msgid "Fortunately, the project went well, and we now have successfully deployed it in production and connected many ERP modules with external IT systems thanks to VCStream."
msgstr "幸いにもプロジェクトは順調に進み、今ではVCStreamのおかげで本番導入に成功し、多くのERPモジュールと外部ITシステムとの接続も実現しました。"

#. type: Title ==
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:76
#, fuzzy
msgid "VCStream architecture"
msgstr "VCStreamアーキテクチャ"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:80
#, fuzzy
msgid "This is a simplified view of the VCStream inbound process architecture: the extractor connects to multiple Kafka brokers and consumes messages from multiple topics in real time. These messages are then converted to JSON, routed and sent to multiple ERP modules (one message can go to one or more ERP modules). There is one sender instance per ERP module."
msgstr "これは、VCStreamのインバウンドプロセスアーキテクチャーの簡略図です。Extractorは複数のKafkaブローカーに接続し、リアルタイムで複数のトピックからメッセージを消費します。これらのメッセージはJSONに変換され、ルーティングされて複数のERPモジュールに送信されます（1つのメッセージは1つまたは複数のERPモジュールに送信できます）。送信者インスタンスは、ERPモジュールごとに1つです。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:82
#, fuzzy
msgid "Currently, we extract from 6 topics and send to 3 ERP modules but we foresee to consume from up to 25 different topics at the end of 2022."
msgstr "現在は6つのトピックから抽出し、3つのERPモジュールに送信していますが、2022年末には最大で25種類のトピックから消費することを想定しています。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:86
#, fuzzy
msgid "This is a simplified view of the VCStream outbound process architecture: the listener watches for JSON messages from an ERP module. These messages are routed, then sent to the validator that validates them, converted to AVRO format, and exposed in dedicated topics. There is one listener instance per ERP module."
msgstr "これは、VCStreamのアウトバウンドプロセスのアーキテクチャを簡略化したものです。これらのメッセージはルーティングされ、バリデーターに送られ、バリデーターを検証し、AVROフォーマットに変換され、専用のトピックで公開されます。リスナーは1つのERPモジュールにつき1つのインスタンスが存在します。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:88
#, fuzzy
msgid "Currently we receive messages from 4 ERP modules and expose 6 topics but we foresee to expose up to 25 topics at the end of 2022."
msgstr "現在、4つのERPモジュールからメッセージを受け取り、6つのトピックを公開していますが、2022年末には最大で25のトピックを公開することを想定しています。"

#. type: Title ==
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:90
#, fuzzy
msgid "Embracing Quarkus"
msgstr "Quarkusを取り込む"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:92
#, fuzzy
msgid "Here are testimonials of the usage of Quarkus from the members of the VCStream platform development team."
msgstr "VCStreamプラットフォーム開発チームのメンバーから、Quarkusを使用した声をご紹介します。"

#. type: Title ===
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:94
#, fuzzy
msgid "__Fawaz Paraïso - Team Leader__"
msgstr "_Fawaz Paraïso - チームリーダー_"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:96
#, fuzzy
msgid "As a developer and the team leader, I had to make my own beliefs about choosing to use Quarkus for our platform implementation. Our technological choice must be consistent with DECATHLON's development strategies."
msgstr "開発者として、またチームリーダーとして、私たちのプラットフォーム実装にQuarkusを使用することを選択することについて、自分なりの信念を持つ必要がありました。技術的な選択は、DECATHLONの開発戦略と矛盾しないものでなければなりません。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:98
#, fuzzy
msgid "In comparison with Spring Boot which has already established itself, Quarkus is a new framework in the Java ecosystem. Beyond these considerations (new), our team should give a concrete opinion of what Quarkus could offer. Getting started with Quarkus was easy for me, it may be related to my experience as a senior developer. After a week of development with Quarkus, I was able to regain the same level of productivity as when I was developing with Spring Boot. For the implementation of our platform, SmallRye Reactive Messaging was newer to me and met the architectural constraints of our platform. Our POC was successful with results (simplicity, performance, resilience) above our expectations. Despite the positive results obtained, I did not want to stop there. I wanted to get another perspective from a junior developer who, like me, had never used Quarkus."
msgstr "すでに地位を確立しているSpring Bootと比較すると、QuarkusはJavaのエコシステムにおいて新しいフレームワークである。これらの考慮事項（新しい）を超えて、私たちのチームはQuarkusが何を提供できるのかについて具体的な意見を述べる必要があります。Quarkusを使い始めるのは簡単でしたが、それは上級開発者としての経験と関係があるかもしれません。Quarkusで1週間開発した後、Spring Bootで開発していたときと同じレベルの生産性を回復することができました。私たちのプラットフォームの実装には、SmallRye Reactive Messagingが新しく、私たちのプラットフォームのアーキテクチャ上の制約を満たしていました。POCは、期待以上の結果（シンプルさ、パフォーマンス、回復力）を得ることができ、成功しました。良い結果が得られたにもかかわらず、私はそこで終わりたくありませんでした。私と同じようにQuarkusを使ったことがないジュニア開発者から、別の視点を得たいと思ったからです。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:100
#, fuzzy
msgid "The arrival of a new collaborator with a junior profile in our team who does not know our project, neither Quarkus, provided me with other elements of answers on how to get started with Quarkus. He made his first contributions to our repositories in the first week. This collaborator's experience with using Quarkus has definitely assured me of how easily a junior developer can get started with Quarkus."
msgstr "Quarkusも私たちのプロジェクトも知らない若いプロフィールの新しいコラボレーターが私たちのチームに来たことで、Quarkusを始める方法について他の答えの要素を得ることができました。彼は、最初の週に私たちのリポジトリに初めて貢献しました。この共同開発者のQuarkus使用経験によって、ジュニア開発者がQuarkusをいかに簡単に使い始めることができるかが確実に証明されました。"

#. type: Title ===
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:102
#, fuzzy
msgid "__Thomas Dangleterre - Junior Developer__"
msgstr "_Thomas Dangleterre - ジュニアデベロッパー_"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:104
#, fuzzy
msgid ""
"I joined the team 4 months after the project started. I have been recruited to step in as a junior Java Software Developer. It was the first time I had to deal with microservices architecture and I just had a small experience of the cloud.\n"
"I really enjoy the hot reload feature on Quarkus it is something that I was not used to from my previous missions on legacy applications.\n"
"I like how it is easy to interact with Kafka thanks to the abstraction offered by SmallRye Reactive Messaging."
msgstr "プロジェクト開始後4ヶ月でチームに参加しました。ジュニアJavaソフトウェアデベロッパーとしてステップインするために採用されたのです。マイクロサービス・アーキテクチャを扱うのは初めてでしたし、クラウドについても少し経験しただけです。Quarkusのホットリロード機能は、レガシーアプリケーションでの以前の任務では慣れ親しんでいなかったもので、とても気に入っています。SmallRye Reactive Messagingが提供する抽象化のおかげで、Kafkaと簡単にやりとりできるのも気に入っています。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:108
#, fuzzy
msgid "It was pretty easy to adapt myself to Quarkus as I knowed Spring Boot a bit, and there are a lot of similarities. I also found Quarkus' documentation very clear and I’m really looking forward to keep learning more about Quarkus."
msgstr "Spring Bootを少し知っていたので、Quarkusに適応するのはとても簡単でしたし、多くの類似点があります。また、Quarkusのドキュメントは非常にわかりやすく、Quarkusについてもっと学び続けたいと思っています。"

#. type: Title ===
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:111
#, fuzzy
msgid "__Victor Gallet - Senior Developer and Kafka Expert__"
msgstr "_Victor Gallet - シニアデベロッパー、Kafkaエキスパート_"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:113
#, fuzzy
msgid ""
"When I joined the team, around ten microservices had already been deployed with Quarkus.\n"
"I had not yet had the opportunity to play with Quarkus, I had just seen presentations at a meetup and the framework interested me. Having worked since the beginning of my career with the Spring framework, I wanted to discover the big differences compared to Quarkus.\n"
"Despite utility classes and different CDI annotations, I was able to get up and running with Quarkus very quickly. The Quarkus Guides have been a huge help as they focus on one topic and get straight to the point. For example, since our microservices communicate exclusively with Apache Kafka, the Quarkus integration guide with Apache Kafka allowed me to immediately understand the concepts and our different components."
msgstr "私がチームに参加したとき、約10のマイクロサービスがすでにQuarkusでデプロイされていました。私はまだQuarkusを使う機会がありませんでしたが、ミートアップでプレゼンテーションを見ただけで、フレームワークに興味を持ちました。キャリアの初期からSpringフレームワークで仕事をしてきた私は、Quarkusと比較して大きな違いを発見したいと思いました。ユーティリティクラスや異なるCDIアノテーションにもかかわらず、私はQuarkusをすぐに使いこなすことができました。Quarkusガイドは、1つのトピックに焦点を当て、ポイントを押さえているため、非常に役に立ちました。例えば、私たちのマイクロサービスはApache Kafkaのみで通信するので、QuarkusのApache Kafkaとの統合ガイドで、コンセプトと異なるコンポーネントをすぐに理解することができました。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:117
#, fuzzy
msgid "Compared to the dependency injection and the implementation provided by Quarkus (ArC), I had no problem navigating it. The concepts are standard and I only had to discover some new annotations like `@ApplicationScoped` and `@Singleton` to name just the most used ones."
msgstr "依存性注入やQuarkus（ArC）が提供する実装と比較すると、問題なくナビゲートすることができました。コンセプトは標準的で、最もよく使われるものを挙げると、 `@ApplicationScoped` や `@Singleton` のような新しいアノテーションを発見する必要があっただけです。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:119
#, fuzzy
msgid "To sum up, here are the points that I really enjoyed working with Quarkus:"
msgstr "最後に、Quarkusと仕事をしていて本当によかったと思う点をまとめます："

#. type: Title ====
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:121
#, fuzzy
msgid "The live reload"
msgstr "ライブリロードの"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:123
#, fuzzy
msgid "One feature that I really liked is the live reload. Starting my day in the morning, I would launch the application I needed to work on, and no longer have to worry about restarting it during the day. A very practical feature coupled with a very short start-up time!"
msgstr "私がとても気に入った機能のひとつに、ライブリロードがあります。朝、一日の始まりに、作業するアプリケーションを立ち上げておけば、途中で再起動する心配もありません。非常に実用的な機能で、起動時間も非常に短いです！"

#. type: Title ====
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:125
#, fuzzy
msgid "Unified configuration and profile management"
msgstr "コンフィギュレーションとプロファイルの一元管理"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:127
#, fuzzy
msgid "With this simple little bit of configuration"
msgstr "この簡単なちょっとした設定だけで"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:130
#, fuzzy
msgid ""
"greeting.message=hello\n"
"%dev.greeting.message=hey\n"
"%test.greeting.message=hi"
msgstr "dev.greeting.message=こんにちは %test.greeting.message=hi"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:136
#, fuzzy
msgid "It allows the `greeting.message` property to be overridden when launching the application locally with the value __“hey”__ and for tests with the value __”hi”__. This is very convenient and greatly simplifies configuration management for testing."
msgstr "これにより、アプリケーションをローカルで起動する際には値 _「hey_ 」で、テスト用には値「 _hi_ 」で、 `greeting.message` プロパティをオーバーライドすることができます。これは非常に便利で、テスト用の設定管理を大幅に簡略化することができます。"

#. type: Title ====
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:138
#, fuzzy
msgid "The support"
msgstr "サポート"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:140
#, fuzzy
msgid ""
"I already mentioned it above, but the documentation is very clear, and the guides allow you to discover a functionality, a use of Quarkus in a simple and fast way.\n"
"I was also pleasantly surprised at the responsiveness and support of the Quarkus community within their Zulip chat. A big thank you to Clément Escoffier who helped us improve our applications, and personally helped me to do my first open source contribution to the SmallRye Reactive Messaging project."
msgstr "上にも書きましたが、ドキュメントが非常にわかりやすく、ガイドを見れば、Quarkusの機能や使い方をシンプルかつ迅速に発見することができます。また、QuarkusコミュニティのZulipチャットでの対応とサポートにも驚かされました。アプリケーションの改良を手伝ってくれたClément Escoffierに感謝します。また、SmallRye Reactive Messagingプロジェクトに初めてオープンソースで貢献するのを個人的に手伝ってくれたことにも感謝します。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:143
#, fuzzy
msgid "One point of attention that I have come up against with my liability as a Spring developer is that Quarkus takes a number of actions during build to reduce startup time and its memory footprint. Having wanted to have a dynamic behavior in my application, I used the annotation `@IfBuildProperty` to select the appropriate bean but, as its name suggests, the bean will be selected during the build and the alternatives will not be available at runtime."
msgstr "Spring開発者としての責任で直面した注意点の1つは、Quarkusは起動時間とメモリフットプリントを減らすために、ビルド中に多くのアクションを取るということです。私のアプリケーションで動的な動作をさせたかったので、アノテーション `@IfBuildProperty` を使って適切な Bean を選択しましたが、その名前が示すように、Bean はビルド中に選択され、実行時にはその選択肢は利用できません。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:145
#, fuzzy
msgid "Finally, to end my feedback, I regret not having faced the construction of a native image. But our project has opted for the deployment of containers within a Kubernetes cluster, which is what Quarkus is designed for."
msgstr "最後に、フィードバックを終えるにあたり、ネイティブイメージの構築に向き合わなかったことを後悔しています。しかし、私たちのプロジェクトでは、Kubernetesクラスタ内でのコンテナのデプロイを選択しており、Quarkusはそのために設計されています。"

#. type: Title ===
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:147
#, fuzzy
msgid "__Loïc Mathieu - Senior Developer__"
msgstr "_Loïc Mathieu - シニアデベロッパー_"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:149
#, fuzzy
msgid "I’m a regular Quarkus committer and knows very well Quarkus before I joined the team. So I will give a very narrow testimonial, on a very specific feature we used and that I very love."
msgstr "私はQuarkusの常連コミッターであり、チームに参加する前からQuarkusをよく知っています。ですから、私たちが使用し、私がとても気に入っている特定の機能について、非常に狭い範囲の証言をします。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:151
#, fuzzy
msgid "Reactive programming is at the heart of Quarkus, and reactive messaging, as its name implies, is a reactive framework."
msgstr "Quarkusの中心にはリアクティブプログラミングがあり、リアクティブメッセージングはその名の通り、リアクティブなフレームワークです。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:153
#, fuzzy
msgid ""
"When you need to consume or produce a message, you can simply use the payload as method parameter or return type. But when you need to implement asynchronous processing or complex logic on a stream of messages, you’ll need to use Mutiny instead of directly using your payload type.\n"
"Mutiny is a set of reactive types and operators. It allows to express a set of transformations on a stream of items and  follows the reactive stream standard."
msgstr "メッセージを消費または生成する必要がある場合は、ペイロードをメソッドのパラメータまたは戻り値型として使用するだけです。しかし、メッセージのストリームに非同期処理や複雑なロジックを実装する必要がある場合は、ペイロード型を直接使用するのではなく、Mutinyを使用する必要があります。Mutinyは、リアクティブな型と演算子のセットです。アイテムのストリームに対する一連の変換を表現することができ、リアクティブ・ストリーム標準に準拠しています。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:156
#, fuzzy
msgid "One of our needs was to group incoming messages into batches, as sending a message to an ERP module has a cost, and they fear receiving millions of messages per day. So we need to group them by type, then by batch of 50, and emit at least one batch per minute to avoid adding too much delay to the message delivery."
msgstr "ERPモジュールにメッセージを送るにはコストがかかりますし、1日に何百万ものメッセージを受け取ることを恐れているので、受信したメッセージをバッチにグループ化する必要があります。そこで、メッセージの種類ごとにグループ化し、さらに50個のバッチを作成し、メッセージの配信に遅延が生じないよう、1分間に最低1個のバッチを発行する必要があります。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:158
#, fuzzy
msgid "To implement this, we prototype the usage of Kafka Stream, but it adds some complexity to our current technical stack as we didn’t use it already, and it has some grouping limitations (grouping by size is not provided out of the box by the framework)."
msgstr "この実装のために、Kafka Streamの使用を試作しましたが、すでに使用していないため現在の技術スタックに複雑さが加わり、グループ化の制限もあります（サイズによるグループ化はフレームワークですぐに提供されません）。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:160
#, fuzzy
msgid "So we decided to simply use what we already have in our toolbox, Mutiny, and the code we implement is really readable for such a complex task, and we have been very happy with it since."
msgstr "そこで、すでにツールボックスにあるMutinyをシンプルに使うことにしました。実装したコードは、このような複雑なタスクの割には実に読みやすく、それ以来、非常に満足しています。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:163
#, fuzzy
msgid ""
"@Incoming(\"in\")\n"
"@Outgoing(\"group-out\")\n"
"public Multi<Message<List<ErpMessage>>> group(Multi<KafkaRecord<String, RawMessage>> events) { // <1>\n"
"    return events\n"
"            .group().by(record -> record.getPayload().type) // <2>\n"
"            .flatMap(group -> group.group().intoLists().of(size, duration)) // <3>\n"
"            .filter(group -> !group.isEmpty()) // <4>\n"
"            .flatMap(groupedMultis -> {\n"
"                List<ErpMessage> erpMsg = groupedMultis.stream() // <5>\n"
"                        .map(record -> toErpMessage(record))\n"
"                        .collect(Collectors.toList());\n"
"                return Multi.createFrom().item(KafkaRecord.of((String) null, erpMsg)); // <6>\n"
"            });\n"
"}"
msgstr "@Incoming(\"in\") @Outgoing(\"group-out\") public Multi<Message<List<ErpMessage>> group(Multi<KafkaRecord<String, RawMessage>> events) { // <1> return events .group().by(record → record.getPayload().タイプ) // <2> .flatMap(group → group.group().intoLists().of(サイズ, 期間))// <3> .filter(group → !group.isEmpty()) // <4> .flatMap(groupedMultis → { List<ErpMessage> erpMsg = groupedMultis.stream() // <5> .map(record → toErpMessage(record)) .collect(Collectors.toList()); return Multi.createFrom().item(KafkaRecord.ofString) null, erpMsg; // <6> }); }."

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:180
#, fuzzy
msgid "The method takes a stream of Kafka messages."
msgstr "このメソッドは、Kafkaメッセージのストリームを受け取ります。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:181
#, fuzzy
msgid "First, we group by payload type."
msgstr "まず、ペイロードの種類でグループ分けをします。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:182
#, fuzzy
msgid "Then, we group by batch of size messages with a max duration of duration."
msgstr "次に、最大継続時間のあるサイズのメッセージのバッチでグループ化します。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:183
#, fuzzy
msgid "Then, we remove empty batches."
msgstr "そして、空のバッチを削除します。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:184
#, fuzzy
msgid "Then, we map each batch of message to a new format."
msgstr "そして、メッセージの各バッチを新しいフォーマットにマッピングしていきます。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:185
#, fuzzy
msgid "Then we return a Kafka message with the batch in it."
msgstr "そして、そのバッチを含んだKafkaメッセージを返す。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:187
#, fuzzy
msgid "Pretty straightforward, right?"
msgstr "かなりわかりやすいでしょ？"

#. type: Title ==
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:189
#, fuzzy
msgid "Looking forward"
msgstr "前向きに"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:191
#, fuzzy
msgid "Performance was at the heart of the design and implementation of VCStream, we perform regular load tests and run regular crisis scenarios (we simulate keeping up with a high number of messages waiting in the broker by manipulating topics offset)."
msgstr "VCStreamの設計と実装の中心はパフォーマンスでした。定期的に負荷テストを行い、危機的なシナリオを実行します（トピックオフセットを操作して、ブローカーで待機する大量のメッセージに対応することをシミュレートします）。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:193
#, fuzzy
msgid "Each time we encounter performance bottlenecks or regressions, we discuss them with the Quarkus community and have very prompt feedback. All issues were resolved quickly and the performance and resilience of our platform kept improving over time."
msgstr "パフォーマンスのボトルネックやリグレッションが発生するたびに、Quarkusのコミュニティと話し合い、非常に迅速なフィードバックが得られます。すべての問題は迅速に解決され、私たちのプラットフォームのパフォーマンスと回復力は、時間とともに改善され続けています。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:195
#, fuzzy
msgid ""
"We deployed on the cloud, which implies direct cost we can measure easily. Even if today our platform is not yet used a lot in production (only half of the currently deployed topics are really used), we foreseen a need to scale to up to 1.5 million messages per minute at the end of 2022, and to connect to more than twice the current number of ERP\n"
" modules. So the level of performance and the resources needed to achieve it is very important."
msgstr "私たちはクラウド上にデプロイしました。これは、簡単に測定できる直接的なコストを意味します。今日、私たちのプラットフォームが本番ではまだあまり使用されていないとしても（現在デプロイされているトピックのうち、実際に使用されているのは半分程度）、2022年末には毎分150万メッセージまで拡張し、現在の2倍以上のERPモジュールに接続する必要があると予測しています。そのため、パフォーマンスのレベルとそれを達成するために必要なリソースは非常に重要です。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:198
#, fuzzy
msgid "The good news is: we are not afraid of this as the platform in its current state can already sustain a high number of messages per minute. We benchmark our platform on our crisis scenario to **up to 500 thousand messages per minute per instance** even with Kafka clients favoring consistency"
msgstr "現在のプラットフォームは、1分間に大量のメッセージを処理することができるため、このような事態を恐れることはないのです。私たちの危機的なシナリオでは、Kafkaクライアントが一貫性を重視する場合でも、 *1インスタンスあたり1分間に最大50万メッセージまで* プラットフォームをベンチマークしています。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:200
#, fuzzy
msgid "And thanks to Quarkus, a single instance of a component uses **as less as 0.5 CPU and 512MB or memory** (heap size is around 120MB), we could go less as all the CPU and memory is not used, but it’s already very little so we prefer to be conservative on this. Oh, yes, and this is on Java 16 and using the JVM."
msgstr "Quarkusのおかげで、コンポーネントの1つのインスタンスが使用する *CPUは0.5、メモリは512MB* （ヒープサイズは約120MB）と *少なく* 、CPUとメモリをすべて使用しないのでもっと少なくできますが、すでに非常に少なくなっているので、この点は控えめにしたいところです。そうそう、これはJava 16でJVMを使った場合です。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:202
#, fuzzy
msgid "To put it in another words, we achieve a **1 millions messages per minutes throughput per CPU per GB of memory** on a real world streaming application thanks to Quarkus and MicroProfile reactive messaging. This is quite an impressive throughput density, and we are very happy with it."
msgstr "別の言葉で言うと、QuarkusとMicroProfileのリアクティブメッセージングによって、現実世界のストリーミングアプリケーションで、1 *GBのメモリあたりCPUあたり1分間に100万メッセージのスループットを* 達成しました。これは非常に印象的なスループット密度であり、私たちはこれに非常に満足しています。"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:204
#, fuzzy
msgid "A few last words, we would like to especially thank the Quarkus community for helping us, answering our questions again and again, improving Quarkus on each release and for the really good job they made with Quarkus and the fabulous MicroProfile Reactive Messaging framework! Thank you all, you’re amazing!"
msgstr "最後に、私たちを助けてくれ、何度も質問に答えてくれ、リリースのたびにQuarkusを改良してくれ、Quarkusと素晴らしいMicroProfile Reactive Messagingフレームワークで本当に良い仕事をしてくれたQuarkusコミュニティに特に感謝したいです！皆さん、本当にありがとうございました！"

#. type: Plain Text
#: upstream/_posts/2021-09-13-decathlon-user-story.adoc:206
#, fuzzy
msgid "__This article has been written and proofread by all the members of the Age of Access Accelerator team.__"
msgstr "_この記事は、Age of Access Acceleratorチームのメンバー全員で執筆・校正しています。_"
