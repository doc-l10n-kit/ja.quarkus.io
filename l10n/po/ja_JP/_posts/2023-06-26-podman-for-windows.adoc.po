msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:2
msgid "post"
msgstr "post"

#. type: YAML Front Matter
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:3
#, fuzzy
msgid "Podman for Windows"
msgstr "Windows用Podman"

#. type: YAML Front Matter
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:4
#, fuzzy
msgid "2023-06-26"
msgstr "2023-06-26"

#. type: YAML Front Matter
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:5
#, fuzzy
msgid "development-tips windows"
msgstr "開発のヒント"

#. type: YAML Front Matter
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:6
#, fuzzy
msgid "karm"
msgstr "業"

#. type: Title =
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:10
#, fuzzy
msgid "Quarkus Native with Podman for Windows"
msgstr "QuarkusネイティブとWindows用Podman"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:14
#, fuzzy
msgid ""
"Developers who use Windows workstations might face the challenge of running Linux-native workflows.\n"
"One way to achieve this is by using Podman, a container engine that provides a command line capability\n"
"to run Linux containers. Podman supports running containers both as \"rootful\" and as \"rootless\",\n"
"with the latter being the default that doesn't require elevated privileges. In this blog post,\n"
"we'll explore how to use Podman with Quarkus Native to build and run applications on Windows."
msgstr "Windowsワークステーションを使用している開発者は、Linuxネイティブのワークフローを実行するという課題に直面するかもしれない。これを実現する1つの方法は、Linuxコンテナを実行するコマンドライン機能を提供するコンテナ・エンジン、Podmanを使用することだ。Podmanは「rootful」と「rootless」の両方でコンテナの実行をサポートしており、後者は昇格特権を必要としないデフォルトだ。このブログ記事では、Quarkus NativeでPodmanを使用して、Windows上でアプリケーションをビルドして実行する方法について説明します。"

#. type: Title ==
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:20
#, fuzzy
msgid "Installing Podman on Windows"
msgstr "WindowsにPodmanをインストールする"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:22
#, fuzzy
msgid ""
"In my latest experience, I used two setups, a Windows 10 on an older baremetal Xeon based desktop\n"
"and a Windows 10 Qemu driven VM on my CentOS 8 Stream Linux laptop. The former being without any\n"
"hiccups using https://github.com/containers/podman/blob/main/docs/tutorials/podman-for-windows.md[Podman for Windows]\n"
"guide while the latter required some link:/assets/examples/posts/podman-for-windows/win10.xml.txt[manual tweaks] in\n"
"`+/etc/libvirt/qemu/win10.xml+` to allow for nested virtualization.\n"
"Your mileage might vary with guest Windows and hypervisor versions though."
msgstr "私の最新の経験では、古いベアメタルXeonベースのデスクトップ上のWindows 10と、CentOS 8 Stream Linuxラップトップ上のWindows 10 Qemu駆動VMの2つのセットアップを使用した。前者は link:https://github.com/containers/podman/blob/main/docs/tutorials/podman-for-windows.md[Windows] ガイド link:https://github.com/containers/podman/blob/main/docs/tutorials/podman-for-windows.md[用の] Podmanを使って何の問題もなく、後者はネストされた仮想化を可能にするために `/etc/libvirt/qemu/win10.xml` link:/assets/examples/posts/podman-for-windows/win10.xml.txt[。] ゲストのWindowsやハイパーバイザーのバージョンによって異なるかもしれないが。"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:29
#, fuzzy
msgid ""
"Besides the command line, there is also a full Podman Desktop experience available on https://podman-desktop.io/.\n"
"The installer checks your setup and guides you:"
msgstr "コマンドラインだけでなく、 https://podman-desktop.io/ 、Podman Desktopをフルに利用することもできます。インストーラーがセットアップをチェックし、ガイドしてくれます："

#. type: Title ==
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:34
#, fuzzy
msgid "Quarkus Native builder image"
msgstr "Quarkus Nativeビルダーイメージ"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:36
#, fuzzy
msgid ""
"Both the latest Quarkus 2 and Quarkus 3 autodetects whether either Podman or Docker is installed, and it uses\n"
"it to run containers."
msgstr "最新のQuarkus 2とQuarkus 3は、PodmanかDockerのどちらかがインストールされているかを自動検出し、それを使ってコンテナを実行する。"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:39
#, fuzzy
msgid ""
"We will use a QuickStart example that watermarks images. The example depends on Quarkus AWT extension that is not yet\n"
"ported to run natively on Windows, yet we use a Windows workstation to develop our Java code, so using a Linux container to do the\n"
"native build suits us well. We use https://github.com/cmderdev/cmder[cmder] terminal on Windows, but a plain cmd prompt\n"
"would do too."
msgstr "ここでは、画像に透かしを入れるQuickStartのサンプルを使用します。このサンプルはQuarkus AWTエクステンションに依存しているが、Windows上でネイティブに動作するようにまだ移植されていない。Windowsでは link:https://github.com/cmderdev/cmder[cmder] ターミナルを使っているが、普通のcmdプロンプトでもいい。"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:51
#, fuzzy
msgid ""
"Depending on your Podman installation, you might need to run `+podman machine start+` too.\n"
"link:/assets/examples/posts/podman-for-windows/podman-win-output-sdasff.txt[Podman output]."
msgstr "Podmanのインストールによっては、 `podman machine start` 。Podman link:/assets/examples/posts/podman-for-windows/podman-win-output-sdasff.txt[の出力] 。"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:53
#, fuzzy
msgid ""
"C:\\tmp\\quarkus-quickstarts\\awt-graphics-rest-quickstart (development -> origin)\n"
"λ mvnw package -Dnative -Dquarkus.native.container-build=true -Dquarkus.platform.version=3.1.2.Final"
msgstr "C:㊟mvnw package -Dnative -Dquarkus.native.container-build=true -Dquarkus.platform.version=3.1.2.Final"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:57
#, fuzzy
msgid "link:/assets/examples/posts/podman-for-windows/podman-win-awt-quickstart-build.txt[Full output]"
msgstr "link:/assets/examples/posts/podman-for-windows/podman-win-awt-quickstart-build.txt[フル出力]"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:59
#, fuzzy
msgid ""
"We can see in the log that Quarkus detected that we had `+podman.exe+` available, and it used Mandrel builder image\n"
"to do the build, i.e. our Java bytecode alongside with various resources and properties was made available inside\n"
"a Linux container where a `+native-image+` tool created an ELF64 Linux executable. We can see that artifact right in\n"
"our `+target+` directory now:"
msgstr "Quarkusは、私たちが `podman.exe` 、Mandrelビルダーイメージを使用してビルドを実行したことがログで確認できます。つまり、さまざまなリソースやプロパティと一緒にJavaバイトコードがLinuxコンテナ内で利用可能になり、 `native-image` ツールがELF64 Linux実行可能ファイルを作成しました。その成果物は、 `target` ディレクトリで見ることができます："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:72
#, fuzzy
msgid ""
"We cannot run the executable here on our Windows workstation, yet we can immediately use another Linux image to\n"
"run it in a container:"
msgstr "この実行可能ファイルをWindowsワークステーションで実行することはできないが、別のLinuxイメージを使ってコンテナ内ですぐに実行することができる："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:80
#, fuzzy
msgid "link:/assets/examples/posts/podman-for-windows/podman-win-container-build.txt[Full output]"
msgstr "link:/assets/examples/posts/podman-for-windows/podman-win-container-build.txt[フル出力]"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:82
#, fuzzy
msgid "Let’s run it:"
msgstr "走らせてみよう："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:96
#, fuzzy
msgid "We can have the application watermark an image for us now. First, we need some image to watermark:"
msgstr "このアプリケーションを使えば、画像に透かしを入れることができる。まず、透かしを入れる画像が必要です："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:106
#, fuzzy
msgid "Next, we use our locally running container to watermark it:"
msgstr "次に、ローカルで実行中のコンテナを使って透かしを入れる："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:114
#, fuzzy
msgid "And see the result, word Mandrel in the top left corner and a Quarkus logotype in the bottom right corner:"
msgstr "左上にMandrelの文字、右下にQuarkusのロゴタイプ："

#. type: Title ==
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:124
#, fuzzy
msgid "Linux containers in your test flow"
msgstr "テストフローにおけるLinuxコンテナ"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:126
#, fuzzy
msgid "You can use Podman to run your tests in Linux containers too. For example, you can take advantage of the `+quarkus-container-image-docker+` extension. Add it to the `+pom.xml+`:"
msgstr "Podmanを使ってLinuxコンテナでテストを実行することもできます。例えば、 `quarkus-container-image-docker` のエクステンションを利用できます。 `pom.xml` に追加してください："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:144
#, fuzzy
msgid "Let's run it:"
msgstr "走らせてみよう："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:151
#, fuzzy
msgid "Here is the link:/assets/examples/posts/podman-for-windows/podman-win-test-in-linux-container.txt[Full output]."
msgstr "これが link:/assets/examples/posts/podman-for-windows/podman-win-test-in-linux-container.txt[フル出力] だ。"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:153
#, fuzzy
msgid "Browsing the log, we can see that the JVM based test passed first:"
msgstr "ログを見ると、JVMベースのテストが最初にパスしている："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:163
#, fuzzy
msgid "Then the Linux builder image is used to build a Linux executable:"
msgstr "次に、Linuxビルダー・イメージを使ってLinux実行可能ファイルをビルドする："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:175
#, fuzzy
msgid "Next we can see that the integration testsuite decided to build a Linux container image with our newly built executable in it:"
msgstr "次に、統合テストサイトが、新しくビルドした実行可能ファイルを入れたLinuxコンテナイメージをビルドすることにしたことがわかる："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:185
#, fuzzy
msgid "Finally, the integration testsuite starts the application in a container and runs the tests against it:"
msgstr "最後に、統合テストスイートはコンテナ内でアプリケーションを起動し、それに対してテストを実行する："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:195
#, fuzzy
msgid "We can check in the preserved `+target/quarkus.log+` that the application was indeed ran in a Linux container as a native executable:"
msgstr "保存された `target/quarkus.log` 、アプリケーションがLinuxコンテナ内でネイティブ実行可能ファイルとして確かに実行されたことが確認できる："

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:210
#, fuzzy
msgid "This way we can have our test application executed in a Linux container while keeping our Windows development environment."
msgstr "こうすることで、Windowsの開発環境を維持したまま、Linuxコンテナでテスト・アプリケーションを実行することができる。"

#. type: Title ==
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:212
#, fuzzy
msgid "Troubleshooting"
msgstr "トラブルシューティング"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:213
#, fuzzy
msgid ""
"**File permissions:** The Linux executable file might have missing its executable flag, so you might need to set\n"
"it in your Dockerfile as we do in the Quickstart AWT example, i.e. `+RUN chmod \"ugo+x\" /work/application+`."
msgstr "*ファイルのパーミッション：* Linuxの実行可能ファイルには実行可能フラグがない可能性があるので、Quickstart AWTの例で行っているように、Dockerfileで実行可能フラグを設定する必要があるかもしれません（ `RUN chmod \"ugo+x\" /work/application` ."

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:215
#, fuzzy
msgid ""
"**Podman machine must be inited:** If something goes south, an Administrator can fix it by removing the machine\n"
"(the Linux VM providing podman services), e.g. `+podman machine rm \"podman-machine-default\"+` and then\n"
"`+podman machine init+`."
msgstr "*Podmanマシンを起動する必要があります：* 何か問題が起きたら、管理者はマシン（Podmanサービスを提供しているLinux VM）を削除することで解決できます。例えば、 `podman machine rm \"podman-machine-default\"` 、次に `podman machine init` 。"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:218
#, fuzzy
msgid ""
"*Directory or a file access:* When more services or more complex multimodule projects are being built, one could\n"
"hit `+The process cannot access the file because it is being used by another process+`. The easiest way to debug\n"
"such situation is to use https://download.sysinternals.com/files/Handle.zip[Handle] tool by Sysinternals."
msgstr "*ディレクトリやファイルへのアクセス：* より多くのサービスやより複雑なマルチモジュールプロジェクトがビルドされている場合、 `The process cannot access the file because it is being used by another process` 。 このような状況をデバッグする最も簡単な方法は、Sysinternalsの link:https://download.sysinternals.com/files/Handle.zip[Handle] ツールを使うことです。"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:222
#, fuzzy
msgid "Note that none of the aforementioned situations is Quarkus specific per se."
msgstr "前述のどの状況も、Quarkus特有のものではないことに注意してほしい。"

#. type: Title ==
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:224
msgid "Conclusion"
msgstr "まとめ"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:226
#, fuzzy
msgid "Podman is perfectly capable of running your Linux containers on Windows, being it test apps or databases. It is definitely worth trying out."
msgstr "Podmanは、テストアプリであれデータベースであれ、Windows上でLinuxコンテナを実行することができる。試す価値はある。"

#. type: Plain Text
#: upstream/_posts/2023-06-26-podman-for-windows.adoc:228
#, fuzzy
msgid "Do you have a question regarding this post? Feel free to hit us up on https://quarkusio.zulipchat.com/#[Zulip chat], https://stackoverflow.com/questions/tagged/quarkus%20podman?sort=Newest[Stack Overflow] or on https://github.com/quarkusio/quarkus/issues?q=label%3Aenv%2Fpodman[GitHub]."
msgstr "この投稿について質問がありますか？ link:https://quarkusio.zulipchat.com/#[Zulipチャット] 、 link:https://stackoverflow.com/questions/tagged/quarkus%20podman?sort=Newest[Stack Overflow] 、 link:https://github.com/quarkusio/quarkus/issues?q=label%3Aenv%2Fpodman[GitHubで] お気軽にお問い合わせください。"
