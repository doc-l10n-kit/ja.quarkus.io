msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:2
msgid "post"
msgstr "post"

#. type: Title =
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:12
#, fuzzy
msgid "Kubernetes-Native Development with Quarkus and Eclipse JKube"
msgstr "QuarkusとEclipse JKubeによるKubernetes-Native開発。"

#. type: YAML Front Matter
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:4
#, fuzzy
msgid "2023-02-23"
msgstr "2023-02-23"

#. type: YAML Front Matter
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:5
#, fuzzy
msgid "cloud containers kubernetes openshift"
msgstr "クラウドコンテナ kubernetes Openshift"

#. type: YAML Front Matter
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:6
#, fuzzy
msgid "What is Eclipse JKube Remote Development and how can it help developers build Kubernetes-native applications with Quarkus."
msgstr "Eclipse JKube Remote Developmentとは何か、そしてQuarkusでKubernetesネイティブアプリケーションを構築する開発者をどのように支援することができるのか。"

#. type: YAML Front Matter
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:7
msgid "edeandrea"
msgstr "edeandrea"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:14
#, fuzzy
msgid "This article explains what Eclipse JKube Remote Development is and how can it help developers build Kubernetes-native applications with Quarkus."
msgstr "この記事では、Eclipse JKube Remote Developmentとは何か、そしてQuarkusを使用してKubernetesネイティブアプリケーションを構築する開発者をどのように支援できるかを説明します。"

#. type: Title ==
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:16
msgid "Introduction"
msgstr "はじめに"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:18
#, fuzzy
msgid "As mentioned in my previous article, https://developers.redhat.com/articles/2022/12/12/kubernetes-native-inner-loop-development-quarkus[_Kubernetes-native inner loop development with Quarkus_^], microservices don’t exist in a vacuum. They typically communicate with other services, such as databases, message brokers, or other microservices. Because of this distributed nature, developers often struggle to develop (and test!) individual microservices that are part of a larger system."
msgstr "前回の記事「Quarkusを使ったKubernetes link:https://developers.redhat.com/articles/2022/12/12/kubernetes-native-inner-loop-development-quarkus[_ネイティブなインナーループ開発_] 」で述べたように、マイクロサービスは真空の中に存在するわけではありません。マイクロサービスは通常、データベースやメッセージブローカー、他のマイクロサービスなど、他のサービスと通信します。このような分散型の性質のため、開発者は、より大きなシステムの一部である個々のマイクロサービスを開発（およびテスト！）することにしばしば苦労します。"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:20
#, fuzzy
msgid "The previous article examines some common _inner-loop_ development cycle challenges and shows how Quarkus, combined with other technologies, can help solve some of the challenges. Eclipse JKube Remote Development was not one of the technologies mentioned because it did not exist when the article was written. Now that it does exist, it certainly belongs to be mentioned."
msgstr "前回の記事では、 _インナーループ_ 開発サイクルの一般的な課題をいくつか検証し、Quarkusと他のテクノロジーを組み合わせることで、課題のいくつかを解決できることを示しました。Eclipse JKube Remote Developmentは、この記事が書かれた当時は存在しなかったため、言及された技術の1つではありませんでした。記事が書かれた当時は存在しなかったため、Eclipse JKube Remote Developmentは言及されなかったが、現在は存在するため、言及されるべき技術であることは間違いない。"

#. type: Title ==
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:22
#, fuzzy
msgid "What is Eclipse JKube Remote Development?"
msgstr "Eclipse JKubeリモート開発とは？"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:24
#, fuzzy
msgid "https://www.eclipse.org/jkube[Eclipse JKube^] provides tools that help bring Java applications to Kubernetes and OpenShift. It is a collection of plugins and libraries for building container images and generating and deploying Kubernetes or OpenShift manifests."
msgstr "link:https://www.eclipse.org/jkube[Eclipse JKubeは] 、JavaアプリケーションをKubernetesやOpenShiftに導入するためのツールを提供します。コンテナイメージの構築、KubernetesやOpenShiftのマニフェストの生成とデプロイを行うためのプラグインやライブラリのコレクションである。"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:26
#, fuzzy
msgid "https://blog.marcnuri.com/eclipse-jkube-1-10#jkube-image-remote-dev[Eclipse JKube Remote Development^] is a preview feature first released as part of Eclipse JKube 1.10. This new feature is centered around Kubernetes, allowing developers the ability to run and debug Java applications from a local machine while connected to a Kubernetes cluster. It is logically similar to placing a local development machine inside a Kubernetes cluster. Requests from the cluster can flow into a local development machine, while outgoing requests can flow back onto the cluster."
msgstr "link:https://blog.marcnuri.com/eclipse-jkube-1-10#jkube-image-remote-dev[Eclipse JKube Remote Developmentは] 、Eclipse JKube 1.10の一部として最初にリリースされたプレビュー機能です。この新機能はKubernetesを中心としたもので、開発者はKubernetesクラスターに接続しながらローカルマシンからJavaアプリケーションを実行しデバッグすることができます。論理的には、ローカルの開発マシンをKubernetesクラスタの中に置くのと似ています。クラスタからのリクエストはローカルの開発マシンに流れ込み、発信されたリクエストはクラスタに戻ることができる。"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:28
#, fuzzy
msgid "Remember this diagram from the https://developers.redhat.com/articles/2022/12/12/kubernetes-native-inner-loop-development-quarkus[first article^] using the https://github.com/quarkusio/quarkus-super-heroes[Quarkus Superheroes^]?"
msgstr "Quarkus link:https://github.com/quarkusio/quarkus-super-heroes[Superheroesを] 使った link:https://developers.redhat.com/articles/2022/12/12/kubernetes-native-inner-loop-development-quarkus[最初の記事の] この図を覚えていますか？"

#. type: Title ==
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:30
#, fuzzy
msgid "Local development environment logically inserted into a Kubernetes cluster"
msgstr "Kubernetesクラスタに論理的に挿入されたローカル開発環境"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:33
#, fuzzy
msgid "We previously used https://skupper.io[Skupper^] as a proxy to connect a Kubernetes cluster to a local machine. As of the 1.10 release, Eclipse JKube removes the need to use Skupper or install any of its components on the Kubernetes cluster or your local machine. Eclipse JKube handles all the underlying communication to and from the Kubernetes cluster by mapping Kubernetes `Service` ports to and from the local machine."
msgstr "以前、Kubernetesクラスターをローカルマシンに接続するためのプロキシとして link:https://skupper.io[Skupperを] 使用しました。1.10リリースでは、Eclipse JKubeは、KubernetesクラスターやローカルマシンにSkupperを使用したり、そのコンポーネントをインストールしたりする必要性を排除しています。Eclipse JKubeは、Kubernetes `Service` ポートをローカルマシンとマッピングすることで、Kubernetesクラスタとのすべての基礎的な通信を処理します。"

#. type: Title ==
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:35
#, fuzzy
msgid "Eclipse JKube Remote Development and Quarkus"
msgstr "Eclipse JKube リモート開発とQuarkus"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:37
#, fuzzy
msgid "The new Eclipse JKube Remote Development feature can make the Quarkus Superheroes example very interesting. If we wanted to reproduce the scenario shown in *Figure 1*, all we’d have to do is re-configure the `rest-fights` application locally a little bit and then run it in https://quarkus.io/guides/maven-tooling#dev-mode[Quarkus dev mode^]."
msgstr "Eclipseの新しいJKubeリモート開発機能によって、Quarkus Superheroesの例を非常に興味深いものにすることができます。 *図* 1のシナリオを再現しようと思えば、 `rest-fights` のアプリケーションをローカルで少し設定し直して、Quarkusの link:https://quarkus.io/guides/maven-tooling#dev-mode[dev] モードで実行すればよいのです。"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:39
#, fuzzy
msgid "First, https://github.com/quarkusio/quarkus-super-heroes#deploying-to-kubernetes[deploy the Quarkus Superheroes to Kubernetes^]. Then, add the Eclipse JKube configuration into the `<plugins>` section in the `rest-fights/pom.xml` file:"
msgstr "まず、Quarkus link:https://github.com/quarkusio/quarkus-super-heroes#deploying-to-kubernetes[Superheroesを] Kubernet link:https://github.com/quarkusio/quarkus-super-heroes#deploying-to-kubernetes[esにデプロイ] します。次に、 `rest-fights/pom.xml` ファイルの `<plugins>` セクションに Eclipse JKube の設定を追加します："

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:85
#, fuzzy
msgid "Version 1.11.0 of the `openshift-maven-plugin` was the latest version as of the writing of this article. You may want to check if there is a newer version available."
msgstr "`openshift-maven-plugin` のバージョン 1.11.0 は、この記事を書いている時点の最新版です。より新しいバージョンがあるかどうか、ご確認ください。"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:87
#, fuzzy
msgid "This configuration tells OpenShift to proxy requests going to the OpenShift `Service` named `rest-fights` on port `8082` to the local machine on the same port. Additionally, it forwards the local machine ports `8083`, `8084`, `8086`, `9092`, and `4317` back to the OpenShift cluster and binds them to various OpenShift Services."
msgstr "この構成は、ポート `8082` で `rest-fights` という名前の OpenShift `Service` に向かうリクエストを、同じポートのローカルマシンにプロキシするように OpenShift に指示します。さらに、ローカルマシンのポート `8083` , `8084` , `8086` , `9092` , `4317` を OpenShift クラスタに転送し、様々な OpenShift サービスにバインドします。"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:91
#, fuzzy
msgid "The code listing above uses the https://www.eclipse.org/jkube/docs/openshift-maven-plugin[JKube OpenShift Maven Plugin^]. If you are using other Kubernetes variants, you could use the https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin[JKube Kubernetes Maven Plugin^] with the same configuration."
msgstr "上記のコードリストは、 link:https://www.eclipse.org/jkube/docs/openshift-maven-plugin[JKube OpenShift Maven Pluginを] 使用しています。他のKubernetesバリアントを使用している場合は、同じ構成で link:https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin[JKube Kubernetes Maven Pluginを] 使用することができます。"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:93
#, fuzzy
msgid "If you are using https://gradle.org[Gradle^], there is also a https://www.eclipse.org/jkube/docs/openshift-gradle-plugin[JKube OpenShift Gradle Plugin^] and https://www.eclipse.org/jkube/docs/kubernetes-gradle-plugin[JKube Kubernetes Gradle Plugin^] available."
msgstr "link:https://gradle.org[Gradleを] 使用する場合は、 link:https://www.eclipse.org/jkube/docs/openshift-gradle-plugin[JKube OpenShift Gradle Pluginと] link:https://www.eclipse.org/jkube/docs/kubernetes-gradle-plugin[JKube Kubernetes Gradle Pluginも] 用意されています。"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:96
#, fuzzy
msgid "Now that the configuration is in place you need to open two terminals in the `rest-fights` directory. In the first terminal, run `./mvnw oc:remote-dev` to start the remote dev proxy service. Once that starts, move to the second terminal and run"
msgstr "設定が完了したので、 `rest-fights` ディレクトリで 2 つのターミナルを開く必要があります。最初のターミナルで、 `./mvnw oc:remote-dev` を実行して、リモートdevプロキシサービスを開始します。起動したら、2つ目のターミナルに移動して、次のように実行します。"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:105
#, fuzzy
msgid "This command starts up a local instance of the `rest-fights` application in Quarkus dev mode. Requests from the cluster will come into your local machine. The local application will connect to other services back on the cluster, such as the `rest-villains` and `rest-heroes` applications, the https://kafka.apache.org[Kafka^] broker, the https://www.apicur.io/registry[Apicurio Registry^] instance, and the https://opentelemetry.io/docs/collector[OpenTelemetry collector^]. With this configuration, https://quarkus.io/guides/dev-services[Quarkus Dev Services^] will spin up a local MongoDB instance for the locally-running application, illustrating how you could combine local services with other services available on the remote cluster."
msgstr "このコマンドは、Quarkus devモードで `rest-fights` アプリケーションのローカルインスタンスを起動します。クラスタからのリクエストは、ローカルマシンにやってきます。このローカルアプリケーションは、 `rest-villains` および `rest-heroes` アプリケーション、 link:https://kafka.apache.org[Kafka] ブローカー、 link:https://www.apicur.io/registry[Apicurio Registry] インスタンス、OpenTelemetry link:https://opentelemetry.io/docs/collector[コレクターなど] 、クラスタに戻る他のサービスに接続します。この構成では、 link:https://quarkus.io/guides/dev-services[Quarkus] Dev Servicesが、ローカルで実行するアプリケーション用にローカルのMongoDBインスタンスをスピンアップし、ローカルサービスとリモートクラスタで利用できる他のサービスを組み合わせることができることを説明しています。"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:107
#, fuzzy
msgid "You can live code changes to the local application while requests flow through the Kubernetes cluster, down to your local machine, and then back to the cluster! You could even enable https://quarkus.io/guides/continuous-testing[continuous testing^] while you make local changes to ensure your changes do not break anything."
msgstr "Kubernetesクラスターを経由してローカルマシンにリクエストが流れ、さらにクラスターに戻る間に、ローカルアプリケーションのコード変更を実行することができます！ローカルに変更を加えている間、 link:https://quarkus.io/guides/continuous-testing[継続的なテストを] 有効にして、変更が何かを壊していないことを確認することも可能です。"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:109
#, fuzzy
msgid "The main difference between Quarkus Remote Development and Eclipse JKube Remote Development is that, with Quarkus Remote Development, the application is running in the remote Kubernetes cluster. Local changes are synchronized between the local machine and the remote environment. With JKube Remote Development, the application runs on the local machine, and traffic flows from the cluster, into the local machine, and back out to the cluster."
msgstr "Quarkus Remote DevelopmentとEclipse JKube Remote Developmentの主な違いは、Quarkus Remote Developmentでは、アプリケーションはリモートのKubernetesクラスタで実行されることです。ローカルの変更は、ローカルマシンとリモート環境との間で同期されます。JKube Remote Developmentでは、アプリケーションはローカルマシンで実行され、トラフィックはクラスタからローカルマシンに流れ込み、クラスタに戻ります。"

#. type: Title ==
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:111
#, fuzzy
msgid "Wrap-Up"
msgstr "まとめ"

#. type: Plain Text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:113
#, fuzzy
msgid "As you can see, Eclipse JKube Remote Development compliments the https://quarkus.io/developer-joy[Quarkus Developer Joy^] story quite well. It allows you to easily combine the power of Quarkus with Kubernetes to help create a better developer experience, whether local, distributed, or somewhere in between."
msgstr "ご覧のように、Eclipse JKube Remote Developmentは、Quarkus link:https://quarkus.io/developer-joy[Developer Joyの] ストーリーを非常にうまく補完しています。QuarkusのパワーとKubernetesを簡単に組み合わせることができ、ローカル、分散、またはその中間であろうと、より良い開発者体験を生み出すのに役立ちます。"
