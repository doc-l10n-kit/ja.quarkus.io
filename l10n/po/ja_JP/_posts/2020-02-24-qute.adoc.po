msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2020-02-24-qute.adoc:2
msgid "post"
msgstr "post"

#. type: YAML Front Matter
#: upstream/_posts/2020-02-24-qute.adoc:3
#, fuzzy
msgid "Qute - Why (Not Just) Yet Another Templating Engine"
msgstr "Qute - テンプレーティングエンジンが登場した理由"

#. type: YAML Front Matter
#: upstream/_posts/2020-02-24-qute.adoc:4
#, fuzzy
msgid "2020-02-24 00:00 +0100"
msgstr "2020-02-24 00:00 +0100"

#. type: YAML Front Matter
#: upstream/_posts/2020-02-24-qute.adoc:5
msgid "mkouba"
msgstr "mkouba"

#. type: YAML Front Matter
#: upstream/_posts/2020-02-24-qute.adoc:6
#, fuzzy
msgid "Qute - a templating engine designed specifically to meet the Quarkus needs."
msgstr "Qute - Quarkusのニーズを満たすために特別に設計されたテンプレートエンジンです。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:11
#, fuzzy
msgid "Qute is an experimental feature."
msgstr "Quteは実験的な機能です。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:13
#, fuzzy
msgid "There is no guarantee of stability nor long term presence in the platform until the solution matures."
msgstr "ソリューションが成熟するまでは、プラットフォームにおける安定性や長期的なプレゼンスが保証されるわけではありません。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:15
#, fuzzy
msgid "An https://quarkus.io/guides/qute[introduction guide] and a more comprehensive https://quarkus.io/guides/qute-reference[reference guide] are available."
msgstr "link:https://quarkus.io/guides/qute[イントロダクションガイドと] 、より分かりやすい link:https://quarkus.io/guides/qute-reference[リファレンスガイドを] 用意しています。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:18
#, fuzzy
msgid ""
"Let's start with a very good question: _\"Why yet another templating engine?\"_.\n"
"There are plenty of templating libraries in Java.\n"
"And Quarkus is known to build on top of \"Best of Breed Libraries and Standards\".\n"
"That's true.\n"
"On the other hand, the Quarkus community is also a powerful innovation catalyst.\n"
"And so we decided to start Qute (QUarkus TEmplates) - a templating engine designed specifically to meet the Quarkus needs.\n"
"We believe that we can bring new ideas even to such an explored area as the templating is."
msgstr "まず、とても良い質問から始めましょう： _「なぜまた別のテンプレート・エンジン_ なのか？Javaにはテンプレート化ライブラリがたくさんあります。そしてQuarkusは、「Best of Breed Libraries and Standards」の上に構築することで知られています。それはその通りです。一方で、Quarkusのコミュニティは、強力なイノベーションの触媒でもあります。そこで私たちは、Qute（QUarkus TEmplates）-Quarkusのニーズを満たすために特別に設計されたテンプレートエンジンを始めることにしました。私たちは、テンプレートという未開拓の分野でも、新しいアイデアをもたらすことができると信じています。"

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:26
#, fuzzy
msgid "Basic Ideas"
msgstr "基本的な考え方"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:28
#, fuzzy
msgid ""
"Our main goal is to provide an opinionated innovative templating engine.\n"
"But we don't want to reinvent the wheel.\n"
"Instead, we got inspired by existing technologies.\n"
"Just a few examples:"
msgstr "私たちの主な目標は、意見の一致した革新的なテンプレートエンジンを提供することです。しかし、私たちは車輪の再発明をしたいわけではありません。その代わりに、既存の技術からインスピレーションを得ました。ほんの数例です："

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:33
#, fuzzy
msgid "The https://quarkus.io/guides/qute-reference#syntax-and-building-blocks[syntax] is mainly inspired by https://handlebarsjs.com/[Handlebars] and https://www.dustjs.com/[Dust.js]."
msgstr "link:https://quarkus.io/guides/qute-reference#syntax-and-building-blocks[構文は] 主に link:https://handlebarsjs.com/[Handlebarsと] link:https://www.dustjs.com/[Dust.jsに] 触発されています。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:34
#, fuzzy
msgid "The https://quarkus.io/guides/qute-reference#include_helper[template inheritance] is inspired by https://en.wikipedia.org/wiki/Facelets[Facelets] and https://docs.djangoproject.com/en/3.0/ref/templates/language/[Django]."
msgstr "link:https://quarkus.io/guides/qute-reference#include_helper[テンプレート継承は] 、 link:https://en.wikipedia.org/wiki/Facelets[Faceletsと] link:https://docs.djangoproject.com/en/3.0/ref/templates/language/[Djangoに] インスパイアされています。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:35
#, fuzzy
msgid "Qute supports the https://en.wikipedia.org/wiki/Elvis_operator[elvis operator] you might be familiar with from https://groovy-lang.org/[Groovy] and https://kotlinlang.org/[Kotlin]."
msgstr "Quteは、 link:https://groovy-lang.org/[Groovyや] link:https://kotlinlang.org/[Kotlinで] お馴染みの link:https://en.wikipedia.org/wiki/Elvis_operator[elvis演算] 子をサポートしています。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:36
#, fuzzy
msgid "https://quarkus.io/guides/qute-reference#template_extension_methods[Extension methods]  that can be used to extend the data classes with new functionality are also inspired by modern languages."
msgstr "データ・クラスを新しい機能で拡張するために使用できる link:https://quarkus.io/guides/qute-reference#template_extension_methods[拡張メソッドも] 、現代的な言語からヒントを得ている。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:37
#, fuzzy
msgid "If you come from the world of JSP/JSF/Facelets you'll appreciate that `@Named` CDI beans can be referenced directly in any template through the `inject` namespace, e.g. `{inject:foo.price}`. See https://quarkus.io/guides/qute-reference#injecting-beans-directly-in-templates[Injecting Beans Directly In Templates] for more information."
msgstr "`{inject:foo.price}` JSP/JSF/Faceletsの世界から来たのなら、 `@Named` CDI Beanは、 `inject` 名前空間を通して、どのテンプレートでも直接参照できることを理解するでしょう。詳しくは、 link:https://quarkus.io/guides/qute-reference#injecting-beans-directly-in-templates[テンプレートに直接Beanを注入する] を参照してください。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:39
#, fuzzy
msgid ""
"But that's not all.\n"
"We introduce new features based on Quarkus principles..."
msgstr "しかし、それだけではありません。Quarkusの原則に基づいた新機能を紹介します...。"

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:42
#, fuzzy
msgid "Asynchronous Data Resolution - On The Way To Reactive"
msgstr "非同期データ解決 - リアクティブへの道を歩むために"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:44
#, fuzzy
msgid ""
"When we started to design Qute we had one important aspect in mind - the data resolution API should be asynchronous.\n"
"This allows for better resource utilization and fits the Quarkus reactive model.\n"
"Another consequence of this design decision is that it's possible to leverage non-blocking clients directly from a template, i.e. to asynchronously fetch data from various sources."
msgstr "Quteの設計を始めたとき、私たちは一つの重要な点を念頭に置いていました。これにより、リソースの有効活用が可能になり、Quarkusのリアクティブモデルに適合します。この設計上の決断のもう一つの結果は、テンプレートから直接ノンブロッキングクライアントを活用できること、つまり、様々なソースから非同期にデータをフェッチできることです。"

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:48
#, fuzzy
msgid "Non-blocking Client Data Fetching Example"
msgstr "ノンブロッキングクライアントデータフェッチ例"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:61
#, fuzzy
msgid "Parameter declaration - maps `client` to `org.acme.Client`. See the <<type-safe-templates,next section>> for more information."
msgstr "パラメータ宣言 - `client` を `org.acme.Client` に対応させる。 詳細は xref:type-safe-templates[次のセクションを] 参照。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:62
#, fuzzy
msgid "`org.acme.Client#getPullRequests()` is using a non-blocking Vert.x client to fetch the data directly from the GitHub API. Since the data resolution is asynchronous the thread is not blocked and can continue performing some other tasks:"
msgstr "`org.acme.Client#getPullRequests()` は、GitHub API から直接データを取得するためにノンブロッキング Vert.x クライアントを使用しています。データ解決は非同期なので、スレッドはブロックされることなく、他のタスクを実行し続けることができます："

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:82
msgid "Type-safe Templates"
msgstr "タイプセーフテンプレート"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:84
#, fuzzy
msgid ""
"Most of the templating engines are not type-safe, ie. do not prevent type errors.\n"
"It's quite natural because dynamicity in templates is very often practical.\n"
"On the other hand, a user is not protected from tedious errors caused by typos and various refactoring consequences.\n"
"Qute templates can be _optionally_ type-safe.\n"
"What does it actually mean?\n"
"A template may contain one or more *parameter declarations*.\n"
"A parameter declaration binds a concrete type information to a given identifier in the current context.\n"
"And what are the advantages of having a type-safe template?"
msgstr "テンプレート・エンジンの多くは、タイプセーフではありません。テンプレートに動的な機能を持たせることは実用的な場合が多いので、これはごく自然なことです。一方、ユーザは、タイプミスによる面倒なエラーや、リファクタリングによる様々な影響から保護されません。Quteのテンプレートは、 _オプションで_ タイプセーフにすることができます。これは、実際にどのような意味でしょうか？テンプレートには、1つまたは複数の *パラメータ宣* 言を含めることができます。パラメータ宣言は、具体的な型情報を、現在のコンテキストで、与えられた識別子にバインドします。タイプセーフのテンプレートは、どのような利点があるのでしょうか？"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:93
#, fuzzy
msgid "Quarkus validates _all expressions_ that reference a parameter declaration. If an invalid/incorrect expression is found the build fails."
msgstr "Quarkusでは、パラメータ宣言を参照する _すべての式_ が検証されます。無効な式や不正確な式が見つかった場合、ビルドは失敗します。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:95
#, fuzzy
msgid "In development mode, all files located in the `src/main/resources/templates` directory are watched for changes and modifications are immediately visible. That also implies that your application fails fast whenever a type error occurs."
msgstr "開発モードでは、 `src/main/resources/templates` ディレクトリにあるすべてのファイルが変更されていないか監視され、変更内容はすぐに表示されます。それはまた、型エラーが発生するたびにアプリケーションが高速に失敗することを意味します。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:97
#, fuzzy
msgid "A _value resolver_ is generated for all types used in parameter declarations so that it’s possible to access its properties without reflection. This is very useful when targeting GraalVM native images."
msgstr "パラメータ宣言で使用されるすべての型に対して、リフレクションなしでそのプロパティにアクセスできるように、 _値リゾルバが_ 生成されます。これはGraalVMのネイティブイメージをターゲットにするときに非常に便利です。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:98
#, fuzzy
msgid "We have few more ideas in our TODO list, such as performance optimizations for type-safe expressions, etc."
msgstr "TODOリストには、型安全式のパフォーマンス最適化など、他にもいくつかアイデアがあります。"

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:100
#, fuzzy
msgid "Type-safe Template Example"
msgstr "タイプセーフのテンプレート例"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:119
msgid "Parameter declaration - maps `foo` to `org.acme.Foo`."
msgstr "パラメーター宣言 - `foo` を `org.acme.Foo` にマップします。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:120
#, fuzzy
msgid "`{title}` is not validated - not matching a param declaration."
msgstr "`{title}` が検証されない - param宣言と一致しない。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:121
#, fuzzy
msgid "`{foo.message}` is validated. `org.acme.Foo` must have a property `message` or a matching template extension method must exist."
msgstr "`{foo.message}` が検証される。 は、プロパティ を持つか、一致するテンプレート拡張メソッドが存在する必要がある。 `org.acme.Foo` `message` "

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:122
#, fuzzy
msgid "`{foo.message}` is not validated because `foo` is overridden in the loop section and there is no type information available."
msgstr "`{foo.message}` は、ループ部で が上書きされ、型情報がないため、検証されません。 `foo` "

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:124
#, fuzzy
msgid "Only properties are currently validated in expressions; \"virtual methods\" such as `foo.getBar(baz.name)` are currently ignored."
msgstr "現在、式で検証されるのはプロパティのみです。 `foo.getBar(baz.name)` のような「仮想メソッド」は現在無視されます。"

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:126
#, fuzzy
msgid "First-class Quarkus Citizen"
msgstr "一級Quarkus市民。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:128
#, fuzzy
msgid "Despite the fact that Qute is highly optimized for Quarkus the core engine is developed as an independent library that could be integrated in any environment."
msgstr "QuteはQuarkusに高度に最適化されていますが、コアエンジンは独立したライブラリとして開発されており、どのような環境でも統合することが可能です。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:130
#, fuzzy
msgid "In Quarkus, all templates located in the `src/main/resources/templates` directory are validated and can be easily injected."
msgstr "Quarkusでは、 `src/main/resources/templates` ディレクトリにあるすべてのテンプレートが検証され、簡単にインジェクションすることができます。"

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:132
#, fuzzy
msgid "Template Injection Example"
msgstr "テンプレートインジェクションの例"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:152
#, fuzzy
msgid "The field name is used to locate the template. In this particular case, the container will attempt to locate a template with path `src/main/resources/templates/items.html`. If there is no such template available the build fails."
msgstr "フィールド名は、テンプレートの検索に使用されます。この場合、コンテナは、パス `src/main/resources/templates/items.html` を持つテンプレートを見つけようとします。利用可能なテンプレートがない場合、ビルドは失敗します。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:153
#, fuzzy
msgid "See the https://quarkus.io/guides/qute-reference#hello-world-example[Hello World Example] to explore the basic workflow."
msgstr "基本的なワークフローについては、「 link:https://quarkus.io/guides/qute-reference#hello-world-example[Hello World Example] 」を参照してください。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:155
#, fuzzy
msgid ""
"Moreover, a preconfigured `Engine` instance is provided and available for injection.\n"
"The `Engine` is a central point for template management and provides some low-level API."
msgstr "さらに、事前に設定された `Engine` インスタンスが提供され、注入に利用できます。 `Engine` はテンプレート管理の中心的存在で、いくつかの低レベルのAPIを提供します。"

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:158
msgid "RESTEasy Integration"
msgstr "RESTEasy 統合"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:160
#, fuzzy
msgid ""
"If used together with RESTEasy a resource method may return a `TemplateInstance` and the integration code takes care of all the necessary steps and renders the output to the response.\n"
"See https://quarkus.io/guides/qute-reference#resteasy-integration[RESTEasy Integration] for more information."
msgstr "RESTEasyと一緒に使用すると、リソースメソッドは `TemplateInstance` 、統合コードは必要なすべてのステップを処理し、レスポンスに出力をレンダリングすることができます。詳しくは、「 link:https://quarkus.io/guides/qute-reference#resteasy-integration[RESTEasy統合] 」をご覧ください。"

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:163
#, fuzzy
msgid "JAX-RS Resource Example"
msgstr "JAX-RSリソースの例"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:185
#, fuzzy
msgid "The field name is used to locate the template. In this particular case, we're injecting a template with path `templates/hello.txt`."
msgstr "フィールド名は、テンプレートの場所を特定するために使用されます。この特定のケースでは、パスが `templates/hello.txt` のテンプレートを注入しています。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:186
msgid "`Template.data()` returns a new template instance that can be customized before the actual rendering is triggered. In this case, we put the name value under the key `name`. The data map is accessible during rendering."
msgstr "`Template.data()` は、実際のレンダリングがトリガーされる前にカスタマイズできる新しいテンプレートインスタンスを返します。この場合、名前の値をキー `name` の下に置きます。データマップはレンダリング中にアクセス可能です。"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:187
msgid "Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation."
msgstr "レンダリングをトリガーしないことに注意してください - これは特別な `ContainerResponseFilter` の実装によって自動的に行われます。"

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:190
#, fuzzy
msgid "Mailer Integration"
msgstr "メーラーの統合"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:192
#, fuzzy
msgid ""
"Templates may come in handy when creating e-mail messages.\n"
"The Mailer extension integrates with Qute to provide a convenient way of sending e-mails.\n"
"In particular, the message body is automatically created using `+*.html+` and `+*.txt+` templates from the `src/main/resources/templates` directory.\n"
"See the https://quarkus.io/guides/mailer#message-body-based-on-qute-templates[Sending Emails] guide for more details."
msgstr "テンプレートは、電子メールメッセージを作成する際に便利です。Mailerエクステンションは、Quteと統合して、便利な電子メールの送信方法を提供します。特に、メッセージ本文は、 `src/main/resources/templates` ディレクトリにある `*.html` と `*.txt` のテンプレートを使って自動的に作成されます。詳しくは、「電子 link:https://quarkus.io/guides/mailer#message-body-based-on-qute-templates[メールの送信] 」ガイドをご覧ください。"

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:197
msgid "Conclusion"
msgstr "まとめ"

#. type: Plain Text
#: upstream/_posts/2020-02-24-qute.adoc:199
#, fuzzy
msgid ""
"Qute first landed in Quarkus 1.1.0.Final.\n"
"Since then we fixed many bugs and implemented some feature requests.\n"
"Feel free to join our community to stabilize the API, harden the implementation and explore the new possibilities!"
msgstr "Quteは、Quarkus 1.1.0.Finalで初上陸しました。それ以来、多くのバグを修正し、いくつかの機能要求を実装しています。APIを安定させ、実装を強化し、新しい可能性を追求するために、私たちのコミュニティに気軽に参加してください！"
