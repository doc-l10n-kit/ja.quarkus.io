msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:2
msgid "post"
msgstr "post"

#. type: YAML Front Matter
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:3
#, fuzzy
msgid "Micrometer is recommended for metrics with Quarkus 1.9"
msgstr "Quarkus1.9での測定には、Micrometerを推奨します。"

#. type: YAML Front Matter
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:4
#, fuzzy
msgid "2020-10-19"
msgstr "2020-10-19"

#. type: YAML Front Matter
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:5
#, fuzzy
msgid "metrics announcement micrometer"
msgstr "メトリクス・アナウンス・マイクロメーター"

#. type: YAML Front Matter
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:6
#, fuzzy
msgid "Micrometer is the recommended approach for metrics with Quarkus."
msgstr "Quarkusを使ったメトリクスは、Micrometerが推奨されています。"

#. type: YAML Front Matter
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:7
#, fuzzy
msgid "kenfinnigan"
msgstr "ケンフィニガン"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:10
#, fuzzy
msgid ""
"Though Quarkus offers extensions for MicroProfile,\n"
"including metrics,\n"
"we're now recommending the use of the Micrometer extension for metrics in Quarkus with the release of 1.9."
msgstr "Quarkusでは、メトリクスを含むMicroProfileのエクステンションを提供していますが、1.9のリリースに伴い、QuarkusのメトリクスにMicrometerエクステンションを使用することを推奨するようになりました。"

#. type: Title ==
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:14
#, fuzzy
msgid "Brief MicroProfile Metrics History"
msgstr "MicroProfile Metricsの簡単な歴史"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:16
#, fuzzy
msgid ""
"During the creation of the MicroProfile Metrics specification in 2017,\n"
"Dropwizard Metrics was the most popular metrics library at that time.\n"
"It was a natural fit for MicroProfile to use DropWizard Metrics as inspiration for a metrics specification."
msgstr "2017年のMicroProfile Metrics仕様作成時、Dropwizard Metricsは当時最も人気のあるメトリクスライブラリでした。MicroProfileがDropWizard Metricsをメトリクス仕様のインスピレーションとして使用するのは自然な流れでした。"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:20
#, fuzzy
msgid ""
"The monitoring ecosystem for cloud environments has evolved considerably since then,\n"
"and that has prompted a re-evaluation of how we approach working with metrics."
msgstr "その後、クラウド環境の監視エコシステムは大きく進化し、メトリクスの扱い方も見直されるようになりました。"

#. type: Title ==
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:24
#, fuzzy
msgid "Why Micrometer?"
msgstr "なぜMicrometerなのか？"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:26
#, fuzzy
msgid ""
"During the last 3-4 years,\n"
"there's been a growing focus on the needs of Site Reliability Engineers (SREs) in monitoring the operations of many varied services.\n"
"This focus leads to driving simplicity and ease of use to the SRE world.\n"
"We don't want make the life of an SRE harder!"
msgstr "ここ3～4年、さまざまなサービスの運用を監視するサイト・リライアビリティ・エンジニア（SRE）のニーズが高まってきています。この焦点は、SREの世界にシンプルさと使いやすさを提供することにつながります。私たちは、SREの生活をより困難なものにしたくありません！"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:31
#, fuzzy
msgid ""
"The design and development of Micrometer focused on the needs of SREs from the very beginning.\n"
"A key aspect to that approach is separating out the metric implementation into the registries,\n"
"enabling different registries to customize how the metric export,\n"
"aligning with a specific monitoring tool."
msgstr "Micrometerの設計と開発は、当初からSREのニーズに焦点を当てたものでした。そのアプローチの重要な点は、メトリックの実装をレジストリに分離することで、レジストリごとにメトリックのエクスポート方法をカスタマイズし、特定のモニタリングツールに合わせることができるようにしたことです。"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:36
#, fuzzy
msgid ""
"Micrometer was built to adapt to the changing cloud native landscape while presenting a steady API for applications and libraries to use.\n"
"Each MeterRegistry implementation encapsulates its specific aggregation and reporting requirements.\n"
"There are MeterRegistry implementations available for cloud monitoring systems like Prometheus and Statsd,\n"
"as well as service providers like Datadog, New Relic or Stackdriver.\n"
"You can include more than one of these registries at the same time, too."
msgstr "Micrometerは、アプリケーションやライブラリが使用するための安定したAPIを提示しながら、変化するクラウドネイティブの状況に適応するように構築されました。各MeterRegistryの実装は、その固有の集計とレポート要件をカプセル化しています。Prometheus や Statsd などのクラウド監視システムや、Datadog、New Relic、Stackdriver などのサービスプロバイダーで利用できる MeterRegistry の実装があります。これらのレジストリを同時に複数含めることも可能です。"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:42
#, fuzzy
msgid ""
"While Micrometer has an API for applications to use,\n"
"practical usage is more focused on the MeterBinder abstraction.\n"
"MeterBinders allow instrumentation for application libraries to be added later.\n"
"It is even better when your application framework can register discovered MeterBinders on your behalf."
msgstr "Micrometerにはアプリケーションが利用するためのAPIが用意されていますが、実用的にはMeterBinderという抽象化された機能に重きが置かれています。MeterBinderを使えば、アプリケーション・ライブラリのインストゥルメンテーションを後から追加することができます。アプリケーションフレームワークが、発見されたMeterBindersを代理で登録することができれば、さらによいでしょう。"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:47
#, fuzzy
msgid ""
"Micrometer does follow different naming conventions than Dropwizard or MP Metrics, for a few reasons.\n"
"First, it uses a dot notation for all metric names, e.g. my.metric.name.\n"
"Each registry implementation can then apply its own naming convention to convert that name into something that matches its convention.\n"
"The Prometheus MeterRegistry converts my.metric.name into my_metric_name, for example.\n"
"Second, Micrometer was built around the notion of dimensional metrics, rather than adapting to it later."
msgstr "micrometerは、DropwizardやMP Metricsとは異なる命名規則に従っています。まず、my.metric.nameのように、すべてのメトリック名にドット表記を使用します。各レジストリの実装では、独自の命名規則を適用して、その名前をその規則に一致するものに変換することができます。Prometheus MeterRegistryは、例えば、my.metric.nameをmy_metric_nameに変換しています。第二に、Micrometerは、次元メトリクスの概念に後から適応するのではなく、次元メトリクスの概念を中心に構築されています。"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:53
#, fuzzy
msgid ""
"Another benefit to using Micrometer is its usage in the wider Java ecosystem.\n"
"Spring Boot and Micronaut both use Micrometer, amongst others.\n"
"In an environment where SREs are monitoring instances of different Java frameworks,\n"
"having them all produce metrics with the same names and dimensions is incredibly beneficial."
msgstr "Micrometerを使用するもう一つの利点は、より広いJavaエコシステムで使用されていることです。Spring BootとMicronautはどちらもMicrometerを使用しており、その他にも様々なものがあります。SREが異なるJavaフレームワークのインスタンスを監視している環境では、すべてのインスタンスが同じ名前とディメンションを持つメトリクスを生成することは、非常に有益です。"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:58
#, fuzzy
msgid "For example, we likely have a metric for an HTTP endpoint like below:"
msgstr "例えば、以下のようなHTTPエンドポイントのメトリックがあるとします："

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:66
#, fuzzy
msgid ""
"With Quarkus,\n"
"the Micrometer extension emits the same HTTP endpoint metric irrespective of whether it was created by JAX-RS,\n"
"Vert.x, or Undertow without the developer needing to add anything to their code.\n"
"The only effort required is to activate metrics."
msgstr "Quarkusでは、Micrometerエクステンションは、JAX-RS、Vert.x、undertowのいずれで作成されたかに関係なく、開発者がコードに何も追加しなくても同じHTTPエンドポイントメトリクスを出力する。必要な作業は、メトリックを有効にすることのみです。"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:71
#, fuzzy
msgid ""
"The http metrics emitted by the Micrometer extension is the also same as what is emitted by Spring Boot and Micronaut,\n"
"allowing SREs to work with aggregated http metrics regardless of which Java framework is used."
msgstr "Micrometerエクステンションが発するhttpメトリクスは、Spring BootやMicronautが発するものと同じであり、SREはどのJavaフレームワークを使用していても、集約されたhttpメトリクスを扱うことができるようになりました。"

#. type: Title ==
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:74
#, fuzzy
msgid "Can I still use MicroProfile Metrics?"
msgstr "MicroProfile Metricsはそのまま使えますか？"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:76
#, fuzzy
msgid ""
"The MicroProfile Metrics extension, `quarkus-smallrye-metrics`,\n"
"is still available and usable by applications.\n"
"For all the reasons outlined in <<why-micrometer>>,\n"
"Quarkus no longer recommends applications use the extension."
msgstr "MicroProfile Metricsエクステンション（ `quarkus-smallrye-metrics` ）は、現在も利用可能で、アプリケーションによって使用できます。 <<why-micrometer>> で説明したような理由から、Quarkusはアプリケーションにこの拡張機能を使用することを推奨していません。"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:81
#, fuzzy
msgid ""
"In the short to medium term,\n"
"we will be working with the MicroProfile Metrics community to evolve the specification to be aligned with Micrometer.\n"
"What that means for the specification is not likely to be known until some time in 2021."
msgstr "短中期的には、MicroProfile Metricsのコミュニティと協力して、Micrometerに沿った仕様に進化させる予定です。それが仕様にどのような意味を持つかは、2021年のある時期までわからないようです。"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:85
#, fuzzy
msgid ""
"For those that prefer to retain compatibility with MicroProfile Metrics,\n"
"despite the problems discussed in <<why-micrometer>>,\n"
"that will remain possible,\n"
"but at the discretion of application developers to make the informed choice."
msgstr "マイクロプロファイルメトリクスとの互換性を維持することを希望する場合、 <<why-micrometer>> で説明した問題にもかかわらず、それは可能ですが、アプリケーション開発者の裁量で、情報に基づいた選択をすることができます。"

#. type: Title ==
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:90
msgid "Summary"
msgstr "まとめ"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:92
#, fuzzy
msgid ""
"Since 1.8 Quarkus offered two extensions for metrics,\n"
"`quarkus-micrometer` and `quarkus-smallrye-metrics`.\n"
"With the release of 1.9,\n"
"Quarkus will be recommending `quarkus-micrometer` for use with metrics."
msgstr "1.8以降、Quarkusでは、 `quarkus-micrometer` と `quarkus-smallrye-metrics` という2つのメトリクス用エクステンションを提供しています。1.9のリリースでは、Quarkusは、メトリクスでの使用に `quarkus-micrometer` を推奨します。"

#. type: Plain Text
#: upstream/_posts/2020-10-19-micrometer-metrics.adoc:97
#, fuzzy
msgid ""
"Come play with the extension,\n"
"we love it for many reasons and hope you will too.\n"
"Reach out if you have any issues using the Micrometer extension in Quarkus!"
msgstr "私たちはこのエクステンションを多くの理由で気に入っており、皆さんもそうなることを願っています。QuarkusでMicrometerエクステンションを使用する際に問題がある場合は、ご連絡ください！"
