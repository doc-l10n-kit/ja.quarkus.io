msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:2
msgid "post"
msgstr "post"

#. type: Title =
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:10
#, fuzzy
msgid "DataCater uses Quarkus to make Data Streaming more accessible"
msgstr "DataCater、Quarkusを使用してデータストリーミングをより身近なものに"

#. type: YAML Front Matter
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:4
#, fuzzy
msgid "2023-02-09"
msgstr "2023-02-09"

#. type: YAML Front Matter
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:5
msgid "user-story"
msgstr "user-story"

#. type: YAML Front Matter
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:6
#, fuzzy
msgid "DataCater provides a developer-friendly ETL platform. Learn why it chose Quarkus for its recent rewrite."
msgstr "DataCaterは、開発者向けのETLプラットフォームを提供しています。最近の書き換えにQuarkusを採用した理由をご紹介します。"

#. type: YAML Front Matter
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:7
#, fuzzy
msgid "ssprenger"
msgstr "スプレーネージャー"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:12
#, fuzzy
msgid ""
"This article gives a brief overview of the data streaming platform DataCater, discusses how we moved from Scala Play! and Kafka Streams to Quarkus, and\n"
"presents why we think that Quarkus is an exceptional framework for developing cloud-native Java applications."
msgstr "この記事では、データストリーミングプラットフォームDataCaterの概要を説明し、Scala Play！やKafka StreamsからQuarkusに移行した経緯について述べ、QuarkusがクラウドネイティブなJavaアプリケーションを開発するための優れたフレームワークだと考える理由を提示する。"

#. type: Title ==
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:15
#, fuzzy
msgid "What is DataCater?"
msgstr "DataCaterとは？"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:17
#, fuzzy
msgid ""
"https://datacater.io[DataCater^] is a real-time, cloud-native data pipeline platform based on Apache Kafka and Kubernetes. It allows users to build streaming data pipelines that stream records between different\n"
"Apache Kafka topics and can apply filters or transforms to the records on the way.\n"
"Given its focus on data scientists and data engineers as target users, DataCater enables users\n"
"to develop transforms in Python. It provides an https://www.loom.com/share/15947f13e71540948e3f9d57eac64976[interactive, UI-based preview of streaming data pipelines^]\n"
"and uses Kubernetes as the runtime for pipeline deployments."
msgstr "link:https://datacater.io[DataCaterは] 、Apache KafkaとKubernetesをベースとしたリアルタイムでクラウドネイティブなデータパイプラインプラットフォームです。異なるKafkaトピック間でレコードをストリーミングするストリーミングデータパイプラインを構築することができ、途中でレコードにフィルタや変換を適用することができます。データサイエンティストやデータエンジニアをターゲットユーザーとしているため、DataCaterはPythonでトランスフォームを開発することが可能です。また、 link:https://www.loom.com/share/15947f13e71540948e3f9d57eac64976[ストリーミングデータパイプラインをUIベースでインタラクティブにプレビュー] でき、パイプラインのデプロイメントにはKubernetesをランタイムとして使用します。"

#. type: Title ==
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:23
#, fuzzy
msgid "Why did DataCater choose Quarkus?"
msgstr "DataCaterはなぜQuarkusを選んだのでしょうか？"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:25
#, fuzzy
msgid ""
"DataCater was created in 2020 and initially built its control plane on top of the Scala framework https://www.playframework.com/[Play^] and implemented pipelines with https://kafka.apache.org/documentation/streams/[Kafka Streams^].\n"
"Over time, we experienced the following limitations and issues with the chosen technologies:"
msgstr "DataCaterは2020年に誕生し、当初はScalaフレームワーク link:https://www.playframework.com/[Playの] 上にコントロールプレーンを構築し、Kafka link:https://kafka.apache.org/documentation/streams/[Streamsで] パイプラインを実装していました。時間の経過とともに、選択した技術に以下のような制限や問題が発生しました："

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:28
#, fuzzy
msgid "*Inefficient resource usage:* Kafka Streams applications consume a considerable amount of main memory, making it quite expensive to operate at scale."
msgstr "*非効率なリソース使用：* Kafka Streamsアプリケーションは、かなりの量のメインメモリを消費するため、大規模な運用にはかなりのコストがかかります。"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:29
#, fuzzy
msgid "*Long startup times:* Starting a Kafka Streams application can take up to a few minutes, which has a negative impact on the availability of streaming data pipelines."
msgstr "*起動時間が長い：* Kafka Streamsアプリケーションの起動には数分かかることがあり、ストリーミングデータパイプラインの可用性に悪影響を及ぼします。"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:30
#, fuzzy
msgid ""
"*Restriction to intra-cluster streaming:* By default, Kafka Streams can only stream data between topics of the same Apache Kafka cluster. When facing use cases that stream data between different Kafka clusters, for instance, between a production and test cluster,\n"
"we had to employ additional tooling, e.g., MirrorMaker 2."
msgstr "*クラスタ内ストリーミングの制限：* デフォルトでは、Kafka Streamsは同じApache Kafkaクラスタのトピック間でしかデータをストリーミングできません。異なるKafkaクラスタ間、例えば本番クラスタとテストクラスタ間でデータをストリーミングするユースケースに直面した場合、MirrorMaker 2などの追加ツールを採用する必要がありました。"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:32
#, fuzzy
msgid "*No support for Java 17:* The current Play! version 2.8 does not support running on top of Java 17."
msgstr "*Java 17のサポートなし：* 現在のPlay！バージョン2.8は、Java 17上での実行をサポートしていません。"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:34
#, fuzzy
msgid "Especially the first two issues, inefficient resource usage and long startup times, hurt a lot when operating in the cloud at scale."
msgstr "特に最初の2つの問題、非効率なリソース使用と長い起動時間は、クラウドで大規模に運用する際に大きな痛手となる。"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:36
#, fuzzy
msgid ""
"In 2022, we rewrote DataCater to implement lots of learnings that we made when working with early users.\n"
"Using this unique opportunity, we also switched from Play! and Kafka Streams to Quarkus,\n"
"thus using Quarkus for implementing both our control plane and the data pipelines."
msgstr "2022年、私たちはDataCaterを書き直し、初期ユーザーとの共同作業で得た多くの学びを実装しました。このユニークな機会を利用して、私たちはPlay！やKafka StreamsからQuarkusに切り替え、コントロールプレーンとデータパイプラインの両方の実装にQuarkusを使用することにしました。"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:42
#, fuzzy
msgid ""
"With Quarkus, we are able to bring the best of cloud native and messaging applications together. Streaming messages, especially in the context of Apache Kafka, is still a Java-dominated environment, while the traditional Java stack lacks the characteristics of cloud-native applications, like small footprints, fast startups, and self-containment.\n"
"*-Hakan Lofcali, CTO, DataCater*"
msgstr "Quarkusを使えば、クラウドネイティブアプリケーションとメッセージングアプリケーションの良いところを一緒にすることができます。メッセージのストリーミング、特にApache Kafkaの文脈では、いまだにJavaが支配的な環境であり、従来のJavaスタックには、フットプリントが小さい、スタートアップが速い、自己完結しているなどのクラウドネイティブアプリケーションの特性が欠けています。 *-DataCater社CTO、Hakan Lofcali氏*"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:46
#, fuzzy
msgid "In the following, we list the main reasons why we chose Quarkus over other Java frameworks:"
msgstr "以下では、他のJavaフレームワークではなく、Quarkusを選択した主な理由を列挙します："

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:48
#, fuzzy
msgid "*Versatility:* We cannot only implement the API of our control plane with the Quarkus RESTeasy extension but can also employ Quarkus as the base for implementing streaming data pipelines using its https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging^] extension."
msgstr "*汎用性：* QuarkusのRESTeasyエクステンションを使用してコントロールプレーンのAPIを実装するだけでなく、 link:https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] エクステンションを使用してストリーミングデータパイプラインを実装するためのベースとしてQuarkusを使用することもできます。"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:49
#, fuzzy
msgid ""
"*Dev services:* Quarkus' dev services help us to spin up dependencies, like PostgreSQL or Apache Kafka, very fast and provide an outstanding developer experience. Our developers can focus on their job instead of\n"
"messing with the configuration of tooling."
msgstr "*開発サービス：* Quarkusの開発サービスは、PostgreSQLやApache Kafkaのような依存関係を高速に立ち上げ、優れた開発者体験を提供します。開発者は、ツールの設定に煩わされることなく、自分の仕事に集中できます。"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:51
#, fuzzy
msgid "*Support for native executables:* Quarkus allows us to easily build native executables, which are very beneficial when operating in a cloud context. They require much fewer resources and achieve faster startup times."
msgstr "*ネイティブ実行可能ファイルのサポート：* Quarkusでは、ネイティブの実行可能ファイルを簡単にビルドできます。必要なリソースが大幅に少なくなり、起動時間も短縮されます。"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:52
#, fuzzy
msgid "*Minimal footprint:* Quarkus’ build time optimizations allow for smaller footprints of JVM- and GraalVM-based containers."
msgstr "*最小限のフットプリント：* Quarkusのビルド時間の最適化により、JVMおよびGraalVMベースのコンテナのフットプリントが小さくなります。"

#. type: Title ==
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:54
msgid "References"
msgstr "参照"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:56
#, fuzzy
msgid "https://github.com/DataCater/datacater[DataCater GitHub repository^]"
msgstr "link:https://github.com/DataCater/datacater[DataCater GitHubリポジトリ]"

#. type: Plain Text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:57
#, fuzzy
msgid "https://docs.datacater.io[DataCater documentation^]"
msgstr "link:https://docs.datacater.io[DataCaterのドキュメント]"
