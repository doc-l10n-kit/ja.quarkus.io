msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:2
msgid "post"
msgstr "post"

#. type: YAML Front Matter
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:3
#, fuzzy
msgid "A Shot of Quarkus with a Cassandra Chaser: Time for Faster Microservices"
msgstr "QuarkusのショットとCassandraのチェイサー：より高速なマイクロサービスの時代へ"

#. type: YAML Front Matter
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:4
#, fuzzy
msgid "2020-07-09"
msgstr "2020-07-09"

#. type: YAML Front Matter
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:5
#, fuzzy
msgid "extension cassandra"
msgstr "エクステンションカッサンドラ"

#. type: YAML Front Matter
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:6
#, fuzzy
msgid "With the new Quarkus extension for Apache Cassandra® released in Quarkus 1.6, all it takes is a few lines of code to connect to and access your data stored in Cassandra and you get all of the benefits of Quarkus (fast-startup, low resource utilization, reactive programming)."
msgstr "Quarkus 1.6でリリースされたApache Cassandra®用の新しいQuarkusエクステンションを使用すると、数行のコードでCassandraに保存されているデータに接続してアクセスするだけで、Quarkusの利点（高速起動、低リソース使用、リアクティブプログラミング）をすべて得ることができます。"

#. type: YAML Front Matter
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:7
#, fuzzy
msgid "csplinter"
msgstr "へきれき"

#. type: Plain Text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:10
#, fuzzy
msgid "With the new https://quarkus.io/guides/cassandra[Quarkus extension for Apache Cassandra]® released in Quarkus 1.6, all it takes is a few lines of code to connect to and access your data stored in Cassandra and you get all of the benefits of Quarkus (fast-startup, low resource utilization, reactive programming)."
msgstr "Quarkus 1.6でリリースされた link:https://quarkus.io/guides/cassandra[Apache Cassandra®用の] 新しい link:https://quarkus.io/guides/cassandra[Quarkus] エクステンションを使用すると、数行のコードでCassandraに保存されているデータに接続してアクセスするだけで、Quarkusの利点（高速起動、低リソース使用、リアクティブプログラミング）をすべて得ることができます。"

#. type: Plain Text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:12
#, fuzzy
msgid "To enable the extension, add `cassandra-quarkus-client` to your application. You can do this by including the following dependency or by selecting Cassandra client in the https://code.quarkus.io/[project generator]."
msgstr "エクステンションを有効にするには、アプリケーションに `cassandra-quarkus-client` を追加します。これは、以下の依存関係を含めるか、 link:https://code.quarkus.io/[プロジェクト・ジェネレーターで] Cassandraクライアントを選択することで実行できます。"

#. type: Plain Text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:24
#, fuzzy
msgid "The most common database connection settings can be configured directly in an `application.properties` file on the classpath, see below for an example. All of the settings and features of the https://docs.datastax.com/en/developer/java-driver/latest[DataStax Java driver for Cassandra] are available to you and the https://docs.datastax.com/en/developer/java-driver/latest/manual/core/configuration/reference/[advanced driver settings] can be placed in an `application.conf` file on the classpath."
msgstr "最も一般的なデータベース接続設定は、クラスパス上の `application.properties` ファイルに直接設定できます。例として以下を参照してください。 link:https://docs.datastax.com/en/developer/java-driver/latest[Cassandra用DataStax Javaドライバーの] すべての設定と機能を利用でき、 link:https://docs.datastax.com/en/developer/java-driver/latest/manual/core/configuration/reference/[高度なドライバー] 設定はクラスパス上の `application.conf` ファイルに配置することができます。"

#. type: Plain Text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:42
#, fuzzy
msgid "Once the database connection is configured, simply inject the https://www.javadoc.io/static/com.datastax.oss.quarkus/cassandra-quarkus-client/1.0.0-alpha1/com/datastax/oss/quarkus/runtime/api/session/QuarkusCqlSession.html[`QuarkusCqlSession`] in your application to get started. For seamless integration with https://quarkus.io/guides/getting-started-reactive[reactive applications], there is an `executeReactive` method on the `QuarkusCqlSession` that exposes Mutiny-compatible reactive execution methods and direct retrieval of Mutiny types."
msgstr "データベース接続が設定されたら、単純にインジェクションして link:https://www.javadoc.io/static/com.datastax.oss.quarkus/cassandra-quarkus-client/1.0.0-alpha1/com/datastax/oss/quarkus/runtime/api/session/QuarkusCqlSession.html[`QuarkusCqlSession`] をアプリケーションに追加することで、開始することができます。 link:https://quarkus.io/guides/getting-started-reactive[リアクティブアプリケーションと] シームレスに統合するために、 `QuarkusCqlSession` 、Mutiny互換のリアクティブ実行メソッドとMutinyタイプの直接取得を公開する `executeReactive` メソッドがあります。"

#. type: Plain Text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:59
#, fuzzy
msgid "Mutiny types are also available when using the Cassandra Java driver's https://docs.datastax.com/en/developer/java-driver/4.7/manual/mapper/[object mapper]. With the Quarkus Cassandra extension, you can easily define your mapped entities and DAOs and then inject your DAOs in your reactive services in just a few lines of code!"
msgstr "Cassandra Javaドライバの link:https://docs.datastax.com/en/developer/java-driver/4.7/manual/mapper/[オブジェクトマッパーを] 使用する場合、Mutinyタイプも利用できます。Quarkus Cassandraエクステンションを使用すると、マッピングされたエンティティやDAOを簡単に定義し、数行のコードでリアクティブサービスにDAOを注入することができます！"

#. type: Plain Text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:61
#, fuzzy
msgid "For example, suppose that you have a `Product` entity, a `ProductDao` and a `ProductMapper` with standard CRUD operations, you can expose your DAO as an injectable bean:"
msgstr "例えば、 `Product` エンティティ、 `ProductDao` 、 `ProductMapper` に標準的な CRUD 操作があるとすると、DAO を注入可能な Bean として公開することができます："

#. type: Plain Text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:80
#, fuzzy
msgid "… then inject it in a `ProductService` component, as follows:"
msgstr "... その後、次のように `ProductService` のコンポーネントに注入します："

#. type: Plain Text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:96
#, fuzzy
msgid "You can retrieve this example and many others in https://github.com/datastax/cassandra-quarkus/blob/main/documentation/src/main/asciidoc/cassandraclient.adoc[the quickstart guide], which includes how to use the Quarkus Cassandra extension in https://quarkus.io/guides/building-native-image[native mode]. For users that are looking to get up and running in minutes with Cassandra, try out the free-tier in https://astra.datastax.com/[DataStax Astra]."
msgstr "Quarkus Cassandraエクステンションを link:https://quarkus.io/guides/building-native-image[ネイティブモードで] 使用する方法を含む link:https://github.com/datastax/cassandra-quarkus/blob/main/documentation/src/main/asciidoc/cassandraclient.adoc[クイックスタートガイド] で、この例と他の多くの例を取り出すことができます。Cassandraを数分で立ち上げたいと考えているユーザーは、 link:https://astra.datastax.com/[DataStax Astraの] フリーティアを試してみてください。"

#. type: Plain Text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:98
#, fuzzy
msgid "We value your feedback so please don't hesitate to open feature requests and bug reports in the https://github.com/datastax/cassandra-quarkus[extensions GitHub repository], ask questions at https://community.datastax.com/[community.datastax.com], or join the https://cassandra.apache.org/community/[Cassandra] and https://quarkus.io/community/[Quarkus] communities."
msgstr "お客様のフィードバックを重視していますので、遠慮なく link:https://github.com/datastax/cassandra-quarkus[エクステンションのGitHub] リポジトリで機能リクエストやバグレポートを開くか、 link:https://community.datastax.com/[community.datastax.com] で質問するか、 link:https://cassandra.apache.org/community/[Cassandra] および link:https://quarkus.io/community/[Quarkusの] コミュニティに参加してください。"

#. type: Plain Text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:100
#, fuzzy
msgid "Happy subatomic coding!"
msgstr "ハッピーサブアトミックコーディング"
