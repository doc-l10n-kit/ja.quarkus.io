msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. type: YAML Front Matter
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:2
msgid "post"
msgstr "post"

#. type: YAML Front Matter
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:3
msgid "Getting Started with AMQP in your Quarkus application"
msgstr "QuarkusアプリケーションでのAMQP入門"

#. type: YAML Front Matter
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:4
msgid "2021-02-02"
msgstr "2021-02-02"

#. type: YAML Front Matter
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:5
msgid "amqp"
msgstr "amqp"

#. type: YAML Front Matter
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:6
msgid "How to build a Quarkus application using AMQP in less than 10 minutes"
msgstr "AMQPを使用したQuarkusアプリケーションを10分以内に構築する方法"

#. type: YAML Front Matter
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:7
msgid "cescoffier"
msgstr "cescoffier"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:10
msgid ""
"https://www.amqp.org/[AMQP 1.0] is a standard for passing messages between applications or organizations.\n"
"It connects systems, feeds business processes with the information they need, and reliably handles communication between systems.\n"
"AMQP is a robust and mature protocol widely used in event-driven applications."
msgstr "link:https://www.amqp.org/[AMQP 1.0] は、アプリケーションや組織間でメッセージを渡すための標準仕様です。AMQP はシステムを接続し、ビジネスプロセスに必要な情報を供給し、システム間の通信を確実に処理します。AMQP は、イベント駆動型のアプリケーションで広く使用されている堅牢で成熟したプロトコルです。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:14
msgid ""
"This post is the equivalent of the https://quarkus.io/blog/getting-started-kafka/[Kafka getting started post], but focuses on the usage of AMQP.\n"
"You will learn how to get started with AMQP in your Quarkus application in less than ten steps.\n"
"We will use https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/2.7/index.html[SmallRye Reactive Messaging] - a declarative approach to building event-driven microservices."
msgstr "この投稿は、 link:https://quarkus.io/blog/getting-started-kafka/[Kafkaの入門記事] と同等の内容を説明しますが、AMQPの使用方法に焦点を当てています。QuarkusアプリケーションでAMQPを使い始める方法を10ステップ以内で学ぶことができます。イベント駆動型マイクロサービスを構築するための宣言的アプローチである link:https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/2.7/index.html[SmallRye Reactive Messaging] を使用します。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:18
msgid "The complete code is available from https://github.com/cescoffier/getting-started-quarkus-amqp[GitHub]."
msgstr "完全なコードは link:https://github.com/cescoffier/getting-started-quarkus-amqp[GitHub] から入手できます。"

#. type: Title ==
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:20
msgid "Step 1 - Generate your project"
msgstr "ステップ 1 - プロジェクトの生成"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:22
msgid ""
"Let's start with the very beginning, getting a new project structure with the right dependencies.\n"
"Go to https://code.quarkus.io, enter your group id and artifact id.\n"
"Then in the extension list, select:"
msgstr "最初の一歩として、正しい依存関係を持つ新しいプロジェクト構造を取得してみましょう。 https://code.quarkus.io  にアクセスして、グループIDとアーティファクトIDを入力します。そして、エクステンションのリストで以下を選択します:"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:26
msgid "SmallRye Reactive Messaging - AMQP Connector"
msgstr "SmallRye Reactive Messaging - AMQP コネクタ"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:27
msgid "RESTEasy Jackson"
msgstr "RESTEasy Jackson"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:29
msgid "image:/assets/images/posts/getting-started-amqp/getting-started-amqp-code.png[]"
msgstr "image:/assets/images/posts/getting-started-amqp/getting-started-amqp-code.png[]"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:31
msgid "You can disable the \"Example Code\" to avoid the generated project containing examples."
msgstr "\"Example Code\" を無効にすることで、生成されたプロジェクトにサンプルコードが含まれないようにすることができます。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:33
msgid "Then, click on __Generate your application__, download the project as a zip file, unzip it, and load it in your favorite IDE."
msgstr "そして、 _Generate your application_ をクリックして、プロジェクトをzipファイルとしてダウンロードし、解凍して、お気に入りのIDEにロードします。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:35
msgid ""
"If you opened the generated `pom.xml`, you would see that the `quarkus-smallrye-reactive-messaging-amqp`  and `quarkus-resteasy-jackson`\n"
"dependencies are declared, so we're ready to write some code."
msgstr "生成された `pom.xml` を開くと、 `quarkus-smallrye-reactive-messaging-amqp` と `quarkus-resteasy-jackson` の依存関係が宣言されていることがわかります。なのでコードを書く準備が出来ています。"

#. type: Title ==
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:38
msgid "Step 2 - What are we going to exchange?"
msgstr "ステップ2 - 何を交換するか?"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:40
msgid ""
"We need something to exchange.\n"
"Without much originality, let's say we will send and receive `Movie` objects.\n"
"In your project, create the `org.acme.Movie` class with the following content:"
msgstr "交換するものが必要です。あまりオリジナリティを持たずに、 `Movie` オブジェクトを送受信するとしましょう。プロジェクトの中で、以下の内容の `org.acme.Movie` クラスを作成します:"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:56
msgid ""
"With AMQP, we exchange http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#section-message-format[messages], which can have multiple _data_ sections (or multiple AMQP sequences, or a single AMQP value section).\n"
"In our application, as we are exchanging `Movie` object, it encodes the instances as JSON and transfers it in a single _data_ section.\n"
"The `content-type` header is set to `application/json`."
msgstr "AMQPでは、複数の _データ_ セクション(または複数のAMQPシーケンス、または単一のAMQP値セクション)を持つことができる link:http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#section-message-format[メッセージ] を交換します。私たちのアプリケーションでは、 `Movie` オブジェクトを交換しているので、インスタンスを JSON としてエンコードし、単一の _データ_ セクションで転送しています。 `content-type` ヘッダは `application/json` です。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:60
msgid ""
"AMQP messages are sent to a destination.\n"
"To keep things simple, let's name it __movies__."
msgstr "AMQPメッセージを送信先に送信します。簡単にするために、 __movies__ という名前にしてみましょう。"

#. type: Title ==
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:63
msgid "Step 3 - Configure the application"
msgstr "ステップ3 - アプリケーションの設定"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:65
msgid ""
"As said above, we will use Reactive Messaging.\n"
"When you use Reactive Messaging, you send messages to a channel and receive them from another channel.\n"
"These channels are mapped to the underlying messaging technology by configuration.\n"
"We must indicate that our reception and publication channels will use the __movies__ address in our application.\n"
"In `src/main/resources/application.properties`, add the following content:"
msgstr "上記の通り、Reactive Messagingを使用します。リアクティブメッセージングを使用する場合、あるチャンネルにメッセージを送信し、別のチャンネルからメッセージを受信します。これらのチャンネルは、設定によって基礎となるメッセージング技術にマッピングされます。受信および公開チャンネルがアプリケーションで __movies__ アドレスを使用することを示す必要があります。 `src/main/resources/application.properties` で、次の内容を追加します:"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:88
msgid "After having configured the broker location and credentials (`amqp-` properties), we configure our two channels: `movies-in` (receiving the records) and `movies-out` (publishing the records)."
msgstr "ブローカーの場所と資格情報( `amqp-` プロパティー)を設定した後、 `movies-in` (レコードを受信)と `movies-out` (レコードを公開)の2つのチャンネルを設定します。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:90
msgid ""
"We use the `mp.messaging.incoming.movies-in` prefix to configure the channel.\n"
"The `connector` attribute indicates who's responsible for this channel, here the AMQP connector.\n"
"We also need to specify the consumed destination using the `address` attribute."
msgstr "チャンネルの設定には、 `mp.messaging.incoming.movies-in` というプレフィックスを使用します。 `connector` 属性は、このチャネルの責任者(ここでは AMQP コネクタ)を示します。また、 `address` 属性を使用して、消費先を指定する必要があります。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:94
msgid ""
"To configure the outbound `movies-out` channel, we use the `mp.messaging.outgoing.movies-out` prefix.\n"
"In addition to indicating who's responsible for that channel, we also need to configure the address."
msgstr "アウトバウンド `movies-out` チャネルを設定するには、 `mp.messaging.outgoing.movies-out` プレフィックスを使用します。そのチャネルを担当するコネクタを示すだけでなく、アドレスも設定する必要があります。"

#. type: Title ==
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:97
msgid "Step 4 - Publishing movies to AMQP"
msgstr "ステップ4 - AMQPへのムービーの公開"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:99
msgid ""
"Now, it's time to send messages.\n"
"Create the `org.acme.MovieProducer` class with the following content:"
msgstr "さて、いよいよメッセージを送信する時が来ました。以下の内容で `org.acme.MovieProducer` クラスを作成します:"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:125
msgid ""
"In this class, we inject an `Emitter,` i.e., an object responsible for sending a message to a channel.\n"
"This emitter is attached to the `movies-out` channel (and will send messages to AMQP).\n"
"The connector automatically encoded the content as JSON and set the `content-type` header."
msgstr "このクラスでは、 `Emitter,` 、つまりチャンネルへのメッセージ送信を担当するオブジェクトを注入します。このエミッタは `movies-out` チャンネルにアタッチされています (AMQP にメッセージを送信します)。コネクタは自動的にコンテンツを JSON としてエンコードし、 `content-type` ヘッダを設定します。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:129
msgid "You need to make sure your payload can be encoded to JSON."
msgstr "ペイロードが JSON にエンコードできることを確認する必要があります。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:131
msgid "So, the rest of our application can use the `send` method to send a movie to our AMQP destination."
msgstr "そこで、私たちのアプリケーションの残りの部分は、 `send` メソッドを使用して、AMQP の宛先にムービーを送信することができます。"

#. type: Title ==
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:133
msgid "Step 5 - Consuming movies"
msgstr "ステップ5 - 映画を消費する"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:135
msgid "Let's now look at the other side and retrieve the movies from AMQP."
msgstr "今度は反対側に目を向けて、AMQPからムービーを取得してみましょう。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:158
msgid "Here, we use the `@Incoming` annotation to indicate to Quarkus to call the `receive` method for every received record."
msgstr "ここでは、 `@Incoming` アノテーションを使用して、受信したレコードごとに `receive` メソッドを呼び出すようにQuarkusに指示しています。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:160
msgid "Remember, the movie is encoded into JSON, so we need to help the connector produce a `Movie` from the received JSON."
msgstr "ムービーは JSON にエンコードされていることを思い出してください。コネクタが受信した JSON から `Movie` を生成するのを支援する必要があります。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:162
msgid "Create the `org.acme.JsonToObjectConverter` class with the following content:"
msgstr "以下の内容の `org.acme.JsonToObjectConverter` クラスを作成します:"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:194
msgid ""
"This class is a _converter_.\n"
"It maps the content of a `Message` to another type.\n"
"In the `canConvert` method, we verify that the incoming message is coming from AMQP (so contain the `IncomingAmqpMetadata` metadata) and that the content-type is set to `application/json`.\n"
"The `convert` method maps the received `JsonObject` into the target type (`Movie` in our case)."
msgstr "このクラスは _converter_ です。 `Message` の内容を別の型にマッピングします。 `canConvert` メソッドでは、受信メッセージが AMQP からのものであること (つまり `IncomingAmqpMetadata` メタデータを含むこと) と、content-type が `application/json` に設定されていることを確認します。 `convert` メソッドは、受信した `JsonObject` をターゲット型 (私たちの場合は `Movie` ) にマッピングします。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:199
msgid "With this converter, our `consume` method will receive the `Movie` objects."
msgstr "このコンバータにより、 `consume` メソッドは `Movie` オブジェクトを受け取ります。"

#. type: Title ==
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:201
msgid "Step 6 - Sending movies from a REST endpoint"
msgstr "ステップ6 - RESTエンドポイントからのムービーの送信"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:203
msgid ""
"It's quite common to send messages to AMQP from a REST endpoint.\n"
"To do this, create the `org.acme.MovieResource` class with the following content:"
msgstr "RESTエンドポイントからAMQPにメッセージを送信することはよくあることです。これを行うには、以下の内容で `org.acme.MovieResource` クラスを作成します:"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:235
msgid ""
"This class uses the `MovieProducer` we implemented above to send the `movies`.\n"
"You could also use an `Emitter` directly."
msgstr "このクラスは、上で実装した `MovieProducer` を使用して `movies` を送信します。 `Emitter` を直接使用することもできます。"

#. type: Title ==
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:238
msgid "Step 7 - Let's get this running!"
msgstr "ステップ7 - これを実行してみましょう!"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:240
msgid ""
"Well, first, we need an AMQP broker, for example http://activemq.apache.org/components/artemis/[Apache ActiveMQ Artemis].\n"
"You can follow the http://activemq.apache.org/components/artemis/documentation/latest/using-server.html[Getting Started with Artemis] documentation, or use the following `docker-compose.yaml` file:"
msgstr "まず、AMQPブローカー、例えば link:http://activemq.apache.org/components/artemis/[Apache ActiveMQ Artemis] が必要です。 link:http://activemq.apache.org/components/artemis/documentation/latest/using-server.html[Getting Started with Artemis] のドキュメントに従うか、以下の `docker-compose.yaml` ファイルを使用してください:"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:260
msgid "Copy the `docker-compose.yaml` file in your project, and from a terminal, start your broker with: `docker-compose up -d'"
msgstr "プロジェクト内に `docker-compose.yaml` ファイルをコピーし、ターミナルから、ブローカーを起動します: `docker-compose up -d`"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:262
msgid "Then, run the application using:"
msgstr "そして、アプリケーションを次のように実行します:"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:269
msgid ""
"The application runs in dev mode, meaning that you can still update the code.\n"
"It will reload it automatically."
msgstr "アプリケーションは開発モードで動作します。つまり、コードをまだ変更することが出来、変更した場合、自動的にリロードされます。"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:272
msgid "In another terminal, emit a few HTTP POST request such as:"
msgstr "別の端末で、次のようなHTTP POSTリクエストをいくつか送信します:"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:302
msgid "In the terminal running the application, you will see:"
msgstr "アプリケーションを実行しているターミナルでは、以下のように表示されます:"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:312
msgid "It works!"
msgstr "動いています!"

#. type: Title ==
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:314
msgid "Step 8 - Native packaging"
msgstr "ステップ8 - ネイティブパッケージ"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:316
msgid "If you have https://quarkus.io/guides/building-native-image[GraalVM installed and configured correctly], you can package this application as a native executable:"
msgstr "link:https://quarkus.io/guides/building-native-image[GraalVMが正しくインストールされ、設定されている場合] 、このアプリケーションをネイティブ実行可能ファイルとしてパッケージ化することができます:"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:323
msgid "Then, execute your native executable with: `./target/getting-started-amqp-1.0.0-SNAPSHOT-runner`, and you get a Quarkus application using AMQP starting in a few milliseconds and consuming a ridiculous amount of memory: only 33Mb after 100 ingested records!"
msgstr "そして、 `./target/getting-started-amqp-1.0.0-SNAPSHOT-runner` でネイティブ実行可能ファイルを実行すると、AMQPを使用したQuarkusアプリケーションが数ミリ秒で起動し、とんでもない量:100レコードを取り込んでもたったの33MB!になります。"

#. type: Title ==
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:332
msgid "Summary"
msgstr "まとめ"

#. type: Plain Text
#: upstream/_posts/2021-02-02-getting-started-amqp.adoc:334
msgid ""
"In less than 10 minutes, we have a new Quarkus application using AMQP.\n"
"If you want to go further, check the https://quarkus.io/guides/amqp[AMQP guide]."
msgstr "10分もしないうちに、AMQPを使った新しいQuarkusアプリケーションができました。もっと詳しく知りたい方は、 link:https://quarkus.io/guides/amqp[AMQPガイド] をチェックしてみてください。"
